[00001]                   ; -------------------------------------------------------------------
[00002]                   ; This file generated by ElfC, based on SubC
[00003]                   ; SubC Copyright 2012-2025 by Nils Holm
[00004]                   ; -------------------------------------------------------------------
<00000>                   #include include/ops_c.inc
<00001>                   ;------------------------------------------------------
<00002>                   ; ElfC Asm/02 Opcodes
<00003>                   ;------------------------------------------------------
<00004>                   
<00005>                   .op "PUSH","N","9$1 73 8$1 73"
<00006>                   .op "POP","N","60 72 A$1 F0 B$1"
<00007>                   .op "CALL","W","D4 H1 L1"
<00008>                   .op "RTN","","D5"
<00009>                   .op "CLC","","FC 00"
<00010>                   .op "STC","","FF 00"
<00011>                   .op "COPY","NR","8$1 A$2 9$1 B$2"
<00012>                   .op "LOAD","NW","F8 L2 A$1 F8 H2 B$1"
<00013>                   .op "MATCH","NW","8$1 FF L2 52 9$1 7F H2 F1"
<00014>                   .op "BRKPT","","79 D1"
<00015>                   .op "ADDR16","NR","8$2 52 8$1 F4 A$1 9$2 52 9$1 74 B$1"
<00016>                   .op "SUBR16","NR","8$2 52 8$1 F7 A$1 9$2 52 9$1 77 B$1"
<00017>                   .op "GOSUB","W","D9 L1"
<00018>                   .op "RSUB","","C0 21 00"
<00019>                   
<00020>                   ;------------------- end ops_c.inc --------------------
<00000>                   #include include/os_api.inc
<00001>                   ;--------------------------------------------------------------------
<00002>                   ; Elf/OS and Mini/DOS Kernel API
<00003>                   ;--------------------------------------------------------------------
<00004>                   
<00005> 0000:             O_OPEN:       equ    0306h             ; open a file
<00006> 0000:             O_READ:       equ    0309h             ; read from file
<00007> 0000:             O_WRITE:      equ    030ch             ; write to file
<00008> 0000:             O_SEEK:       equ    030fh             ; seek to file position
<00009> 0000:             O_CLOSE:      equ    0312h             ; close file
<00010> 0000:             O_DELETE:     equ    0318h             ; delete a file
<00011> 0000:             O_RENAME:     equ    031bh             ; rename a file
<00012> 0000:             O_TYPE:       equ    0330h             ; console character output
<00013> 0000:             O_MSG:        equ    0333h             ; console string output
<00014> 0000:             O_READKEY:    equ    0336h             ; console character input
<00015> 0000:             O_INPUT:      equ    0339h             ; console string input
<00016> 0000:             O_INMSG:      equ    034bh             ; console inline messae output
<00017> 0000:             O_GETDEV:     equ    034eh             ; get device information
<00018> 0000:             O_GETTOD:     equ    0351h             ; get time of day
<00019> 0000:             O_ALLOC:      equ    036ch             ; alloc memory block
<00020> 0000:             O_DEALLOC:    equ    036fh             ; dealloc memory block
<00021>                   
<00022>                   ;--------------------------------------------------------------------
<00023>                   ; Elf/OS and Mini/DOS Data Locations
<00024>                   ;--------------------------------------------------------------------
<00025>                   
<00026> 0000:             K_KEYBUF:     equ    0080h             ; input key buffer
<00027> 0000:             K_MONTH:      equ    0475h             ; date/time information
<00028>                   
<00029>                   ;-------------------------- end os_api.inc --------------------------
<00000>                   #include include/elfc.inc
<00001>                   ;----------------------------------
<00002>                   ; ElfC - crt0 subroutine vectors
<00003>                   ;----------------------------------
<00004>                   
<00005>                   #define SUBTBL   $2100
<00006> 0000:             s_return:  equ  SUBTBL
<00007>                   
<00008> 0000:             s_esmove:  equ  (SUBTBL + $03)
<00009> 0000:             s_stkchk:  equ  (SUBTBL + $06)
<00010> 0000:             s_dpop16:  equ  (SUBTBL + $09)
<00011> 0000:             s_dpush16: equ  (SUBTBL + $0C)
<00012> 0000:             s_dget16:  equ  (SUBTBL + $0F)
<00013> 0000:             s_epush16: equ  (SUBTBL + $12)
<00014> 0000:             s_vpop16:  equ  (SUBTBL + $15)
<00015> 0000:             s_vpush8:  equ  (SUBTBL + $18)
<00016> 0000:             s_vpush16: equ  (SUBTBL + $1B)
<00017> 0000:             s_vstor8:  equ  (SUBTBL + $1E)
<00018> 0000:             s_vstor16: equ  (SUBTBL + $21)
<00019> 0000:             s_vinc8:   equ  (SUBTBL + $24)
<00020> 0000:             s_vinc16:  equ  (SUBTBL + $27)
<00021> 0000:             s_vdec8:   equ  (SUBTBL + $2A)
<00022> 0000:             s_vdec16:  equ  (SUBTBL + $2D)
<00023> 0000:             s_vpinc16: equ  (SUBTBL + $30)
<00024> 0000:             s_vpdec16: equ  (SUBTBL + $33)
<00025> 0000:             s_linit16: equ  (SUBTBL + $36)
<00026> 0000:             s_lstor8:  equ  (SUBTBL + $39)
<00027> 0000:             s_lstor16: equ  (SUBTBL + $3C)
<00028> 0000:             s_lpush8:  equ  (SUBTBL + $3F)
<00029> 0000:             s_lpush16: equ  (SUBTBL + $42)
<00030> 0000:             s_lget16:  equ  (SUBTBL + $45)
<00031> 0000:             s_lset16:  equ  (SUBTBL + $48)
<00032> 0000:             s_linc8:   equ  (SUBTBL + $4B)
<00033> 0000:             s_linc16:  equ  (SUBTBL + $4E)
<00034> 0000:             s_ldec8:   equ  (SUBTBL + $51)
<00035> 0000:             s_ldec16:  equ  (SUBTBL + $54)
<00036> 0000:             s_lpinc16: equ  (SUBTBL + $57)
<00037> 0000:             s_lpdec16: equ  (SUBTBL + $5A)
<00038> 0000:             s_psave:   equ  (SUBTBL + $5D)
<00039> 0000:             s_pstor8:  equ  (SUBTBL + $60)
<00040> 0000:             s_pstor16: equ  (SUBTBL + $63)
<00041> 0000:             s_pinc8:   equ  (SUBTBL + $66)
<00042> 0000:             s_pinc16:  equ  (SUBTBL + $69)
<00043> 0000:             s_pdec8:   equ  (SUBTBL + $6C)
<00044> 0000:             s_pdec16:  equ  (SUBTBL + $6F)
<00045> 0000:             s_pincptr: equ  (SUBTBL + $72)
<00046> 0000:             s_pdecptr: equ  (SUBTBL + $75)
<00047> 0000:             s_laddr16: equ  (SUBTBL + $78)
<00048> 0000:             s_deref8:  equ  (SUBTBL + $7B)
<00049> 0000:             s_deref16: equ  (SUBTBL + $7E)
<00050> 0000:             s_swap16:  equ  (SUBTBL + $81)
<00051> 0000:             s_add16:   equ  (SUBTBL + $84)
<00052> 0000:             s_sub16:   equ  (SUBTBL + $87)
<00053> 0000:             s_neg16:   equ  (SUBTBL + $8A)
<00054> 0000:             s_mdsgn16: equ  (SUBTBL + $8D)
<00055> 0000:             s_mul16:   equ  (SUBTBL + $90)
<00056> 0000:             s_div16:   equ  (SUBTBL + $93)
<00057> 0000:             s_mod16:   equ  (SUBTBL + $96)
<00058> 0000:             s_bool16:  equ  (SUBTBL + $99)
<00059> 0000:             s_true16:  equ  (SUBTBL + $9C)
<00060> 0000:             s_false16: equ  (SUBTBL + $9F)
<00061> 0000:             s_and16:   equ  (SUBTBL + $A2)
<00062> 0000:             s_or16:    equ  (SUBTBL + $A5)
<00063> 0000:             s_xor16:   equ  (SUBTBL + $A8)
<00064> 0000:             s_not16:   equ  (SUBTBL + $AB)
<00065> 0000:             s_inv16:   equ  (SUBTBL + $AE)
<00066> 0000:             s_shl16:   equ  (SUBTBL + $B1)
<00067> 0000:             s_shr16:   equ  (SUBTBL + $B4)
<00068> 0000:             s_eq16:    equ  (SUBTBL + $B7)
<00069> 0000:             s_gt16:    equ  (SUBTBL + $BA)
<00070> 0000:             s_gte16:   equ  (SUBTBL + $BD)
<00071> 0000:             s_lt16:    equ  (SUBTBL + $C0)
<00072> 0000:             s_lte16:   equ  (SUBTBL + $C3)
<00073> 0000:             s_ne16:    equ  (SUBTBL + $C6)
<00074> 0000:             s_ugt16:   equ  (SUBTBL + $C9)
<00075> 0000:             s_uge16:   equ  (SUBTBL + $CC)
<00076> 0000:             s_ult16:   equ  (SUBTBL + $CF)
<00077> 0000:             s_ule16:   equ  (SUBTBL + $D2)
<00078> 0000:             s_scltos2: equ  (SUBTBL + $D5)
<00079> 0000:             s_scltos4: equ  (SUBTBL + $D8)
<00080> 0000:             s_sclsos2: equ  (SUBTBL + $DB)
<00081> 0000:             s_sclsos4: equ  (SUBTBL + $DE)
<00082> 0000:             s_unscl2:  equ  (SUBTBL + $E1)
<00083> 0000:             s_unscl4:  equ  (SUBTBL + $E4)
<00084>                   
<00085>                   ;----------------------------------
<00086>                   ; ElfC crt0 - error vectors
<00087>                   ;----------------------------------
<00088>                   
<00089> 0000:                       extrn   auto_err
<00090> 0000:                       extrn   stk_err
<00091>                   
<00092>                   ;---------- end elfc.inc ----------
[00008]                   
[00009] 0000:             	           proc scanfmt
[00010]                   
<00000>                   #include include/stdlib.inc
<00001> 0000:                          extrn C_init
<00002> 0000:                          extrn C_fdinit
<00003> 0000:                          extrn C_fdtable
<00004> 0000:                          extrn C_fildes
<00005> 0000:                          extrn Cabort
<00006> 0000:                          extrn Cabs
<00007> 0000:                          extrn Catexit
<00008> 0000:                          extrn Cexit
<00009> 0000:                          extrn Cmalloc
<00010> 0000:                          extrn Ccalloc
<00011> 0000:                          extrn Crealloc
<00012> 0000:                          extrn Cfree
<00013> 0000:                          extrn Catoi
<00014> 0000:                          extrn Citoa
<00015> 0000:                          extrn Citox
<00016> 0000:                          extrn Citou
<00017> 0000:                          extrn Cdiv
<00018> 0000:                          extrn Cbsearch
<00019> 0000:                          extrn Cqsort
<00020> 0000:                          extrn Crand
<00021> 0000:                          extrn Csrand
<00022> 0000:                          extrn Ccreat
<00023> 0000:                          extrn Copen
<00024> 0000:                          extrn Cclose
<00025> 0000:                          extrn Cread
<00026> 0000:                          extrn Cwrite
<00027> 0000:                          extrn Clseek
<00028> 0000:                          extrn Cunlink
<00029> 0000:                          extrn Crename
<00030> 0000:                          extrn Cmin
<00031> 0000:                          extrn Cmax
[00012]                   
<00000>                   #include include/stdio.inc
<00001> 0000:                          extrn Cstdin
<00002> 0000:                          extrn Cstdout
<00003> 0000:                          extrn Cstderr
<00004> 0000:                          extrn Cputs
<00005> 0000:                          extrn Cputstr
<00006> 0000:                          extrn Cgets
<00007> 0000:                          extrn Cputch
<00008> 0000:                          extrn Cgetch
<00009> 0000:                          extrn Cputchar
<00010> 0000:                          extrn Cgetchar
<00011> 0000:                          extrn Cfdopen
<00012> 0000:                          extrn Cfclose
<00013> 0000:                          extrn Cfopen
<00014> 0000:                          extrn Cferror
<00015> 0000:                          extrn Cfeof
<00016> 0000:                          extrn Cclearerr
<00017> 0000:                          extrn Cfgetc
<00018> 0000:                          extrn Cfputc
<00019> 0000:                          extrn Cfgets
<00020> 0000:                          extrn Cfputs
<00021> 0000:                          extrn Cungetc
<00022> 0000:                          extrn Cfread
<00023> 0000:                          extrn Cfwrite
<00024> 0000:                          extrn Cfflush
<00025> 0000:                          extrn Cfprintf
<00026> 0000:                          extrn Ckprintf
<00027> 0000:                          extrn Cprintf
<00028> 0000:                          extrn Csprintf
<00029> 0000:                          extrn Cvfprintf
<00030> 0000:                          extrn Cvprintf
<00031> 0000:                          extrn Cvsprintf
<00032> 0000:                          extrn Cfscanf
<00033> 0000:                          extrn Cscanf
<00034> 0000:                          extrn Csscanf
<00035> 0000:                          extrn Cfgetpos
<00036> 0000:                          extrn Cfsetpos
<00037> 0000:                          extrn Cfseek
<00038> 0000:                          extrn Cftell
<00039> 0000:                          extrn Cperror
<00040> 0000:                          extrn Crewind
<00041> 0000:                          extrn Cremove
<00042> 0000:                          extrn Ctmpnam
<00043> 0000:                          extrn Ctmpfile
<00044> 0000:                          extrn Cfileno
[00014]                   	;----- cgpublic
[00015] 0000:             	              public Cfname
[00016] 0000:             Cfname:    ds 20    ;----- cggbss
[00017]                   	;----- cgpublic
[00018] 0014:             	              public Ci
[00019] 0014: 00 00       Ci:	db	$00, $00  ;----- cgdefw LSB first, MSB second
[00020]                   	;----- cgpublic
[00021] 0016:             	              public Cch
[00022] 0016: 00          Cch:	db	$00    ;----- cgdefb
[00023]                   	;----- cgpublic
[00024] 0017:             	              public Cmain
[00025]                   Cmain:
[00026]                     ;----- cgsetup
[00029]                   #endif
[00030]                   	;---- cgentry
[00031] 0017: e2          	          sex   r2   				 ; make sure X = SP
[00032] 0018: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00033] 001c: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00034]                   	;----- cgstack
[00035] 0020: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00036] 0022: ff fc       	          dw  -4  ;--- offset
[00037] 0024: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00038]                   	;----- begin stmt ------
[00039]                   	;----- cgldga
[00040] 0027: d9 12       	 				gosub s_epush16
[00041] 0029: 00 00       	 				  dw Cfname
[00042]                   	;----- cgstorlw
[00043] 002b: d9 3c       	          gosub s_lstor16      ; store value from ES in local variable
[00044] 002d: ff fc       	          dw  -4  ;--- offset
[00045]                   	;----- cgpopd
[00046] 002f: d9 09       	          gosub s_dpop16   		 ; get result from expression stack
[00047]                   	;----- end stmt ------
[00048]                   	;----- begin stmt ------
[00049]                   	;----- cglit
[00050] 0031: d9 12       	 				gosub s_epush16
[00051] 0033: 7f ff       	 				  dw 32767
[00052]                   	;----- cglit
[00053] 0035: d9 12       	 				gosub s_epush16
[00054] 0037: 80 01       	 				  dw -32767
[00055]                   	;----- cgldlab
[00056] 0039: d9 12       	 				gosub s_epush16
[00057] 003b: 02 51       	 				  dw  L2
[00058]                   	;----- cgcall
[00059] 003d: d4 00 00    	          call  Cprintf
[00060]                   	;----- cgstack
[00061] 0040: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00062] 0042: 00 06       	          dw  6  ;--- offset
[00063] 0044: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00064]                   	;---- queue dpush
[00065]                   	;----- push + pop data not required, data remains unchanged in RA
[00066]                   	;----- end stmt ------
[00067]                   	;----- begin stmt ------
[00068]                   	;----- cgldga
[00069] 0047: d9 12       	 				gosub s_epush16
[00070] 0049: 00 14       	 				  dw Ci
[00071]                   	;----- cgldlab
[00072] 004b: d9 12       	 				gosub s_epush16
[00073] 004d: 02 7f       	 				  dw  L3
[00074]                   	;----- cgcall
[00075] 004f: d4 00 00    	          call  Cscanf
[00076]                   	;----- cgstack
[00077] 0052: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00078] 0054: 00 04       	          dw  4  ;--- offset
[00079] 0056: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00080]                   	;---- queue dpush
[00081]                   	;----- push + pop data not required, data remains unchanged in RA
[00082]                   	;----- end stmt ------
[00083]                   	;----- begin stmt ------
[00084]                   	;----- cgldgw
[00085] 0059: d9 1b       	 				gosub s_vpush16
[00086] 005b: 00 14       	 				  dw Ci
[00087]                   	;----- cgldlab
[00088] 005d: d9 12       	 				gosub s_epush16
[00089] 005f: 02 82       	 				  dw  L4
[00090]                   	;----- cgcall
[00091] 0061: d4 00 00    	          call  Cprintf
[00092]                   	;----- cgstack
[00093] 0064: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00094] 0066: 00 04       	          dw  4  ;--- offset
[00095] 0068: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00096]                   	;---- queue dpush
[00097]                   	;----- push + pop data not required, data remains unchanged in RA
[00098]                   	;----- end stmt ------
[00099]                   	;----- begin stmt ------
[00100]                   	;----- cgldlab
[00101] 006b: d9 12       	 				gosub s_epush16
[00102] 006d: 02 93       	 				  dw  L5
[00103]                   	;----- cgcall
[00104] 006f: d4 00 00    	          call  Cprintf
[00105]                   	;----- cgstack
[00106] 0072: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00107] 0074: 00 02       	          dw  2  ;--- offset
[00108] 0076: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00109]                   	;---- queue dpush
[00110]                   	;----- push + pop data not required, data remains unchanged in RA
[00111]                   	;----- end stmt ------
[00112]                   	;----- begin stmt ------
[00113]                   	;----- cgldga
[00114] 0079: d9 12       	 				gosub s_epush16
[00115] 007b: 00 00       	 				  dw Cfname
[00116]                   	;----- cgldlab
[00117] 007d: d9 12       	 				gosub s_epush16
[00118] 007f: 02 ad       	 				  dw  L6
[00119]                   	;----- cgcall
[00120] 0081: d4 00 00    	          call  Cscanf
[00121]                   	;----- cgstack
[00122] 0084: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00123] 0086: 00 04       	          dw  4  ;--- offset
[00124] 0088: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00125]                   	;---- queue dpush
[00126]                   	;----- push + pop data not required, data remains unchanged in RA
[00127]                   	;----- end stmt ------
[00128]                   	;----- begin stmt ------
[00129]                   	;----- cgldga
[00130] 008b: d9 12       	 				gosub s_epush16
[00131] 008d: 00 00       	 				  dw Cfname
[00132]                   	;----- cgldlab
[00133] 008f: d9 12       	 				gosub s_epush16
[00134] 0091: 02 b2       	 				  dw  L7
[00135]                   	;----- cgcall
[00136] 0093: d4 00 00    	          call  Cprintf
[00137]                   	;----- cgstack
[00138] 0096: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00139] 0098: 00 04       	          dw  4  ;--- offset
[00140] 009a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00141]                   	;---- queue dpush
[00142]                   	;----- push + pop data not required, data remains unchanged in RA
[00143]                   	;----- end stmt ------
[00144]                   	;----- begin stmt ------
[00145]                   	;----- cgldlab
[00146] 009d: d9 12       	 				gosub s_epush16
[00147] 009f: 02 bf       	 				  dw  L8
[00148]                   	;----- cgcall
[00149] 00a1: d4 00 00    	          call  Cprintf
[00150]                   	;----- cgstack
[00151] 00a4: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00152] 00a6: 00 02       	          dw  2  ;--- offset
[00153] 00a8: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00154]                   	;---- queue dpush
[00155]                   	;----- push + pop data not required, data remains unchanged in RA
[00156]                   	;----- end stmt ------
[00157]                   	;----- begin stmt ------
[00158]                   	;----- cgldga
[00159] 00ab: d9 12       	 				gosub s_epush16
[00160] 00ad: 00 14       	 				  dw Ci
[00161]                   	;----- cgldlab
[00162] 00af: d9 12       	 				gosub s_epush16
[00163] 00b1: 02 dc       	 				  dw  L9
[00164]                   	;----- cgcall
[00165] 00b3: d4 00 00    	          call  Cscanf
[00166]                   	;----- cgstack
[00167] 00b6: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00168] 00b8: 00 04       	          dw  4  ;--- offset
[00169] 00ba: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00170]                   	;---- queue dpush
[00171]                   	;----- push + pop data not required, data remains unchanged in RA
[00172]                   	;----- end stmt ------
[00173]                   	;----- begin stmt ------
[00174]                   	;----- cgldgw
[00175] 00bd: d9 1b       	 				gosub s_vpush16
[00176] 00bf: 00 14       	 				  dw Ci
[00177]                   	;----- cgldlab
[00178] 00c1: d9 12       	 				gosub s_epush16
[00179] 00c3: 02 df       	 				  dw  L10
[00180]                   	;----- cgcall
[00181] 00c5: d4 00 00    	          call  Cprintf
[00182]                   	;----- cgstack
[00183] 00c8: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00184] 00ca: 00 04       	          dw  4  ;--- offset
[00185] 00cc: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00186]                   	;---- queue dpush
[00187]                   	;----- push + pop data not required, data remains unchanged in RA
[00188]                   	;----- end stmt ------
[00189]                   	;----- begin stmt ------
[00190]                   	;----- cgldlab
[00191] 00cf: d9 12       	 				gosub s_epush16
[00192] 00d1: 02 f2       	 				  dw  L11
[00193]                   	;----- cgcall
[00194] 00d3: d4 00 00    	          call  Cprintf
[00195]                   	;----- cgstack
[00196] 00d6: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00197] 00d8: 00 02       	          dw  2  ;--- offset
[00198] 00da: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00199]                   	;---- queue dpush
[00200]                   	;----- push + pop data not required, data remains unchanged in RA
[00201]                   	;----- end stmt ------
[00202]                   	;----- begin stmt ------
[00203]                   	;----- cgldga
[00204] 00dd: d9 12       	 				gosub s_epush16
[00205] 00df: 00 14       	 				  dw Ci
[00206]                   	;----- cgldlab
[00207] 00e1: d9 12       	 				gosub s_epush16
[00208] 00e3: 03 0a       	 				  dw  L12
[00209]                   	;----- cgcall
[00210] 00e5: d4 00 00    	          call  Cscanf
[00211]                   	;----- cgstack
[00212] 00e8: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00213] 00ea: 00 04       	          dw  4  ;--- offset
[00214] 00ec: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00215]                   	;---- queue dpush
[00216]                   	;----- push + pop data not required, data remains unchanged in RA
[00217]                   	;----- end stmt ------
[00218]                   	;----- begin stmt ------
[00219]                   	;----- cgldgw
[00220] 00ef: d9 1b       	 				gosub s_vpush16
[00221] 00f1: 00 14       	 				  dw Ci
[00222]                   	;----- cgldlab
[00223] 00f3: d9 12       	 				gosub s_epush16
[00224] 00f5: 03 0d       	 				  dw  L13
[00225]                   	;----- cgcall
[00226] 00f7: d4 00 00    	          call  Cprintf
[00227]                   	;----- cgstack
[00228] 00fa: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00229] 00fc: 00 04       	          dw  4  ;--- offset
[00230] 00fe: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00231]                   	;---- queue dpush
[00232]                   	;----- push + pop data not required, data remains unchanged in RA
[00233]                   	;----- end stmt ------
[00234]                   	;----- begin stmt ------
[00235]                   	;----- cgldlab
[00236] 0101: d9 12       	 				gosub s_epush16
[00237] 0103: 03 20       	 				  dw  L14
[00238]                   	;----- cgcall
[00239] 0105: d4 00 00    	          call  Cprintf
[00240]                   	;----- cgstack
[00241] 0108: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00242] 010a: 00 02       	          dw  2  ;--- offset
[00243] 010c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00244]                   	;---- queue dpush
[00245]                   	;----- push + pop data not required, data remains unchanged in RA
[00246]                   	;----- end stmt ------
[00247]                   	;----- begin stmt ------
[00248]                   	;----- cgldga
[00249] 010f: d9 12       	 				gosub s_epush16
[00250] 0111: 00 16       	 				  dw Cch
[00251]                   	;----- cgldlab
[00252] 0113: d9 12       	 				gosub s_epush16
[00253] 0115: 03 3e       	 				  dw  L15
[00254]                   	;----- cgcall
[00255] 0117: d4 00 00    	          call  Cscanf
[00256]                   	;----- cgstack
[00257] 011a: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00258] 011c: 00 04       	          dw  4  ;--- offset
[00259] 011e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00260]                   	;---- queue dpush
[00261]                   	;----- push + pop data not required, data remains unchanged in RA
[00262]                   	;----- end stmt ------
[00263]                   	;----- begin stmt ------
[00264]                   	;----- cgldgb
[00265] 0121: d9 18       	 				gosub s_vpush8
[00266] 0123: 00 16       	 				  dw Cch
[00267] 0125: 00          	 				  db 0
[00268]                   	;----- cgldgb
[00269] 0126: d9 18       	 				gosub s_vpush8
[00270] 0128: 00 16       	 				  dw Cch
[00271] 012a: 00          	 				  db 0
[00272]                   	;----- cgldlab
[00273] 012b: d9 12       	 				gosub s_epush16
[00274] 012d: 03 42       	 				  dw  L16
[00275]                   	;----- cgcall
[00276] 012f: d4 00 00    	          call  Cprintf
[00277]                   	;----- cgstack
[00278] 0132: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00279] 0134: 00 06       	          dw  6  ;--- offset
[00280] 0136: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00281]                   	;---- queue dpush
[00282]                   	;----- push + pop data not required, data remains unchanged in RA
[00283]                   	;----- end stmt ------
[00284]                   	;----- begin stmt ------
[00285]                   	;----- cgldlab
[00286] 0139: d9 12       	 				gosub s_epush16
[00287] 013b: 03 5b       	 				  dw  L17
[00288]                   	;----- cgcall
[00289] 013d: d4 00 00    	          call  Cprintf
[00290]                   	;----- cgstack
[00291] 0140: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00292] 0142: 00 02       	          dw  2  ;--- offset
[00293] 0144: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00294]                   	;---- queue dpush
[00295]                   	;----- push + pop data not required, data remains unchanged in RA
[00296]                   	;----- end stmt ------
[00297]                   	;----- begin stmt ------
[00298]                   	;----- cgldlw
[00299] 0147: d9 42       	          gosub s_lpush16       ; push value of local variable on ES
[00300] 0149: ff fc       	          dw  -4  ;--- offset
[00301]                   	;----- cgldlab
[00302] 014b: d9 12       	 				gosub s_epush16
[00303] 014d: 03 77       	 				  dw  L18
[00304]                   	;----- cgcall
[00305] 014f: d4 00 00    	          call  Cscanf
[00306]                   	;----- cgstack
[00307] 0152: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00308] 0154: 00 04       	          dw  4  ;--- offset
[00309] 0156: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00310]                   	;---- queue dpush
[00311]                   	;----- push + pop data not required, data remains unchanged in RA
[00312]                   	;----- end stmt ------
[00313]                   	;----- begin stmt ------
[00314]                   	;----- cgldga
[00315] 0159: d9 12       	 				gosub s_epush16
[00316] 015b: 00 00       	 				  dw Cfname
[00317]                   	;----- cglit
[00318] 015d: d9 12       	 				gosub s_epush16
[00319] 015f: 00 05       	 				  dw 5
[00320]                   	;----- cgadd
[00321] 0161: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00322]                   
[00323]                   	;----- cglit
[00324] 0163: d9 12       	 				gosub s_epush16
[00325] 0165: 00 00       	 				  dw 0
[00326]                   	;----- cgpopptr
[00327] 0167: d9 81       	          gosub s_swap16				 ; swap TOS and SOS on Expression Stack
[00328] 0169: d9 09       	          gosub s_dpop16   	   ; get pointer from expression stack
[00329]                   	;----- cgstorib
[00330] 016b: d9 60       	          gosub s_pstor8       ; store value from ES in pointer variable
[00331]                   	;----- cgpopd
[00332] 016d: d9 09       	          gosub s_dpop16   		 ; get result from expression stack
[00333]                   	;----- end stmt ------
[00334]                   	;----- begin stmt ------
[00335]                   	;----- cgldlw
[00336] 016f: d9 42       	          gosub s_lpush16       ; push value of local variable on ES
[00337] 0171: ff fc       	          dw  -4  ;--- offset
[00338]                   	;----- cgldlab
[00339] 0173: d9 12       	 				gosub s_epush16
[00340] 0175: 03 7b       	 				  dw  L19
[00341]                   	;----- cgcall
[00342] 0177: d4 00 00    	          call  Cprintf
[00343]                   	;----- cgstack
[00344] 017a: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00345] 017c: 00 04       	          dw  4  ;--- offset
[00346] 017e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00347]                   	;---- queue dpush
[00348]                   	;----- push + pop data not required, data remains unchanged in RA
[00349]                   	;----- end stmt ------
[00350]                   	;----- begin stmt ------
[00351]                   	;----- cgldlab
[00352] 0181: d9 12       	 				gosub s_epush16
[00353] 0183: 03 8c       	 				  dw  L20
[00354]                   	;----- cgcall
[00355] 0185: d4 00 00    	          call  Cprintf
[00356]                   	;----- cgstack
[00357] 0188: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00358] 018a: 00 02       	          dw  2  ;--- offset
[00359] 018c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00360]                   	;---- queue dpush
[00361]                   	;----- push + pop data not required, data remains unchanged in RA
[00362]                   	;----- end stmt ------
[00363]                   	;----- begin stmt ------
[00364]                   	;----- cgldlw
[00365] 018f: d9 42       	          gosub s_lpush16       ; push value of local variable on ES
[00366] 0191: ff fc       	          dw  -4  ;--- offset
[00367]                   	;----- cgldlab
[00368] 0193: d9 12       	 				gosub s_epush16
[00369] 0195: 03 a5       	 				  dw  L21
[00370]                   	;----- cgcall
[00371] 0197: d4 00 00    	          call  Cscanf
[00372]                   	;----- cgstack
[00373] 019a: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00374] 019c: 00 04       	          dw  4  ;--- offset
[00375] 019e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00376]                   	;---- queue dpush
[00377]                   	;----- push + pop data not required, data remains unchanged in RA
[00378]                   	;----- end stmt ------
[00379]                   	;----- begin stmt ------
[00380]                   	;---- inline string (table full)
[00381]                   	;---- queue lbr L23
[00382]                   	;----- cgjump
[00383] 01a1: c0 01 b5    	 				  lbr	L23
[00384]                   
[00385]                   L22:
[00386] 01a4: 0a 59 6f 75   db 10, 'You entered %s', 10    ;----- cgdefs
              20 65 6e 74 
              65 72 65 64 
              20 25 73 0a 
[00387] 01b4: 00          	db	$00    ;----- cgdefb
[00388]                   
[00389]                   L23:
[00390]                   	;----- cgldlw
[00391] 01b5: d9 42       	          gosub s_lpush16       ; push value of local variable on ES
[00392] 01b7: ff fc       	          dw  -4  ;--- offset
[00393]                   	;----- cgldlab
[00394] 01b9: d9 12       	 				gosub s_epush16
[00395] 01bb: 01 a4       	 				  dw  L22
[00396]                   	;----- cgcall
[00397] 01bd: d4 00 00    	          call  Cprintf
[00398]                   	;----- cgstack
[00399] 01c0: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00400] 01c2: 00 04       	          dw  4  ;--- offset
[00401] 01c4: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00402]                   	;---- queue dpush
[00403]                   	;----- push + pop data not required, data remains unchanged in RA
[00404]                   	;----- end stmt ------
[00405]                   	;----- begin stmt ------
[00406]                   	;---- inline string (table full)
[00407]                   	;---- queue lbr L25
[00408]                   	;----- cgjump
[00409] 01c7: c0 01 ea    	 				  lbr	L25
[00410]                   
[00411]                   L24:
[00412] 01ca: 0a 5e 53 63   db 10, '^Scanset: no capital letters:', 10    ;----- cgdefs
              61 6e 73 65 
              74 3a 20 6e 
              6f 20 63 61 
              70 69 74 61 
              6c 20 6c 65 
              74 74 65 72 
              73 3a 0a 
[00413] 01e9: 00          	db	$00    ;----- cgdefb
[00414]                   
[00415]                   L25:
[00416]                   	;----- cgldlab
[00417] 01ea: d9 12       	 				gosub s_epush16
[00418] 01ec: 01 ca       	 				  dw  L24
[00419]                   	;----- cgcall
[00420] 01ee: d4 00 00    	          call  Cprintf
[00421]                   	;----- cgstack
[00422] 01f1: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00423] 01f3: 00 02       	          dw  2  ;--- offset
[00424] 01f5: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00425]                   	;---- queue dpush
[00426]                   	;----- push + pop data not required, data remains unchanged in RA
[00427]                   	;----- end stmt ------
[00428]                   	;----- begin stmt ------
[00429]                   	;---- inline string (table full)
[00430]                   	;---- queue lbr L27
[00431]                   	;----- cgjump
[00432] 01f8: c0 02 06    	 				  lbr	L27
[00433]                   
[00434]                   L26:
[00435] 01fb: 20 25 31 39   db ' %19[^A-Z]'    ;----- cgdefs
              5b 5e 41 2d 
              5a 5d 
[00436] 0205: 00          	db	$00    ;----- cgdefb
[00437]                   
[00438]                   L27:
[00439]                   	;----- cgldlw
[00440] 0206: d9 42       	          gosub s_lpush16       ; push value of local variable on ES
[00441] 0208: ff fc       	          dw  -4  ;--- offset
[00442]                   	;----- cgldlab
[00443] 020a: d9 12       	 				gosub s_epush16
[00444] 020c: 01 fb       	 				  dw  L26
[00445]                   	;----- cgcall
[00446] 020e: d4 00 00    	          call  Cscanf
[00447]                   	;----- cgstack
[00448] 0211: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00449] 0213: 00 04       	          dw  4  ;--- offset
[00450] 0215: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00451]                   	;---- queue dpush
[00452]                   	;----- push + pop data not required, data remains unchanged in RA
[00453]                   	;----- end stmt ------
[00454]                   	;----- begin stmt ------
[00455]                   	;---- inline string (table full)
[00456]                   	;---- queue lbr L29
[00457]                   	;----- cgjump
[00458] 0218: c0 02 2c    	 				  lbr	L29
[00459]                   
[00460]                   L28:
[00461] 021b: 0a 59 6f 75   db 10, 'You entered %s', 10    ;----- cgdefs
              20 65 6e 74 
              65 72 65 64 
              20 25 73 0a 
[00462] 022b: 00          	db	$00    ;----- cgdefb
[00463]                   
[00464]                   L29:
[00465]                   	;----- cgldlw
[00466] 022c: d9 42       	          gosub s_lpush16       ; push value of local variable on ES
[00467] 022e: ff fc       	          dw  -4  ;--- offset
[00468]                   	;----- cgldlab
[00469] 0230: d9 12       	 				gosub s_epush16
[00470] 0232: 02 1b       	 				  dw  L28
[00471]                   	;----- cgcall
[00472] 0234: d4 00 00    	          call  Cprintf
[00473]                   	;----- cgstack
[00474] 0237: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00475] 0239: 00 04       	          dw  4  ;--- offset
[00476] 023b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00477]                   	;---- queue dpush
[00478]                   	;----- push + pop data not required, data remains unchanged in RA
[00479]                   	;----- end stmt ------
[00480]                   
[00481]                   L1:
[00482]                   	;----- cgstack
[00483] 023e: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00484] 0240: 00 04       	          dw  4  ;--- offset
[00485] 0242: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00486]                   	;----- cgexit
[00487] 0245: e2          	          sex   r2            ; make sure X = SP
[00488] 0246: d9 06       	          gosub s_stkchk      ; check for expression stack creep
[00489] 0248: c3 00 00    	          lbdf  stk_err			 ; exit immediately when stack creep error occurs
[00490] 024b: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00491]                   
[00492] 0250: d5          	          rtn    			 	     ; return to caller
[00493]                   
[00494]                   ;----- string table
[00495]                   
[00496]                   L2:
[00497] 0251: 45 6e 74 65   db 'Enter an integer number (between %d and %d): '    ;----- cgdefs
              72 20 61 6e 
              20 69 6e 74 
              65 67 65 72 
              20 6e 75 6d 
              62 65 72 20 
              28 62 65 74 
              77 65 65 6e 
              20 25 64 20 
              61 6e 64 20 
              25 64 29 3a 
              20 
[00498] 027e: 00          	db	$00    ;----- cgdefb
[00499]                   
[00500]                   L3:
[00501] 027f: 25 64         db '%d'    ;----- cgdefs
[00502] 0281: 00          	db	$00    ;----- cgdefb
[00503]                   
[00504]                   L4:
[00505] 0282: 0a 59 6f 75   db 10, 'You entered %i', 10    ;----- cgdefs
              20 65 6e 74 
              65 72 65 64 
              20 25 69 0a 
[00506] 0292: 00          	db	$00    ;----- cgdefb
[00507]                   
[00508]                   L5:
[00509] 0293: 57 68 61 74   db 'What is your first name?', 10    ;----- cgdefs
              20 69 73 20 
              79 6f 75 72 
              20 66 69 72 
              73 74 20 6e 
              61 6d 65 3f 
              0a 
[00510] 02ac: 00          	db	$00    ;----- cgdefb
[00511]                   
[00512]                   L6:
[00513] 02ad: 25 31 39 73   db '%19s'    ;----- cgdefs
[00514] 02b1: 00          	db	$00    ;----- cgdefb
[00515]                   
[00516]                   L7:
[00517] 02b2: 0a 48 65 6c   db 10, 'Hello, %s!', 10    ;----- cgdefs
              6c 6f 2c 20 
              25 73 21 0a 
[00518] 02be: 00          	db	$00    ;----- cgdefb
[00519]                   
[00520]                   L8:
[00521] 02bf: 45 6e 74 65   db 'Enter a hexadecimal number:', 10    ;----- cgdefs
              72 20 61 20 
              68 65 78 61 
              64 65 63 69 
              6d 61 6c 20 
              6e 75 6d 62 
              65 72 3a 0a 
[00522] 02db: 00          	db	$00    ;----- cgdefb
[00523]                   
[00524]                   L9:
[00525] 02dc: 25 78         db '%x'    ;----- cgdefs
[00526] 02de: 00          	db	$00    ;----- cgdefb
[00527]                   
[00528]                   L10:
[00529] 02df: 0a 59 6f 75   db 10, 'You entererd %#x', 10    ;----- cgdefs
              20 65 6e 74 
              65 72 65 72 
              64 20 25 23 
              78 0a 
[00530] 02f1: 00          	db	$00    ;----- cgdefb
[00531]                   
[00532]                   L11:
[00533] 02f2: 45 6e 74 65   db 'Enter an octal number:', 10    ;----- cgdefs
              72 20 61 6e 
              20 6f 63 74 
              61 6c 20 6e 
              75 6d 62 65 
              72 3a 0a 
[00534] 0309: 00          	db	$00    ;----- cgdefb
[00535]                   
[00536]                   L12:
[00537] 030a: 25 6f         db '%o'    ;----- cgdefs
[00538] 030c: 00          	db	$00    ;----- cgdefb
[00539]                   
[00540]                   L13:
[00541] 030d: 0a 59 6f 75   db 10, 'You entererd %#o', 10    ;----- cgdefs
              20 65 6e 74 
              65 72 65 72 
              64 20 25 23 
              6f 0a 
[00542] 031f: 00          	db	$00    ;----- cgdefb
[00543]                   
[00544]                   L14:
[00545] 0320: 45 6e 74 65   db 'Enter a non-space character:', 10    ;----- cgdefs
              72 20 61 20 
              6e 6f 6e 2d 
              73 70 61 63 
              65 20 63 68 
              61 72 61 63 
              74 65 72 3a 
              0a 
[00546] 033d: 00          	db	$00    ;----- cgdefb
[00547]                   
[00548]                   L15:
[00549] 033e: 20 25 63      db ' %c'    ;----- cgdefs
[00550] 0341: 00          	db	$00    ;----- cgdefb
[00551]                   
[00552]                   L16:
[00553] 0342: 0a 59 6f 75   db 10, 'You entererd ', 39, '%c', 39, ' (%d)', 10    ;----- cgdefs
              20 65 6e 74 
              65 72 65 72 
              64 20 27 25 
              63 27 20 28 
              25 64 29 0a 
[00554] 035a: 00          	db	$00    ;----- cgdefb
[00555]                   
[00556]                   L17:
[00557] 035b: 45 6e 74 65   db 'Enter any five characters:', 10    ;----- cgdefs
              72 20 61 6e 
              79 20 66 69 
              76 65 20 63 
              68 61 72 61 
              63 74 65 72 
              73 3a 0a 
[00558] 0376: 00          	db	$00    ;----- cgdefb
[00559]                   
[00560]                   L18:
[00561] 0377: 25 35 63      db '%5c'    ;----- cgdefs
[00562] 037a: 00          	db	$00    ;----- cgdefb
[00563]                   
[00564]                   L19:
[00565] 037b: 0a 59 6f 75   db 10, 'You entered %s', 10    ;----- cgdefs
              20 65 6e 74 
              65 72 65 64 
              20 25 73 0a 
[00566] 038b: 00          	db	$00    ;----- cgdefb
[00567]                   
[00568]                   L20:
[00569] 038c: 0a 53 63 61   db 10, 'Scanset: numbers only:', 10    ;----- cgdefs
              6e 73 65 74 
              3a 20 6e 75 
              6d 62 65 72 
              73 20 6f 6e 
              6c 79 3a 0a 
[00570] 03a4: 00          	db	$00    ;----- cgdefb
[00571]                   
[00572]                   L21:
[00573] 03a5: 20 25 31 39   db ' %19[0-9]'    ;----- cgdefs
              5b 30 2d 39 
              5d 
[00574] 03ae: 00          	db	$00    ;----- cgdefb
[00575]                   	;---- cgpostlude
[00576] 03af:             	             endp
