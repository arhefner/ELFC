; -------------------------------------------------------------------
; This file generated by ElfC, based on SubC
; SubC Copyright 2012-2025 by Nils Holm
; -------------------------------------------------------------------
#include include/ops_c.inc
#include include/os_api.inc
#include include/elfc.inc

	           proc scanfmt

#include include/stdlib.inc

#include include/stdio.inc
	;----- cgpublic
	              public Cfname
Cfname:    ds 20    ;----- cggbss
	;----- cgpublic
	              public Ci
Ci:	db	$00, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Cch
Cch:	db	$00    ;----- cgdefb
	;----- cgpublic
	              public Cmain
Cmain:
  ;----- cgsetup
#ifdef STGROM
      load   r1, $F000  ; set up handler for STG Breakpoint
#endif
	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  -4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cfname
	;----- cgstorlw
	          gosub s_lstor16      ; store value from ES in local variable
	          dw  -4  ;--- offset
	;----- cgpopd
	          gosub s_dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				gosub s_epush16
	 				  dw 32767
	;----- cglit
	 				gosub s_epush16
	 				  dw -32767
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L2
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L3
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L4
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L5
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cfname
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L6
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cfname
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L7
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L8
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L9
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L10
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L11
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L12
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L13
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L14
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cch
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L15
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgb
	 				gosub s_vpush8
	 				  dw Cch
	 				  db 0
	;----- cgldgb
	 				gosub s_vpush8
	 				  dw Cch
	 				  db 0
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L16
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L17
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          gosub s_lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L18
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cfname
	;----- cglit
	 				gosub s_epush16
	 				  dw 5
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				gosub s_epush16
	 				  dw 0
	;----- cgpopptr
	          gosub s_swap16				 ; swap TOS and SOS on Expression Stack
	          gosub s_dpop16   	   ; get pointer from expression stack
	;----- cgstorib
	          gosub s_pstor8       ; store value from ES in pointer variable
	;----- cgpopd
	          gosub s_dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          gosub s_lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L19
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L20
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          gosub s_lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L21
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- inline string (table full)
	;---- queue lbr L23
	;----- cgjump
	 				  lbr	L23

L22:
  db 10, 'You entered %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L23:
	;----- cgldlw
	          gosub s_lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L22
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- inline string (table full)
	;---- queue lbr L25
	;----- cgjump
	 				  lbr	L25

L24:
  db 10, '^Scanset: no capital letters:', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L25:
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L24
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- inline string (table full)
	;---- queue lbr L27
	;----- cgjump
	 				  lbr	L27

L26:
  db ' %19[^A-Z]'    ;----- cgdefs
	db	$00    ;----- cgdefb

L27:
	;----- cgldlw
	          gosub s_lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L26
	;----- cgcall
	          call  Cscanf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- inline string (table full)
	;---- queue lbr L29
	;----- cgjump
	 				  lbr	L29

L28:
  db 10, 'You entered %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L29:
	;----- cgldlw
	          gosub s_lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L28
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L1:
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          gosub s_stkchk      ; check for expression stack creep
	          lbdf  stk_err			 ; exit immediately when stack creep error occurs
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn    			 	     ; return to caller

;----- string table

L2:
  db 'Enter an integer number (between %d and %d): '    ;----- cgdefs
	db	$00    ;----- cgdefb

L3:
  db '%d'    ;----- cgdefs
	db	$00    ;----- cgdefb

L4:
  db 10, 'You entered %i', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L5:
  db 'What is your first name?', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L6:
  db '%19s'    ;----- cgdefs
	db	$00    ;----- cgdefb

L7:
  db 10, 'Hello, %s!', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L8:
  db 'Enter a hexadecimal number:', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L9:
  db '%x'    ;----- cgdefs
	db	$00    ;----- cgdefb

L10:
  db 10, 'You entererd %#x', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L11:
  db 'Enter an octal number:', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L12:
  db '%o'    ;----- cgdefs
	db	$00    ;----- cgdefb

L13:
  db 10, 'You entererd %#o', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L14:
  db 'Enter a non-space character:', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L15:
  db ' %c'    ;----- cgdefs
	db	$00    ;----- cgdefb

L16:
  db 10, 'You entererd ', 39, '%c', 39, ' (%d)', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L17:
  db 'Enter any five characters:', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L18:
  db '%5c'    ;----- cgdefs
	db	$00    ;----- cgdefb

L19:
  db 10, 'You entered %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L20:
  db 10, 'Scanset: numbers only:', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L21:
  db ' %19[0-9]'    ;----- cgdefs
	db	$00    ;----- cgdefb
	;---- cgpostlude
	             endp
