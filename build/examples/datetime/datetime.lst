[00001]                   ; -------------------------------------------------------------------
[00002]                   ; This file generated by ElfC, based on SubC
[00003]                   ; SubC Copyright 2012-2025 by Nils Holm
[00004]                   ; -------------------------------------------------------------------
<00000>                   #include include/ops_c.inc
<00001>                   ;------------------------------------------------------
<00002>                   ; ElfC Asm/02 Opcodes
<00003>                   ;------------------------------------------------------
<00004>                   
<00005>                   .op "PUSH","N","9$1 73 8$1 73"
<00006>                   .op "POP","N","60 72 A$1 F0 B$1"
<00007>                   .op "CALL","W","D4 H1 L1"
<00008>                   .op "RTN","","D5"
<00009>                   .op "CLC","","FC 00"
<00010>                   .op "STC","","FF 00"
<00011>                   .op "COPY","NR","8$1 A$2 9$1 B$2"
<00012>                   .op "LOAD","NW","F8 L2 A$1 F8 H2 B$1"
<00013>                   .op "MATCH","NW","8$1 FF L2 52 9$1 7F H2 F1"
<00014>                   .op "BRKPT","","79 D1"
<00015>                   .op "ADDR16","NR","8$2 52 8$1 F4 A$1 9$2 52 9$1 74 B$1"
<00016>                   .op "SUBR16","NR","8$2 52 8$1 F7 A$1 9$2 52 9$1 77 B$1"
<00017>                   .op "GOSUB","W","D9 L1"
<00018>                   .op "RSUB","","C0 21 00"
<00019>                   
<00020>                   ;------------------- end ops_c.inc --------------------
<00000>                   #include include/os_api.inc
<00001>                   ;--------------------------------------------------------------------
<00002>                   ; Elf/OS and Mini/DOS Kernel API
<00003>                   ;--------------------------------------------------------------------
<00004>                   
<00005> 0000:             O_OPEN:       equ    0306h             ; open a file
<00006> 0000:             O_READ:       equ    0309h             ; read from file
<00007> 0000:             O_WRITE:      equ    030ch             ; write to file
<00008> 0000:             O_SEEK:       equ    030fh             ; seek to file position
<00009> 0000:             O_CLOSE:      equ    0312h             ; close file
<00010> 0000:             O_DELETE:     equ    0318h             ; delete a file
<00011> 0000:             O_RENAME:     equ    031bh             ; rename a file
<00012> 0000:             O_TYPE:       equ    0330h             ; console character output
<00013> 0000:             O_MSG:        equ    0333h             ; console string output
<00014> 0000:             O_READKEY:    equ    0336h             ; console character input
<00015> 0000:             O_INPUT:      equ    0339h             ; console string input
<00016> 0000:             O_INMSG:      equ    034bh             ; console inline messae output
<00017> 0000:             O_GETDEV:     equ    034eh             ; get device information
<00018> 0000:             O_GETTOD:     equ    0351h             ; get time of day
<00019> 0000:             O_ALLOC:      equ    036ch             ; alloc memory block
<00020> 0000:             O_DEALLOC:    equ    036fh             ; dealloc memory block
<00021>                   
<00022>                   ;--------------------------------------------------------------------
<00023>                   ; Elf/OS and Mini/DOS Data Locations
<00024>                   ;--------------------------------------------------------------------
<00025>                   
<00026> 0000:             K_KEYBUF:     equ    0080h             ; input key buffer
<00027> 0000:             K_MONTH:      equ    0475h             ; date/time information
<00028>                   
<00029>                   ;-------------------------- end os_api.inc --------------------------
<00000>                   #include include/elfc.inc
<00001>                   ;----------------------------------
<00002>                   ; ElfC - crt0 subroutine vectors
<00003>                   ;----------------------------------
<00004>                   
<00005>                   #define SUBTBL   $2100
<00006> 0000:             s_return:  equ  SUBTBL
<00007>                   
<00008> 0000:             s_esmove:  equ  (SUBTBL + $03)
<00009> 0000:             s_stkchk:  equ  (SUBTBL + $06)
<00010> 0000:             s_dpop16:  equ  (SUBTBL + $09)
<00011> 0000:             s_dpush16: equ  (SUBTBL + $0C)
<00012> 0000:             s_dget16:  equ  (SUBTBL + $0F)
<00013> 0000:             s_epush16: equ  (SUBTBL + $12)
<00014> 0000:             s_vpop16:  equ  (SUBTBL + $15)
<00015> 0000:             s_vpush8:  equ  (SUBTBL + $18)
<00016> 0000:             s_vpush16: equ  (SUBTBL + $1B)
<00017> 0000:             s_vstor8:  equ  (SUBTBL + $1E)
<00018> 0000:             s_vstor16: equ  (SUBTBL + $21)
<00019> 0000:             s_vinc8:   equ  (SUBTBL + $24)
<00020> 0000:             s_vinc16:  equ  (SUBTBL + $27)
<00021> 0000:             s_vdec8:   equ  (SUBTBL + $2A)
<00022> 0000:             s_vdec16:  equ  (SUBTBL + $2D)
<00023> 0000:             s_vpinc16: equ  (SUBTBL + $30)
<00024> 0000:             s_vpdec16: equ  (SUBTBL + $33)
<00025> 0000:             s_linit16: equ  (SUBTBL + $36)
<00026> 0000:             s_lstor8:  equ  (SUBTBL + $39)
<00027> 0000:             s_lstor16: equ  (SUBTBL + $3C)
<00028> 0000:             s_lpush8:  equ  (SUBTBL + $3F)
<00029> 0000:             s_lpush16: equ  (SUBTBL + $42)
<00030> 0000:             s_lget16:  equ  (SUBTBL + $45)
<00031> 0000:             s_lset16:  equ  (SUBTBL + $48)
<00032> 0000:             s_linc8:   equ  (SUBTBL + $4B)
<00033> 0000:             s_linc16:  equ  (SUBTBL + $4E)
<00034> 0000:             s_ldec8:   equ  (SUBTBL + $51)
<00035> 0000:             s_ldec16:  equ  (SUBTBL + $54)
<00036> 0000:             s_lpinc16: equ  (SUBTBL + $57)
<00037> 0000:             s_lpdec16: equ  (SUBTBL + $5A)
<00038> 0000:             s_psave:   equ  (SUBTBL + $5D)
<00039> 0000:             s_pstor8:  equ  (SUBTBL + $60)
<00040> 0000:             s_pstor16: equ  (SUBTBL + $63)
<00041> 0000:             s_pinc8:   equ  (SUBTBL + $66)
<00042> 0000:             s_pinc16:  equ  (SUBTBL + $69)
<00043> 0000:             s_pdec8:   equ  (SUBTBL + $6C)
<00044> 0000:             s_pdec16:  equ  (SUBTBL + $6F)
<00045> 0000:             s_pincptr: equ  (SUBTBL + $72)
<00046> 0000:             s_pdecptr: equ  (SUBTBL + $75)
<00047> 0000:             s_laddr16: equ  (SUBTBL + $78)
<00048> 0000:             s_deref8:  equ  (SUBTBL + $7B)
<00049> 0000:             s_deref16: equ  (SUBTBL + $7E)
<00050> 0000:             s_swap16:  equ  (SUBTBL + $81)
<00051> 0000:             s_add16:   equ  (SUBTBL + $84)
<00052> 0000:             s_sub16:   equ  (SUBTBL + $87)
<00053> 0000:             s_neg16:   equ  (SUBTBL + $8A)
<00054> 0000:             s_mdsgn16: equ  (SUBTBL + $8D)
<00055> 0000:             s_mul16:   equ  (SUBTBL + $90)
<00056> 0000:             s_div16:   equ  (SUBTBL + $93)
<00057> 0000:             s_mod16:   equ  (SUBTBL + $96)
<00058> 0000:             s_bool16:  equ  (SUBTBL + $99)
<00059> 0000:             s_true16:  equ  (SUBTBL + $9C)
<00060> 0000:             s_false16: equ  (SUBTBL + $9F)
<00061> 0000:             s_and16:   equ  (SUBTBL + $A2)
<00062> 0000:             s_or16:    equ  (SUBTBL + $A5)
<00063> 0000:             s_xor16:   equ  (SUBTBL + $A8)
<00064> 0000:             s_not16:   equ  (SUBTBL + $AB)
<00065> 0000:             s_inv16:   equ  (SUBTBL + $AE)
<00066> 0000:             s_shl16:   equ  (SUBTBL + $B1)
<00067> 0000:             s_shr16:   equ  (SUBTBL + $B4)
<00068> 0000:             s_eq16:    equ  (SUBTBL + $B7)
<00069> 0000:             s_gt16:    equ  (SUBTBL + $BA)
<00070> 0000:             s_gte16:   equ  (SUBTBL + $BD)
<00071> 0000:             s_lt16:    equ  (SUBTBL + $C0)
<00072> 0000:             s_lte16:   equ  (SUBTBL + $C3)
<00073> 0000:             s_ne16:    equ  (SUBTBL + $C6)
<00074> 0000:             s_ugt16:   equ  (SUBTBL + $C9)
<00075> 0000:             s_uge16:   equ  (SUBTBL + $CC)
<00076> 0000:             s_ult16:   equ  (SUBTBL + $CF)
<00077> 0000:             s_ule16:   equ  (SUBTBL + $D2)
<00078> 0000:             s_scltos2: equ  (SUBTBL + $D5)
<00079> 0000:             s_scltos4: equ  (SUBTBL + $D8)
<00080> 0000:             s_sclsos2: equ  (SUBTBL + $DB)
<00081> 0000:             s_sclsos4: equ  (SUBTBL + $DE)
<00082> 0000:             s_unscl2:  equ  (SUBTBL + $E1)
<00083> 0000:             s_unscl4:  equ  (SUBTBL + $E4)
<00084>                   
<00085>                   ;----------------------------------
<00086>                   ; ElfC crt0 - error vectors
<00087>                   ;----------------------------------
<00088>                   
<00089> 0000:                       extrn   auto_err
<00090> 0000:                       extrn   stk_err
<00091>                   
<00092>                   ;---------- end elfc.inc ----------
[00008]                   
[00009] 0000:             	           proc datetime
[00010]                   
<00000>                   #include include/stdlib.inc
<00001> 0000:                          extrn C_init
<00002> 0000:                          extrn C_fdinit
<00003> 0000:                          extrn C_fdtable
<00004> 0000:                          extrn C_fildes
<00005> 0000:                          extrn Cabort
<00006> 0000:                          extrn Cabs
<00007> 0000:                          extrn Catexit
<00008> 0000:                          extrn Cexit
<00009> 0000:                          extrn Cmalloc
<00010> 0000:                          extrn Ccalloc
<00011> 0000:                          extrn Crealloc
<00012> 0000:                          extrn Cfree
<00013> 0000:                          extrn Catoi
<00014> 0000:                          extrn Citoa
<00015> 0000:                          extrn Citox
<00016> 0000:                          extrn Citou
<00017> 0000:                          extrn Cdiv
<00018> 0000:                          extrn Cbsearch
<00019> 0000:                          extrn Cqsort
<00020> 0000:                          extrn Crand
<00021> 0000:                          extrn Csrand
<00022> 0000:                          extrn Ccreat
<00023> 0000:                          extrn Copen
<00024> 0000:                          extrn Cclose
<00025> 0000:                          extrn Cread
<00026> 0000:                          extrn Cwrite
<00027> 0000:                          extrn Clseek
<00028> 0000:                          extrn Cunlink
<00029> 0000:                          extrn Crename
<00030> 0000:                          extrn Cmin
<00031> 0000:                          extrn Cmax
[00012]                   
<00000>                   #include include/stdio.inc
<00001> 0000:                          extrn Cstdin
<00002> 0000:                          extrn Cstdout
<00003> 0000:                          extrn Cstderr
<00004> 0000:                          extrn Cputs
<00005> 0000:                          extrn Cputstr
<00006> 0000:                          extrn Cgets
<00007> 0000:                          extrn Cputch
<00008> 0000:                          extrn Cgetch
<00009> 0000:                          extrn Cputchar
<00010> 0000:                          extrn Cgetchar
<00011> 0000:                          extrn Cfdopen
<00012> 0000:                          extrn Cfclose
<00013> 0000:                          extrn Cfopen
<00014> 0000:                          extrn Cferror
<00015> 0000:                          extrn Cfeof
<00016> 0000:                          extrn Cclearerr
<00017> 0000:                          extrn Cfgetc
<00018> 0000:                          extrn Cfputc
<00019> 0000:                          extrn Cfgets
<00020> 0000:                          extrn Cfputs
<00021> 0000:                          extrn Cungetc
<00022> 0000:                          extrn Cfread
<00023> 0000:                          extrn Cfwrite
<00024> 0000:                          extrn Cfflush
<00025> 0000:                          extrn Cfprintf
<00026> 0000:                          extrn Ckprintf
<00027> 0000:                          extrn Cprintf
<00028> 0000:                          extrn Csprintf
<00029> 0000:                          extrn Cvfprintf
<00030> 0000:                          extrn Cvprintf
<00031> 0000:                          extrn Cvsprintf
<00032> 0000:                          extrn Cfscanf
<00033> 0000:                          extrn Cscanf
<00034> 0000:                          extrn Csscanf
<00035> 0000:                          extrn Cfgetpos
<00036> 0000:                          extrn Cfsetpos
<00037> 0000:                          extrn Cfseek
<00038> 0000:                          extrn Cftell
<00039> 0000:                          extrn Cperror
<00040> 0000:                          extrn Crewind
<00041> 0000:                          extrn Cremove
<00042> 0000:                          extrn Ctmpnam
<00043> 0000:                          extrn Ctmpfile
<00044> 0000:                          extrn Cfileno
[00014]                   
[00015]                   .link .library time.lib
[00016]                   
<00000>                   #include include/time.inc
<00001> 0000:                          extrn C_dow
<00002> 0000:                          extrn C_doy
<00003> 0000:                          extrn Csystime
<00004> 0000:                          extrn Casctime
<00005> 0000:                          extrn Ccstime
<00006> 0000:                          extrn Ctimezone
<00007> 0000:                          extrn Cutctime
<00008> 0000:                          extrn Cstrftime
<00009>                   
[00018] 0000:             Cnow:    ds 18    ;----- cglbss
[00019]                   	;----- cgpublic
[00020] 0012:             	              public Ctp
[00021] 0012:             Ctp:    ds 2    ;----- cggbss
[00022]                   	;----- cgpublic
[00023] 0014:             	              public Ctbuf
[00024] 0014:             Ctbuf:    ds 64    ;----- cggbss
[00025]                   	;----- cgpublic
[00026] 0054:             	              public Cmain
[00027]                   Cmain:
[00028]                     ;----- cgsetup
[00031]                   #endif
[00032]                   	;---- cgentry
[00033] 0054: e2          	          sex   r2   				 ; make sure X = SP
[00034] 0055: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00035] 0059: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00036]                   	;----- cgstack
[00037] 005d: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00038] 005f: ff fc       	          dw  -4  ;--- offset
[00039] 0061: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00040]                   	;----- begin stmt ------
[00041]                   	;----- cgldga
[00042] 0064: d9 12       	 				gosub s_epush16
[00043] 0066: 00 00       	 				  dw Cnow
[00044]                   	;----- cgstorgw
[00045] 0068: d9 21       	 				 gosub s_vstor16      ; store value from ES in global variable
[00046] 006a: 00 12       	 				  dw Ctp
[00047]                   	;----- cgpopd
[00048] 006c: d9 09       	          gosub s_dpop16   		 ; get result from expression stack
[00049]                   	;----- end stmt ------
[00050]                   	;----- begin stmt ------
[00051]                   	;----- cglit
[00052] 006e: d9 12       	 				gosub s_epush16
[00053] 0070: 00 01       	 				  dw 1
[00054]                   	;----- cglit
[00055] 0072: d9 12       	 				gosub s_epush16
[00056] 0074: fe d4       	 				  dw -300
[00057]                   	;----- cgldlab
[00058] 0076: d9 12       	 				gosub s_epush16
[00059] 0078: 02 ba       	 				  dw  L2
[00060]                   	;----- cgcall
[00061] 007a: d4 00 00    	          call  Ctimezone
[00062]                   	;----- cgstack
[00063] 007d: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00064] 007f: 00 06       	          dw  6  ;--- offset
[00065] 0081: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00066]                   	;---- queue dpush
[00067]                   	;----- push + pop data not required, data remains unchanged in RA
[00068]                   	;----- end stmt ------
[00069]                   	;----- begin stmt ------
[00070]                   	;----- cgldgw
[00071] 0084: d9 1b       	 				gosub s_vpush16
[00072] 0086: 00 12       	 				  dw Ctp
[00073]                   	;----- cgcall
[00074] 0088: d4 00 00    	          call  Csystime
[00075]                   	;----- cgstack
[00076] 008b: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00077] 008d: 00 02       	          dw  2  ;--- offset
[00078] 008f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00079]                   	;---- queue dpush
[00080]                   	;------ commit push
[00081]                   	;----- cgpushd
[00082] 0092: d9 0c       	          gosub s_dpush16   	 ; put result on expression stack
[00083]                   	;----- cgstorlw
[00084] 0094: d9 3c       	          gosub s_lstor16      ; store value from ES in local variable
[00085] 0096: ff fe       	          dw  -2  ;--- offset
[00086]                   	;----- cgpopd
[00087] 0098: d9 09       	          gosub s_dpop16   		 ; get result from expression stack
[00088]                   	;----- end stmt ------
[00089]                   	;----- begin stmt ------
[00090]                   	;----- cglit
[00091] 009a: d9 12       	 				gosub s_epush16
[00092] 009c: 00 0a       	 				  dw 10
[00093]                   	;----- cgldgw
[00094] 009e: d9 1b       	 				gosub s_vpush16
[00095] 00a0: 00 12       	 				  dw Ctp
[00096]                   	;----- cgadd
[00097] 00a2: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00098]                   
[00099]                   	;----- cgindw
[00100] 00a4: d9 7e       	 				gosub s_deref16
[00101]                   	;----- cglit
[00102] 00a6: d9 12       	 				gosub s_epush16
[00103] 00a8: 07 6c       	 				  dw 1900
[00104]                   	;----- cgadd
[00105] 00aa: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00106]                   
[00107]                   	;----- cglit
[00108] 00ac: d9 12       	 				gosub s_epush16
[00109] 00ae: 00 06       	 				  dw 6
[00110]                   	;----- cgldgw
[00111] 00b0: d9 1b       	 				gosub s_vpush16
[00112] 00b2: 00 12       	 				  dw Ctp
[00113]                   	;----- cgadd
[00114] 00b4: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00115]                   
[00116]                   	;----- cgindw
[00117] 00b6: d9 7e       	 				gosub s_deref16
[00118]                   	;----- cglit
[00119] 00b8: d9 12       	 				gosub s_epush16
[00120] 00ba: 00 08       	 				  dw 8
[00121]                   	;----- cgldgw
[00122] 00bc: d9 1b       	 				gosub s_vpush16
[00123] 00be: 00 12       	 				  dw Ctp
[00124]                   	;----- cgadd
[00125] 00c0: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00126]                   
[00127]                   	;----- cgindw
[00128] 00c2: d9 7e       	 				gosub s_deref16
[00129]                   	;----- cglit
[00130] 00c4: d9 12       	 				gosub s_epush16
[00131] 00c6: 00 01       	 				  dw 1
[00132]                   	;----- cgadd
[00133] 00c8: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00134]                   
[00135]                   	;----- cgldgw
[00136] 00ca: d9 1b       	 				gosub s_vpush16
[00137] 00cc: 00 12       	 				  dw Ctp
[00138]                   	;----- cgindw
[00139] 00ce: d9 7e       	 				gosub s_deref16
[00140]                   	;----- cglit
[00141] 00d0: d9 12       	 				gosub s_epush16
[00142] 00d2: 00 02       	 				  dw 2
[00143]                   	;----- cgldgw
[00144] 00d4: d9 1b       	 				gosub s_vpush16
[00145] 00d6: 00 12       	 				  dw Ctp
[00146]                   	;----- cgadd
[00147] 00d8: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00148]                   
[00149]                   	;----- cgindw
[00150] 00da: d9 7e       	 				gosub s_deref16
[00151]                   	;----- cglit
[00152] 00dc: d9 12       	 				gosub s_epush16
[00153] 00de: 00 04       	 				  dw 4
[00154]                   	;----- cgldgw
[00155] 00e0: d9 1b       	 				gosub s_vpush16
[00156] 00e2: 00 12       	 				  dw Ctp
[00157]                   	;----- cgadd
[00158] 00e4: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00159]                   
[00160]                   	;----- cgindw
[00161] 00e6: d9 7e       	 				gosub s_deref16
[00162]                   	;----- cgldlab
[00163] 00e8: d9 12       	 				gosub s_epush16
[00164] 00ea: 02 be       	 				  dw  L3
[00165]                   	;----- cgcall
[00166] 00ec: d4 00 00    	          call  Cprintf
[00167]                   	;----- cgstack
[00168] 00ef: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00169] 00f1: 00 0e       	          dw  14  ;--- offset
[00170] 00f3: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00171]                   	;---- queue dpush
[00172]                   	;----- push + pop data not required, data remains unchanged in RA
[00173]                   	;----- end stmt ------
[00174]                   	;----- begin stmt ------
[00175]                   	;----- cglit
[00176] 00f6: d9 12       	 				gosub s_epush16
[00177] 00f8: 00 0e       	 				  dw 14
[00178]                   	;----- cgldgw
[00179] 00fa: d9 1b       	 				gosub s_vpush16
[00180] 00fc: 00 12       	 				  dw Ctp
[00181]                   	;----- cgadd
[00182] 00fe: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00183]                   
[00184]                   	;----- cgindw
[00185] 0100: d9 7e       	 				gosub s_deref16
[00186]                   	;----- cglit
[00187] 0102: d9 12       	 				gosub s_epush16
[00188] 0104: 00 01       	 				  dw 1
[00189]                   	;----- cgadd
[00190] 0106: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00191]                   
[00192]                   	;----- cglit
[00193] 0108: d9 12       	 				gosub s_epush16
[00194] 010a: 00 0c       	 				  dw 12
[00195]                   	;----- cgldgw
[00196] 010c: d9 1b       	 				gosub s_vpush16
[00197] 010e: 00 12       	 				  dw Ctp
[00198]                   	;----- cgadd
[00199] 0110: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00200]                   
[00201]                   	;----- cgindw
[00202] 0112: d9 7e       	 				gosub s_deref16
[00203]                   	;----- cgldlab
[00204] 0114: d9 12       	 				gosub s_epush16
[00205] 0116: 02 dd       	 				  dw  L4
[00206]                   	;----- cgcall
[00207] 0118: d4 00 00    	          call  Cprintf
[00208]                   	;----- cgstack
[00209] 011b: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00210] 011d: 00 06       	          dw  6  ;--- offset
[00211] 011f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00212]                   	;---- queue dpush
[00213]                   	;----- push + pop data not required, data remains unchanged in RA
[00214]                   	;----- end stmt ------
[00215]                   	;----- begin stmt ------
[00216]                   	;----- begin if
[00217]                   	;----- cglit
[00218] 0122: d9 12       	 				gosub s_epush16
[00219] 0124: 00 10       	 				  dw 16
[00220]                   	;----- cgldgw
[00221] 0126: d9 1b       	 				gosub s_vpush16
[00222] 0128: 00 12       	 				  dw Ctp
[00223]                   	;----- cgadd
[00224] 012a: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00225]                   
[00226]                   	;----- cgindw
[00227] 012c: d9 7e       	 				gosub s_deref16
[00228]                   	;----- genbrfalse
[00229]                   	;----- cgbrfalse
[00230]                   	;----- cgbr
[00231] 012e: d9 09       	 				 gosub s_dpop16       ; get result from expression stack
[00232] 0130: 9a          	 				 ghi   ra            ; get MSB from result
[00233] 0131: 52          	 				 str   r2            ; save in M(X)
[00234] 0132: 8a          	 				 glo   ra            ; get LSB from result
[00235] 0133: f1          	 				 or                  ; D = MSB | LSB
[00236] 0134: c2 01 48    	 				 lbz	L5           ; check for branch
[00237]                   	;----- begin stmt ------
[00238]                   	;----- cgldlab
[00239] 0137: d9 12       	 				gosub s_epush16
[00240] 0139: 02 ff       	 				  dw  L6
[00241]                   	;----- cgcall
[00242] 013b: d4 00 00    	          call  Cprintf
[00243]                   	;----- cgstack
[00244] 013e: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00245] 0140: 00 02       	          dw  2  ;--- offset
[00246] 0142: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00247]                   	;---- queue dpush
[00248]                   	;----- push + pop data not required, data remains unchanged in RA
[00249]                   	;----- end stmt ------
[00250]                   	;---- queue lbr L7
[00251]                   	;----- cgjump
[00252] 0145: c0 01 56    	 				  lbr	L7
[00253]                   
[00254]                   L5:
[00255]                   	;----- begin stmt ------
[00256]                   	;----- cgldlab
[00257] 0148: d9 12       	 				gosub s_epush16
[00258] 014a: 03 17       	 				  dw  L8
[00259]                   	;----- cgcall
[00260] 014c: d4 00 00    	          call  Cprintf
[00261]                   	;----- cgstack
[00262] 014f: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00263] 0151: 00 02       	          dw  2  ;--- offset
[00264] 0153: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00265]                   	;---- queue dpush
[00266]                   	;----- push + pop data not required, data remains unchanged in RA
[00267]                   	;----- end stmt ------
[00268]                   
[00269]                   L7:
[00270]                   	;----- end if
[00271]                   	;----- end stmt ------
[00272]                   	;----- begin stmt ------
[00273]                   	;----- cgldlw
[00274] 0156: d9 42       	          gosub s_lpush16       ; push value of local variable on ES
[00275] 0158: ff fe       	          dw  -2  ;--- offset
[00276]                   	;----- genbrfalse
[00277]                   	;----- cgbrfalse
[00278]                   	;----- cgbr
[00279] 015a: d9 09       	 				 gosub s_dpop16       ; get result from expression stack
[00280] 015c: 9a          	 				 ghi   ra            ; get MSB from result
[00281] 015d: 52          	 				 str   r2            ; save in M(X)
[00282] 015e: 8a          	 				 glo   ra            ; get LSB from result
[00283] 015f: f1          	 				 or                  ; D = MSB | LSB
[00284] 0160: c2 01 6a    	 				 lbz	L10           ; check for branch
[00285]                   	;----- cgldlab
[00286] 0163: d9 12       	 				gosub s_epush16
[00287] 0165: 03 33       	 				  dw  L12
[00288]                   	;---- queue lbr L11
[00289]                   	;----- cgjump
[00290] 0167: c0 01 6e    	 				  lbr	L11
[00291]                   
[00292]                   L10:
[00293]                   	;----- cgldlab
[00294] 016a: d9 12       	 				gosub s_epush16
[00295] 016c: 03 37       	 				  dw  L13
[00296]                   
[00297]                   L11:
[00298]                   	;----- cgldlab
[00299] 016e: d9 12       	 				gosub s_epush16
[00300] 0170: 03 27       	 				  dw  L9
[00301]                   	;----- cgcall
[00302] 0172: d4 00 00    	          call  Cprintf
[00303]                   	;----- cgstack
[00304] 0175: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00305] 0177: 00 04       	          dw  4  ;--- offset
[00306] 0179: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00307]                   	;---- queue dpush
[00308]                   	;----- push + pop data not required, data remains unchanged in RA
[00309]                   	;----- end stmt ------
[00310]                   	;----- begin stmt ------
[00311]                   	;----- cgldgw
[00312] 017c: d9 1b       	 				gosub s_vpush16
[00313] 017e: 00 12       	 				  dw Ctp
[00314]                   	;----- cgcall
[00315] 0180: d4 00 00    	          call  Casctime
[00316]                   	;----- cgstack
[00317] 0183: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00318] 0185: 00 02       	          dw  2  ;--- offset
[00319] 0187: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00320]                   	;---- queue dpush
[00321]                   	;------ commit push
[00322]                   	;----- cgpushd
[00323] 018a: d9 0c       	          gosub s_dpush16   	 ; put result on expression stack
[00324]                   	;----- cgldlab
[00325] 018c: d9 12       	 				gosub s_epush16
[00326] 018e: 03 3e       	 				  dw  L14
[00327]                   	;----- cgcall
[00328] 0190: d4 00 00    	          call  Cprintf
[00329]                   	;----- cgstack
[00330] 0193: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00331] 0195: 00 04       	          dw  4  ;--- offset
[00332] 0197: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00333]                   	;---- queue dpush
[00334]                   	;----- push + pop data not required, data remains unchanged in RA
[00335]                   	;----- end stmt ------
[00336]                   	;----- begin stmt ------
[00337]                   	;----- cgcall
[00338] 019a: d4 00 00    	          call  Ccstime
[00339]                   	;---- queue dpush
[00340]                   	;------ commit push
[00341]                   	;----- cgpushd
[00342] 019d: d9 0c       	          gosub s_dpush16   	 ; put result on expression stack
[00343]                   	;----- cgldlab
[00344] 019f: d9 12       	 				gosub s_epush16
[00345] 01a1: 03 47       	 				  dw  L15
[00346]                   	;----- cgcall
[00347] 01a3: d4 00 00    	          call  Cprintf
[00348]                   	;----- cgstack
[00349] 01a6: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00350] 01a8: 00 04       	          dw  4  ;--- offset
[00351] 01aa: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00352]                   	;---- queue dpush
[00353]                   	;----- push + pop data not required, data remains unchanged in RA
[00354]                   	;----- end stmt ------
[00355]                   	;----- begin stmt ------
[00356]                   	;----- cgldgw
[00357] 01ad: d9 1b       	 				gosub s_vpush16
[00358] 01af: 00 12       	 				  dw Ctp
[00359]                   	;----- cgldlab
[00360] 01b1: d9 12       	 				gosub s_epush16
[00361] 01b3: 03 52       	 				  dw  L16
[00362]                   	;----- cglit
[00363] 01b5: d9 12       	 				gosub s_epush16
[00364] 01b7: 00 40       	 				  dw 64
[00365]                   	;----- cgldga
[00366] 01b9: d9 12       	 				gosub s_epush16
[00367] 01bb: 00 14       	 				  dw Ctbuf
[00368]                   	;----- cgcall
[00369] 01bd: d4 00 00    	          call  Cstrftime
[00370]                   	;----- cgstack
[00371] 01c0: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00372] 01c2: 00 08       	          dw  8  ;--- offset
[00373] 01c4: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00374]                   	;---- queue dpush
[00375]                   	;----- push + pop data not required, data remains unchanged in RA
[00376]                   	;----- end stmt ------
[00377]                   	;----- begin stmt ------
[00378]                   	;----- cgldga
[00379] 01c7: d9 12       	 				gosub s_epush16
[00380] 01c9: 00 14       	 				  dw Ctbuf
[00381]                   	;----- cgldlab
[00382] 01cb: d9 12       	 				gosub s_epush16
[00383] 01cd: 03 6a       	 				  dw  L17
[00384]                   	;----- cgcall
[00385] 01cf: d4 00 00    	          call  Cprintf
[00386]                   	;----- cgstack
[00387] 01d2: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00388] 01d4: 00 04       	          dw  4  ;--- offset
[00389] 01d6: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00390]                   	;---- queue dpush
[00391]                   	;----- push + pop data not required, data remains unchanged in RA
[00392]                   	;----- end stmt ------
[00393]                   	;----- begin stmt ------
[00394]                   	;----- cgldgw
[00395] 01d9: d9 1b       	 				gosub s_vpush16
[00396] 01db: 00 12       	 				  dw Ctp
[00397]                   	;----- cgcall
[00398] 01dd: d4 00 00    	          call  Cutctime
[00399]                   	;----- cgstack
[00400] 01e0: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00401] 01e2: 00 02       	          dw  2  ;--- offset
[00402] 01e4: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00403]                   	;---- queue dpush
[00404]                   	;----- push + pop data not required, data remains unchanged in RA
[00405]                   	;----- end stmt ------
[00406]                   	;----- begin stmt ------
[00407]                   	;----- cglit
[00408] 01e7: d9 12       	 				gosub s_epush16
[00409] 01e9: 00 0a       	 				  dw 10
[00410]                   	;----- cgldgw
[00411] 01eb: d9 1b       	 				gosub s_vpush16
[00412] 01ed: 00 12       	 				  dw Ctp
[00413]                   	;----- cgadd
[00414] 01ef: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00415]                   
[00416]                   	;----- cgindw
[00417] 01f1: d9 7e       	 				gosub s_deref16
[00418]                   	;----- cglit
[00419] 01f3: d9 12       	 				gosub s_epush16
[00420] 01f5: 07 6c       	 				  dw 1900
[00421]                   	;----- cgadd
[00422] 01f7: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00423]                   
[00424]                   	;----- cglit
[00425] 01f9: d9 12       	 				gosub s_epush16
[00426] 01fb: 00 06       	 				  dw 6
[00427]                   	;----- cgldgw
[00428] 01fd: d9 1b       	 				gosub s_vpush16
[00429] 01ff: 00 12       	 				  dw Ctp
[00430]                   	;----- cgadd
[00431] 0201: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00432]                   
[00433]                   	;----- cgindw
[00434] 0203: d9 7e       	 				gosub s_deref16
[00435]                   	;----- cglit
[00436] 0205: d9 12       	 				gosub s_epush16
[00437] 0207: 00 08       	 				  dw 8
[00438]                   	;----- cgldgw
[00439] 0209: d9 1b       	 				gosub s_vpush16
[00440] 020b: 00 12       	 				  dw Ctp
[00441]                   	;----- cgadd
[00442] 020d: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00443]                   
[00444]                   	;----- cgindw
[00445] 020f: d9 7e       	 				gosub s_deref16
[00446]                   	;----- cglit
[00447] 0211: d9 12       	 				gosub s_epush16
[00448] 0213: 00 01       	 				  dw 1
[00449]                   	;----- cgadd
[00450] 0215: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00451]                   
[00452]                   	;----- cgldgw
[00453] 0217: d9 1b       	 				gosub s_vpush16
[00454] 0219: 00 12       	 				  dw Ctp
[00455]                   	;----- cgindw
[00456] 021b: d9 7e       	 				gosub s_deref16
[00457]                   	;----- cglit
[00458] 021d: d9 12       	 				gosub s_epush16
[00459] 021f: 00 02       	 				  dw 2
[00460]                   	;----- cgldgw
[00461] 0221: d9 1b       	 				gosub s_vpush16
[00462] 0223: 00 12       	 				  dw Ctp
[00463]                   	;----- cgadd
[00464] 0225: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00465]                   
[00466]                   	;----- cgindw
[00467] 0227: d9 7e       	 				gosub s_deref16
[00468]                   	;----- cglit
[00469] 0229: d9 12       	 				gosub s_epush16
[00470] 022b: 00 04       	 				  dw 4
[00471]                   	;----- cgldgw
[00472] 022d: d9 1b       	 				gosub s_vpush16
[00473] 022f: 00 12       	 				  dw Ctp
[00474]                   	;----- cgadd
[00475] 0231: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00476]                   
[00477]                   	;----- cgindw
[00478] 0233: d9 7e       	 				gosub s_deref16
[00479]                   	;----- cgldlab
[00480] 0235: d9 12       	 				gosub s_epush16
[00481] 0237: 03 7a       	 				  dw  L18
[00482]                   	;----- cgcall
[00483] 0239: d4 00 00    	          call  Cprintf
[00484]                   	;----- cgstack
[00485] 023c: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00486] 023e: 00 0e       	          dw  14  ;--- offset
[00487] 0240: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00488]                   	;---- queue dpush
[00489]                   	;----- push + pop data not required, data remains unchanged in RA
[00490]                   	;----- end stmt ------
[00491]                   	;----- begin stmt ------
[00492]                   	;----- cglit
[00493] 0243: d9 12       	 				gosub s_epush16
[00494] 0245: 00 10       	 				  dw 16
[00495]                   	;----- cgldgw
[00496] 0247: d9 1b       	 				gosub s_vpush16
[00497] 0249: 00 12       	 				  dw Ctp
[00498]                   	;----- cgadd
[00499] 024b: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00500]                   
[00501]                   	;----- cgindw
[00502] 024d: d9 7e       	 				gosub s_deref16
[00503]                   	;----- cglit
[00504] 024f: d9 12       	 				gosub s_epush16
[00505] 0251: 00 0e       	 				  dw 14
[00506]                   	;----- cgldgw
[00507] 0253: d9 1b       	 				gosub s_vpush16
[00508] 0255: 00 12       	 				  dw Ctp
[00509]                   	;----- cgadd
[00510] 0257: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00511]                   
[00512]                   	;----- cgindw
[00513] 0259: d9 7e       	 				gosub s_deref16
[00514]                   	;----- cglit
[00515] 025b: d9 12       	 				gosub s_epush16
[00516] 025d: 00 01       	 				  dw 1
[00517]                   	;----- cgadd
[00518] 025f: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00519]                   
[00520]                   	;----- cglit
[00521] 0261: d9 12       	 				gosub s_epush16
[00522] 0263: 00 0c       	 				  dw 12
[00523]                   	;----- cgldgw
[00524] 0265: d9 1b       	 				gosub s_vpush16
[00525] 0267: 00 12       	 				  dw Ctp
[00526]                   	;----- cgadd
[00527] 0269: d9 84       	          gosub s_add16				 ; add TOS and SOS on Expression Stack
[00528]                   
[00529]                   	;----- cgindw
[00530] 026b: d9 7e       	 				gosub s_deref16
[00531]                   	;----- cgldlab
[00532] 026d: d9 12       	 				gosub s_epush16
[00533] 026f: 03 9e       	 				  dw  L19
[00534]                   	;----- cgcall
[00535] 0271: d4 00 00    	          call  Cprintf
[00536]                   	;----- cgstack
[00537] 0274: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00538] 0276: 00 08       	          dw  8  ;--- offset
[00539] 0278: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00540]                   	;---- queue dpush
[00541]                   	;----- push + pop data not required, data remains unchanged in RA
[00542]                   	;----- end stmt ------
[00543]                   	;----- begin stmt ------
[00544]                   	;----- cgldgw
[00545] 027b: d9 1b       	 				gosub s_vpush16
[00546] 027d: 00 12       	 				  dw Ctp
[00547]                   	;----- cgldlab
[00548] 027f: d9 12       	 				gosub s_epush16
[00549] 0281: 03 d0       	 				  dw  L20
[00550]                   	;----- cglit
[00551] 0283: d9 12       	 				gosub s_epush16
[00552] 0285: 00 40       	 				  dw 64
[00553]                   	;----- cgldga
[00554] 0287: d9 12       	 				gosub s_epush16
[00555] 0289: 00 14       	 				  dw Ctbuf
[00556]                   	;----- cgcall
[00557] 028b: d4 00 00    	          call  Cstrftime
[00558]                   	;----- cgstack
[00559] 028e: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00560] 0290: 00 08       	          dw  8  ;--- offset
[00561] 0292: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00562]                   	;---- queue dpush
[00563]                   	;----- push + pop data not required, data remains unchanged in RA
[00564]                   	;----- end stmt ------
[00565]                   	;----- begin stmt ------
[00566]                   	;----- cgldga
[00567] 0295: d9 12       	 				gosub s_epush16
[00568] 0297: 00 14       	 				  dw Ctbuf
[00569]                   	;----- cgldlab
[00570] 0299: d9 12       	 				gosub s_epush16
[00571] 029b: 03 e7       	 				  dw  L21
[00572]                   	;----- cgcall
[00573] 029d: d4 00 00    	          call  Cprintf
[00574]                   	;----- cgstack
[00575] 02a0: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00576] 02a2: 00 04       	          dw  4  ;--- offset
[00577] 02a4: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00578]                   	;---- queue dpush
[00579]                   	;----- push + pop data not required, data remains unchanged in RA
[00580]                   	;----- end stmt ------
[00581]                   
[00582]                   L1:
[00583]                   	;----- cgstack
[00584] 02a7: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00585] 02a9: 00 04       	          dw  4  ;--- offset
[00586] 02ab: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00587]                   	;----- cgexit
[00588] 02ae: e2          	          sex   r2            ; make sure X = SP
[00589] 02af: d9 06       	          gosub s_stkchk      ; check for expression stack creep
[00590] 02b1: c3 00 00    	          lbdf  stk_err			 ; exit immediately when stack creep error occurs
[00591] 02b4: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00592]                   
[00593] 02b9: d5          	          rtn    			 	     ; return to caller
[00594]                   
[00595]                   ;----- string table
[00596]                   
[00597]                   L2:
[00598] 02ba: 45 44 54      db 'EDT'    ;----- cgdefs
[00599] 02bd: 00          	db	$00    ;----- cgdefb
[00600]                   
[00601]                   L3:
[00602] 02be: 25 30 32 64   db '%02d:%02d:%02d %02d/%02d/%04d', 10    ;----- cgdefs
              3a 25 30 32 
              64 3a 25 30 
              32 64 20 25 
              30 32 64 2f 
              25 30 32 64 
              2f 25 30 34 
              64 0a 
[00603] 02dc: 00          	db	$00    ;----- cgdefb
[00604]                   
[00605]                   L4:
[00606] 02dd: 44 61 79 20   db 'Day of week: %d  Day of Year: %d', 10    ;----- cgdefs
              6f 66 20 77 
              65 65 6b 3a 
              20 25 64 20 
              20 44 61 79 
              20 6f 66 20 
              59 65 61 72 
              3a 20 25 64 
              0a 
[00607] 02fe: 00          	db	$00    ;----- cgdefb
[00608]                   
[00609]                   L6:
[00610] 02ff: 44 61 79 6c   db 'Daylight Savings Time.', 10    ;----- cgdefs
              69 67 68 74 
              20 53 61 76 
              69 6e 67 73 
              20 54 69 6d 
              65 2e 0a 
[00611] 0316: 00          	db	$00    ;----- cgdefb
[00612]                   
[00613]                   L8:
[00614] 0317: 53 74 61 6e   db 'Standard Time.', 10    ;----- cgdefs
              64 61 72 64 
              20 54 69 6d 
              65 2e 0a 
[00615] 0326: 00          	db	$00    ;----- cgdefb
[00616]                   
[00617]                   L9:
[00618] 0327: 53 6f 75 72   db 'Source: %s', 10    ;----- cgdefs
              63 65 3a 20 
              25 73 0a 
[00619] 0332: 00          	db	$00    ;----- cgdefb
[00620]                   
[00621]                   L12:
[00622] 0333: 52 54 43      db 'RTC'    ;----- cgdefs
[00623] 0336: 00          	db	$00    ;----- cgdefb
[00624]                   
[00625]                   L13:
[00626] 0337: 4b 65 72 6e   db 'Kernel'    ;----- cgdefs
              65 6c 
[00627] 033d: 00          	db	$00    ;----- cgdefb
[00628]                   
[00629]                   L14:
[00630] 033e: 41 73 63 69   db 'Ascii %s'    ;----- cgdefs
              69 20 25 73 
[00631] 0346: 00          	db	$00    ;----- cgdefb
[00632]                   
[00633]                   L15:
[00634] 0347: 43 53 74 69   db 'CStime: %s'    ;----- cgdefs
              6d 65 3a 20 
              25 73 
[00635] 0351: 00          	db	$00    ;----- cgdefb
[00636]                   
[00637]                   L16:
[00638] 0352: 25 41 20 25   db '%A %Y-%m-%d %H:%M:%S %Z'    ;----- cgdefs
              59 2d 25 6d 
              2d 25 64 20 
              25 48 3a 25 
              4d 3a 25 53 
              20 25 5a 
[00639] 0369: 00          	db	$00    ;----- cgdefb
[00640]                   
[00641]                   L17:
[00642] 036a: 4c 6f 63 61   db 'Local time: %s', 10    ;----- cgdefs
              6c 20 74 69 
              6d 65 3a 20 
              25 73 0a 
[00643] 0379: 00          	db	$00    ;----- cgdefb
[00644]                   
[00645]                   L18:
[00646] 037a: 47 4d 54 3a   db 'GMT: %02d:%02d:%02d %02d/%02d/%04d', 10    ;----- cgdefs
              20 25 30 32 
              64 3a 25 30 
              32 64 3a 25 
              30 32 64 20 
              25 30 32 64 
              2f 25 30 32 
              64 2f 25 30 
              34 64 0a 
[00647] 039d: 00          	db	$00    ;----- cgdefb
[00648]                   
[00649]                   L19:
[00650] 039e: 47 4d 54 20   db 'GMT Day of week: %d  GMT Day of Year: %d DST: %d', 10    ;----- cgdefs
              44 61 79 20 
              6f 66 20 77 
              65 65 6b 3a 
              20 25 64 20 
              20 47 4d 54 
              20 44 61 79 
              20 6f 66 20 
              59 65 61 72 
              3a 20 25 64 
              20 44 53 54 
              3a 20 25 64 
              0a 
[00651] 03cf: 00          	db	$00    ;----- cgdefb
[00652]                   
[00653]                   L20:
[00654] 03d0: 25 41 20 25   db '%A %Y-%m-%d %H:%M:%S Z'    ;----- cgdefs
              59 2d 25 6d 
              2d 25 64 20 
              25 48 3a 25 
              4d 3a 25 53 
              20 5a 
[00655] 03e6: 00          	db	$00    ;----- cgdefb
[00656]                   
[00657]                   L21:
[00658] 03e7: 47 4d 54 20   db 'GMT time: %s', 10    ;----- cgdefs
              74 69 6d 65 
              3a 20 25 73 
              0a 
[00659] 03f4: 00          	db	$00    ;----- cgdefb
[00660]                   	;---- cgpostlude
[00661] 03f5:             	             endp
