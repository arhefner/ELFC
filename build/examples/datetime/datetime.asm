; -------------------------------------------------------------------
; This file generated by ElfC, based on SubC
; SubC Copyright 2012-2025 by Nils Holm
; -------------------------------------------------------------------
#include include/ops_c.inc
#include include/os_api.inc
#include include/elfc.inc

	           proc datetime

#include include/stdlib.inc

#include include/stdio.inc

.link .library time.lib

#include include/time.inc
Cnow:    ds 18    ;----- cglbss
	;----- cgpublic
	              public Ctp
Ctp:    ds 2    ;----- cggbss
	;----- cgpublic
	              public Ctbuf
Ctbuf:    ds 64    ;----- cggbss
	;----- cgpublic
	              public Cmain
Cmain:
  ;----- cgsetup
#ifdef STGROM
      load   r1, $F000  ; set up handler for STG Breakpoint
#endif
	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  -4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cnow
	;----- cgstorgw
	 				 gosub s_vstor16      ; store value from ES in global variable
	 				  dw Ctp
	;----- cgpopd
	          gosub s_dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				gosub s_epush16
	 				  dw 1
	;----- cglit
	 				gosub s_epush16
	 				  dw -300
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L2
	;----- cgcall
	          call  Ctimezone
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgcall
	          call  Csystime
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          gosub s_dpush16   	 ; put result on expression stack
	;----- cgstorlw
	          gosub s_lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          gosub s_dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				gosub s_epush16
	 				  dw 10
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 1900
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				gosub s_epush16
	 				  dw 6
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 8
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 1
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 2
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 4
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L3
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  14  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				gosub s_epush16
	 				  dw 14
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 1
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				gosub s_epush16
	 				  dw 12
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L4
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cglit
	 				gosub s_epush16
	 				  dw 16
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- genbrfalse
	;----- cgbrfalse
	;----- cgbr
	 				 gosub s_dpop16       ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L5           ; check for branch
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L6
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L7
	;----- cgjump
	 				  lbr	L7

L5:
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L8
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L7:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          gosub s_lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- genbrfalse
	;----- cgbrfalse
	;----- cgbr
	 				 gosub s_dpop16       ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L10           ; check for branch
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L12
	;---- queue lbr L11
	;----- cgjump
	 				  lbr	L11

L10:
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L13

L11:
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L9
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgcall
	          call  Casctime
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          gosub s_dpush16   	 ; put result on expression stack
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L14
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Ccstime
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          gosub s_dpush16   	 ; put result on expression stack
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L15
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L16
	;----- cglit
	 				gosub s_epush16
	 				  dw 64
	;----- cgldga
	 				gosub s_epush16
	 				  dw Ctbuf
	;----- cgcall
	          call  Cstrftime
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  8  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Ctbuf
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L17
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgcall
	          call  Cutctime
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				gosub s_epush16
	 				  dw 10
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 1900
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				gosub s_epush16
	 				  dw 6
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 8
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 1
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 2
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 4
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L18
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  14  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				gosub s_epush16
	 				  dw 16
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 14
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cglit
	 				gosub s_epush16
	 				  dw 1
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				gosub s_epush16
	 				  dw 12
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgadd
	          gosub s_add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				gosub s_deref16
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L19
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  8  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ctp
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L20
	;----- cglit
	 				gosub s_epush16
	 				  dw 64
	;----- cgldga
	 				gosub s_epush16
	 				  dw Ctbuf
	;----- cgcall
	          call  Cstrftime
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  8  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Ctbuf
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L21
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L1:
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          gosub s_stkchk      ; check for expression stack creep
	          lbdf  stk_err			 ; exit immediately when stack creep error occurs
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn    			 	     ; return to caller

;----- string table

L2:
  db 'EDT'    ;----- cgdefs
	db	$00    ;----- cgdefb

L3:
  db '%02d:%02d:%02d %02d/%02d/%04d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L4:
  db 'Day of week: %d  Day of Year: %d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L6:
  db 'Daylight Savings Time.', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L8:
  db 'Standard Time.', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L9:
  db 'Source: %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L12:
  db 'RTC'    ;----- cgdefs
	db	$00    ;----- cgdefb

L13:
  db 'Kernel'    ;----- cgdefs
	db	$00    ;----- cgdefb

L14:
  db 'Ascii %s'    ;----- cgdefs
	db	$00    ;----- cgdefb

L15:
  db 'CStime: %s'    ;----- cgdefs
	db	$00    ;----- cgdefb

L16:
  db '%A %Y-%m-%d %H:%M:%S %Z'    ;----- cgdefs
	db	$00    ;----- cgdefb

L17:
  db 'Local time: %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L18:
  db 'GMT: %02d:%02d:%02d %02d/%02d/%04d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L19:
  db 'GMT Day of week: %d  GMT Day of Year: %d DST: %d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L20:
  db '%A %Y-%m-%d %H:%M:%S Z'    ;----- cgdefs
	db	$00    ;----- cgdefb

L21:
  db 'GMT time: %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb
	;---- cgpostlude
	             endp
