; -------------------------------------------------------------------
; This file generated by ElfC, based on SubC
; SubC Copyright 2012-2025 by Nils Holm
; -------------------------------------------------------------------
#include include/ops_c.inc
#include include/os_api.inc
#include include/elfc.inc

	           proc printfmt

#include include/stdlib.inc

#include include/stdio.inc
	;----- cgpublic
	              public Ci
Ci:	db	$32, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Cj
Cj:	db	$d4, $fe  ;----- cgdefw LSB first, MSB second
Cstr:  db 'string'    ;----- cgdefs
	db	$00    ;----- cgdefb
	;----- cgpublic
	              public Cstr
	;----- cgpublic
	              public Cmain
Cmain:
  ;----- cgsetup
#ifdef STGROM
      load   r1, $F000  ; set up handler for STG Breakpoint
#endif
	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L2
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L3
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L4
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L5
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L6
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L7
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L8
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L9
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				gosub s_epush16
	 				  dw 3
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L10
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cstr
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cstr
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L11
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				gosub s_epush16
	 				  dw Cstr
	;----- cgindb
	 				gosub s_deref8
	 				  db 0
	;----- cglit
	 				gosub s_epush16
	 				  dw 113
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L12
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L13
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L14
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L15
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Cj
	;----- cgldgw
	 				gosub s_vpush16
	 				  dw Ci
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L16
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L17
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlab
	 				gosub s_epush16
	 				  dw  L18
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          gosub s_esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L1:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          gosub s_stkchk      ; check for expression stack creep
	          lbdf  stk_err			 ; exit immediately when stack creep error occurs
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn    			 	     ; return to caller

;----- string table

L2:
  db 'Int formats:', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L3:
  db 'plain: _%d_%d_', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L4:
  db '+ flag: _%+d_%+d_', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L5:
  db 'size 4: _%4d_%4d_', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L6:
  db '04 flag: _%04d_%04d_', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L7:
  db '-4 flag: _%-4d_%-4d_', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L8:
  db ' 4 flag: _% 4d_% 4d_', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L9:
  db '+04: _%+04d_%+04d_', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L10:
  db 'Int 06:%06i!', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L11:
  db 'Pointer %p and string %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L12:
  db 'Character %c %c', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L13:
  db 'Hex %x %X', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L14:
  db 'Alt Hex: %#x %#X', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L15:
  db 'Octal %o %o', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L16:
  db 'Alt Octal %#o %#o', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L17:
  db 'Number characters written so far: %n', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L18:
  db 'Escape for %% sign', 10    ;----- cgdefs
	db	$00    ;----- cgdefb
	;---- cgpostlude
	             endp
