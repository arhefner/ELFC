[00001]                   ; -------------------------------------------------------------------
[00002]                   ; This file generated by ElfC, based on SubC
[00003]                   ; SubC Copyright 2012-2025 by Nils Holm
[00004]                   ; -------------------------------------------------------------------
<00000>                   #include include/ops_c.inc
<00001>                   ;------------------------------------------------------
<00002>                   ; ElfC Asm/02 Opcodes
<00003>                   ;------------------------------------------------------
<00004>                   
<00005>                   .op "PUSH","N","9$1 73 8$1 73"
<00006>                   .op "POP","N","60 72 A$1 F0 B$1"
<00007>                   .op "CALL","W","D4 H1 L1"
<00008>                   .op "RTN","","D5"
<00009>                   .op "CLC","","FC 00"
<00010>                   .op "STC","","FF 00"
<00011>                   .op "COPY","NR","8$1 A$2 9$1 B$2"
<00012>                   .op "LOAD","NW","F8 L2 A$1 F8 H2 B$1"
<00013>                   .op "MATCH","NW","8$1 FF L2 52 9$1 7F H2 F1"
<00014>                   .op "BRKPT","","79 D1"
<00015>                   .op "ADDR16","NR","8$2 52 8$1 F4 A$1 9$2 52 9$1 74 B$1"
<00016>                   .op "SUBR16","NR","8$2 52 8$1 F7 A$1 9$2 52 9$1 77 B$1"
<00017>                   .op "GOSUB","W","D9 L1"
<00018>                   .op "RSUB","","C0 21 00"
<00019>                   
<00020>                   ;------------------- end ops_c.inc --------------------
<00000>                   #include include/os_api.inc
<00001>                   ;--------------------------------------------------------------------
<00002>                   ; Elf/OS and Mini/DOS Kernel API
<00003>                   ;--------------------------------------------------------------------
<00004>                   
<00005> 0000:             O_OPEN:       equ    0306h             ; open a file
<00006> 0000:             O_READ:       equ    0309h             ; read from file
<00007> 0000:             O_WRITE:      equ    030ch             ; write to file
<00008> 0000:             O_SEEK:       equ    030fh             ; seek to file position
<00009> 0000:             O_CLOSE:      equ    0312h             ; close file
<00010> 0000:             O_DELETE:     equ    0318h             ; delete a file
<00011> 0000:             O_RENAME:     equ    031bh             ; rename a file
<00012> 0000:             O_TYPE:       equ    0330h             ; console character output
<00013> 0000:             O_MSG:        equ    0333h             ; console string output
<00014> 0000:             O_READKEY:    equ    0336h             ; console character input
<00015> 0000:             O_INPUT:      equ    0339h             ; console string input
<00016> 0000:             O_INMSG:      equ    034bh             ; console inline messae output
<00017> 0000:             O_GETDEV:     equ    034eh             ; get device information
<00018> 0000:             O_GETTOD:     equ    0351h             ; get time of day
<00019> 0000:             O_ALLOC:      equ    036ch             ; alloc memory block
<00020> 0000:             O_DEALLOC:    equ    036fh             ; dealloc memory block
<00021>                   
<00022>                   ;--------------------------------------------------------------------
<00023>                   ; Elf/OS and Mini/DOS Data Locations
<00024>                   ;--------------------------------------------------------------------
<00025>                   
<00026> 0000:             K_KEYBUF:     equ    0080h             ; input key buffer
<00027> 0000:             K_MONTH:      equ    0475h             ; date/time information
<00028>                   
<00029>                   ;-------------------------- end os_api.inc --------------------------
<00000>                   #include include/elfc.inc
<00001>                   ;----------------------------------
<00002>                   ; ElfC - crt0 subroutine vectors
<00003>                   ;----------------------------------
<00004>                   
<00005>                   #define SUBTBL   $2100
<00006> 0000:             s_return:  equ  SUBTBL
<00007>                   
<00008> 0000:             s_esmove:  equ  (SUBTBL + $03)
<00009> 0000:             s_stkchk:  equ  (SUBTBL + $06)
<00010> 0000:             s_dpop16:  equ  (SUBTBL + $09)
<00011> 0000:             s_dpush16: equ  (SUBTBL + $0C)
<00012> 0000:             s_dget16:  equ  (SUBTBL + $0F)
<00013> 0000:             s_epush16: equ  (SUBTBL + $12)
<00014> 0000:             s_vpop16:  equ  (SUBTBL + $15)
<00015> 0000:             s_vpush8:  equ  (SUBTBL + $18)
<00016> 0000:             s_vpush16: equ  (SUBTBL + $1B)
<00017> 0000:             s_vstor8:  equ  (SUBTBL + $1E)
<00018> 0000:             s_vstor16: equ  (SUBTBL + $21)
<00019> 0000:             s_vinc8:   equ  (SUBTBL + $24)
<00020> 0000:             s_vinc16:  equ  (SUBTBL + $27)
<00021> 0000:             s_vdec8:   equ  (SUBTBL + $2A)
<00022> 0000:             s_vdec16:  equ  (SUBTBL + $2D)
<00023> 0000:             s_vpinc16: equ  (SUBTBL + $30)
<00024> 0000:             s_vpdec16: equ  (SUBTBL + $33)
<00025> 0000:             s_linit16: equ  (SUBTBL + $36)
<00026> 0000:             s_lstor8:  equ  (SUBTBL + $39)
<00027> 0000:             s_lstor16: equ  (SUBTBL + $3C)
<00028> 0000:             s_lpush8:  equ  (SUBTBL + $3F)
<00029> 0000:             s_lpush16: equ  (SUBTBL + $42)
<00030> 0000:             s_lget16:  equ  (SUBTBL + $45)
<00031> 0000:             s_lset16:  equ  (SUBTBL + $48)
<00032> 0000:             s_linc8:   equ  (SUBTBL + $4B)
<00033> 0000:             s_linc16:  equ  (SUBTBL + $4E)
<00034> 0000:             s_ldec8:   equ  (SUBTBL + $51)
<00035> 0000:             s_ldec16:  equ  (SUBTBL + $54)
<00036> 0000:             s_lpinc16: equ  (SUBTBL + $57)
<00037> 0000:             s_lpdec16: equ  (SUBTBL + $5A)
<00038> 0000:             s_psave:   equ  (SUBTBL + $5D)
<00039> 0000:             s_pstor8:  equ  (SUBTBL + $60)
<00040> 0000:             s_pstor16: equ  (SUBTBL + $63)
<00041> 0000:             s_pinc8:   equ  (SUBTBL + $66)
<00042> 0000:             s_pinc16:  equ  (SUBTBL + $69)
<00043> 0000:             s_pdec8:   equ  (SUBTBL + $6C)
<00044> 0000:             s_pdec16:  equ  (SUBTBL + $6F)
<00045> 0000:             s_pincptr: equ  (SUBTBL + $72)
<00046> 0000:             s_pdecptr: equ  (SUBTBL + $75)
<00047> 0000:             s_laddr16: equ  (SUBTBL + $78)
<00048> 0000:             s_deref8:  equ  (SUBTBL + $7B)
<00049> 0000:             s_deref16: equ  (SUBTBL + $7E)
<00050> 0000:             s_swap16:  equ  (SUBTBL + $81)
<00051> 0000:             s_add16:   equ  (SUBTBL + $84)
<00052> 0000:             s_sub16:   equ  (SUBTBL + $87)
<00053> 0000:             s_neg16:   equ  (SUBTBL + $8A)
<00054> 0000:             s_mdsgn16: equ  (SUBTBL + $8D)
<00055> 0000:             s_mul16:   equ  (SUBTBL + $90)
<00056> 0000:             s_div16:   equ  (SUBTBL + $93)
<00057> 0000:             s_mod16:   equ  (SUBTBL + $96)
<00058> 0000:             s_bool16:  equ  (SUBTBL + $99)
<00059> 0000:             s_true16:  equ  (SUBTBL + $9C)
<00060> 0000:             s_false16: equ  (SUBTBL + $9F)
<00061> 0000:             s_and16:   equ  (SUBTBL + $A2)
<00062> 0000:             s_or16:    equ  (SUBTBL + $A5)
<00063> 0000:             s_xor16:   equ  (SUBTBL + $A8)
<00064> 0000:             s_not16:   equ  (SUBTBL + $AB)
<00065> 0000:             s_inv16:   equ  (SUBTBL + $AE)
<00066> 0000:             s_shl16:   equ  (SUBTBL + $B1)
<00067> 0000:             s_shr16:   equ  (SUBTBL + $B4)
<00068> 0000:             s_eq16:    equ  (SUBTBL + $B7)
<00069> 0000:             s_gt16:    equ  (SUBTBL + $BA)
<00070> 0000:             s_gte16:   equ  (SUBTBL + $BD)
<00071> 0000:             s_lt16:    equ  (SUBTBL + $C0)
<00072> 0000:             s_lte16:   equ  (SUBTBL + $C3)
<00073> 0000:             s_ne16:    equ  (SUBTBL + $C6)
<00074> 0000:             s_ugt16:   equ  (SUBTBL + $C9)
<00075> 0000:             s_uge16:   equ  (SUBTBL + $CC)
<00076> 0000:             s_ult16:   equ  (SUBTBL + $CF)
<00077> 0000:             s_ule16:   equ  (SUBTBL + $D2)
<00078> 0000:             s_scltos2: equ  (SUBTBL + $D5)
<00079> 0000:             s_scltos4: equ  (SUBTBL + $D8)
<00080> 0000:             s_sclsos2: equ  (SUBTBL + $DB)
<00081> 0000:             s_sclsos4: equ  (SUBTBL + $DE)
<00082> 0000:             s_unscl2:  equ  (SUBTBL + $E1)
<00083> 0000:             s_unscl4:  equ  (SUBTBL + $E4)
<00084>                   
<00085>                   ;----------------------------------
<00086>                   ; ElfC crt0 - error vectors
<00087>                   ;----------------------------------
<00088>                   
<00089> 0000:                       extrn   auto_err
<00090> 0000:                       extrn   stk_err
<00091>                   
<00092>                   ;---------- end elfc.inc ----------
[00008]                   
[00009] 0000:             	           proc printfmt
[00010]                   
<00000>                   #include include/stdlib.inc
<00001> 0000:                          extrn C_init
<00002> 0000:                          extrn C_fdinit
<00003> 0000:                          extrn C_fdtable
<00004> 0000:                          extrn C_fildes
<00005> 0000:                          extrn Cabort
<00006> 0000:                          extrn Cabs
<00007> 0000:                          extrn Catexit
<00008> 0000:                          extrn Cexit
<00009> 0000:                          extrn Cmalloc
<00010> 0000:                          extrn Ccalloc
<00011> 0000:                          extrn Crealloc
<00012> 0000:                          extrn Cfree
<00013> 0000:                          extrn Catoi
<00014> 0000:                          extrn Citoa
<00015> 0000:                          extrn Citox
<00016> 0000:                          extrn Citou
<00017> 0000:                          extrn Cdiv
<00018> 0000:                          extrn Cbsearch
<00019> 0000:                          extrn Cqsort
<00020> 0000:                          extrn Crand
<00021> 0000:                          extrn Csrand
<00022> 0000:                          extrn Ccreat
<00023> 0000:                          extrn Copen
<00024> 0000:                          extrn Cclose
<00025> 0000:                          extrn Cread
<00026> 0000:                          extrn Cwrite
<00027> 0000:                          extrn Clseek
<00028> 0000:                          extrn Cunlink
<00029> 0000:                          extrn Crename
<00030> 0000:                          extrn Cmin
<00031> 0000:                          extrn Cmax
[00012]                   
<00000>                   #include include/stdio.inc
<00001> 0000:                          extrn Cstdin
<00002> 0000:                          extrn Cstdout
<00003> 0000:                          extrn Cstderr
<00004> 0000:                          extrn Cputs
<00005> 0000:                          extrn Cputstr
<00006> 0000:                          extrn Cgets
<00007> 0000:                          extrn Cputch
<00008> 0000:                          extrn Cgetch
<00009> 0000:                          extrn Cputchar
<00010> 0000:                          extrn Cgetchar
<00011> 0000:                          extrn Cfdopen
<00012> 0000:                          extrn Cfclose
<00013> 0000:                          extrn Cfopen
<00014> 0000:                          extrn Cferror
<00015> 0000:                          extrn Cfeof
<00016> 0000:                          extrn Cclearerr
<00017> 0000:                          extrn Cfgetc
<00018> 0000:                          extrn Cfputc
<00019> 0000:                          extrn Cfgets
<00020> 0000:                          extrn Cfputs
<00021> 0000:                          extrn Cungetc
<00022> 0000:                          extrn Cfread
<00023> 0000:                          extrn Cfwrite
<00024> 0000:                          extrn Cfflush
<00025> 0000:                          extrn Cfprintf
<00026> 0000:                          extrn Ckprintf
<00027> 0000:                          extrn Cprintf
<00028> 0000:                          extrn Csprintf
<00029> 0000:                          extrn Cvfprintf
<00030> 0000:                          extrn Cvprintf
<00031> 0000:                          extrn Cvsprintf
<00032> 0000:                          extrn Cfscanf
<00033> 0000:                          extrn Cscanf
<00034> 0000:                          extrn Csscanf
<00035> 0000:                          extrn Cfgetpos
<00036> 0000:                          extrn Cfsetpos
<00037> 0000:                          extrn Cfseek
<00038> 0000:                          extrn Cftell
<00039> 0000:                          extrn Cperror
<00040> 0000:                          extrn Crewind
<00041> 0000:                          extrn Cremove
<00042> 0000:                          extrn Ctmpnam
<00043> 0000:                          extrn Ctmpfile
<00044> 0000:                          extrn Cfileno
[00014]                   	;----- cgpublic
[00015] 0000:             	              public Ci
[00016] 0000: 32 00       Ci:	db	$32, $00  ;----- cgdefw LSB first, MSB second
[00017]                   	;----- cgpublic
[00018] 0002:             	              public Cj
[00019] 0002: d4 fe       Cj:	db	$d4, $fe  ;----- cgdefw LSB first, MSB second
[00020] 0004: 73 74 72 69 Cstr:  db 'string'    ;----- cgdefs
              6e 67 
[00021] 000a: 00          	db	$00    ;----- cgdefb
[00022]                   	;----- cgpublic
[00023] 000b:             	              public Cstr
[00024]                   	;----- cgpublic
[00025] 000b:             	              public Cmain
[00026]                   Cmain:
[00027]                     ;----- cgsetup
[00030]                   #endif
[00031]                   	;---- cgentry
[00032] 000b: e2          	          sex   r2   				 ; make sure X = SP
[00033] 000c: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00034] 0010: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00035]                   	;----- begin stmt ------
[00036]                   	;----- cgldlab
[00037] 0014: d9 12       	 				gosub s_epush16
[00038] 0016: 01 7d       	 				  dw  L2
[00039]                   	;----- cgcall
[00040] 0018: d4 00 00    	          call  Cprintf
[00041]                   	;----- cgstack
[00042] 001b: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00043] 001d: 00 02       	          dw  2  ;--- offset
[00044] 001f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00045]                   	;---- queue dpush
[00046]                   	;----- push + pop data not required, data remains unchanged in RA
[00047]                   	;----- end stmt ------
[00048]                   	;----- begin stmt ------
[00049]                   	;----- cgldgw
[00050] 0022: d9 1b       	 				gosub s_vpush16
[00051] 0024: 00 02       	 				  dw Cj
[00052]                   	;----- cgldgw
[00053] 0026: d9 1b       	 				gosub s_vpush16
[00054] 0028: 00 00       	 				  dw Ci
[00055]                   	;----- cgldlab
[00056] 002a: d9 12       	 				gosub s_epush16
[00057] 002c: 01 8b       	 				  dw  L3
[00058]                   	;----- cgcall
[00059] 002e: d4 00 00    	          call  Cprintf
[00060]                   	;----- cgstack
[00061] 0031: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00062] 0033: 00 06       	          dw  6  ;--- offset
[00063] 0035: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00064]                   	;---- queue dpush
[00065]                   	;----- push + pop data not required, data remains unchanged in RA
[00066]                   	;----- end stmt ------
[00067]                   	;----- begin stmt ------
[00068]                   	;----- cgldgw
[00069] 0038: d9 1b       	 				gosub s_vpush16
[00070] 003a: 00 02       	 				  dw Cj
[00071]                   	;----- cgldgw
[00072] 003c: d9 1b       	 				gosub s_vpush16
[00073] 003e: 00 00       	 				  dw Ci
[00074]                   	;----- cgldlab
[00075] 0040: d9 12       	 				gosub s_epush16
[00076] 0042: 01 9b       	 				  dw  L4
[00077]                   	;----- cgcall
[00078] 0044: d4 00 00    	          call  Cprintf
[00079]                   	;----- cgstack
[00080] 0047: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00081] 0049: 00 06       	          dw  6  ;--- offset
[00082] 004b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00083]                   	;---- queue dpush
[00084]                   	;----- push + pop data not required, data remains unchanged in RA
[00085]                   	;----- end stmt ------
[00086]                   	;----- begin stmt ------
[00087]                   	;----- cgldgw
[00088] 004e: d9 1b       	 				gosub s_vpush16
[00089] 0050: 00 02       	 				  dw Cj
[00090]                   	;----- cgldgw
[00091] 0052: d9 1b       	 				gosub s_vpush16
[00092] 0054: 00 00       	 				  dw Ci
[00093]                   	;----- cgldlab
[00094] 0056: d9 12       	 				gosub s_epush16
[00095] 0058: 01 ae       	 				  dw  L5
[00096]                   	;----- cgcall
[00097] 005a: d4 00 00    	          call  Cprintf
[00098]                   	;----- cgstack
[00099] 005d: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00100] 005f: 00 06       	          dw  6  ;--- offset
[00101] 0061: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00102]                   	;---- queue dpush
[00103]                   	;----- push + pop data not required, data remains unchanged in RA
[00104]                   	;----- end stmt ------
[00105]                   	;----- begin stmt ------
[00106]                   	;----- cgldgw
[00107] 0064: d9 1b       	 				gosub s_vpush16
[00108] 0066: 00 02       	 				  dw Cj
[00109]                   	;----- cgldgw
[00110] 0068: d9 1b       	 				gosub s_vpush16
[00111] 006a: 00 00       	 				  dw Ci
[00112]                   	;----- cgldlab
[00113] 006c: d9 12       	 				gosub s_epush16
[00114] 006e: 01 c1       	 				  dw  L6
[00115]                   	;----- cgcall
[00116] 0070: d4 00 00    	          call  Cprintf
[00117]                   	;----- cgstack
[00118] 0073: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00119] 0075: 00 06       	          dw  6  ;--- offset
[00120] 0077: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00121]                   	;---- queue dpush
[00122]                   	;----- push + pop data not required, data remains unchanged in RA
[00123]                   	;----- end stmt ------
[00124]                   	;----- begin stmt ------
[00125]                   	;----- cgldgw
[00126] 007a: d9 1b       	 				gosub s_vpush16
[00127] 007c: 00 02       	 				  dw Cj
[00128]                   	;----- cgldgw
[00129] 007e: d9 1b       	 				gosub s_vpush16
[00130] 0080: 00 00       	 				  dw Ci
[00131]                   	;----- cgldlab
[00132] 0082: d9 12       	 				gosub s_epush16
[00133] 0084: 01 d7       	 				  dw  L7
[00134]                   	;----- cgcall
[00135] 0086: d4 00 00    	          call  Cprintf
[00136]                   	;----- cgstack
[00137] 0089: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00138] 008b: 00 06       	          dw  6  ;--- offset
[00139] 008d: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00140]                   	;---- queue dpush
[00141]                   	;----- push + pop data not required, data remains unchanged in RA
[00142]                   	;----- end stmt ------
[00143]                   	;----- begin stmt ------
[00144]                   	;----- cgldgw
[00145] 0090: d9 1b       	 				gosub s_vpush16
[00146] 0092: 00 02       	 				  dw Cj
[00147]                   	;----- cgldgw
[00148] 0094: d9 1b       	 				gosub s_vpush16
[00149] 0096: 00 00       	 				  dw Ci
[00150]                   	;----- cgldlab
[00151] 0098: d9 12       	 				gosub s_epush16
[00152] 009a: 01 ed       	 				  dw  L8
[00153]                   	;----- cgcall
[00154] 009c: d4 00 00    	          call  Cprintf
[00155]                   	;----- cgstack
[00156] 009f: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00157] 00a1: 00 06       	          dw  6  ;--- offset
[00158] 00a3: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00159]                   	;---- queue dpush
[00160]                   	;----- push + pop data not required, data remains unchanged in RA
[00161]                   	;----- end stmt ------
[00162]                   	;----- begin stmt ------
[00163]                   	;----- cgldgw
[00164] 00a6: d9 1b       	 				gosub s_vpush16
[00165] 00a8: 00 02       	 				  dw Cj
[00166]                   	;----- cgldgw
[00167] 00aa: d9 1b       	 				gosub s_vpush16
[00168] 00ac: 00 00       	 				  dw Ci
[00169]                   	;----- cgldlab
[00170] 00ae: d9 12       	 				gosub s_epush16
[00171] 00b0: 02 03       	 				  dw  L9
[00172]                   	;----- cgcall
[00173] 00b2: d4 00 00    	          call  Cprintf
[00174]                   	;----- cgstack
[00175] 00b5: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00176] 00b7: 00 06       	          dw  6  ;--- offset
[00177] 00b9: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00178]                   	;---- queue dpush
[00179]                   	;----- push + pop data not required, data remains unchanged in RA
[00180]                   	;----- end stmt ------
[00181]                   	;----- begin stmt ------
[00182]                   	;----- cglit
[00183] 00bc: d9 12       	 				gosub s_epush16
[00184] 00be: 00 03       	 				  dw 3
[00185]                   	;----- cgldlab
[00186] 00c0: d9 12       	 				gosub s_epush16
[00187] 00c2: 02 17       	 				  dw  L10
[00188]                   	;----- cgcall
[00189] 00c4: d4 00 00    	          call  Cprintf
[00190]                   	;----- cgstack
[00191] 00c7: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00192] 00c9: 00 04       	          dw  4  ;--- offset
[00193] 00cb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00194]                   	;---- queue dpush
[00195]                   	;----- push + pop data not required, data remains unchanged in RA
[00196]                   	;----- end stmt ------
[00197]                   	;----- begin stmt ------
[00198]                   	;----- cgldga
[00199] 00ce: d9 12       	 				gosub s_epush16
[00200] 00d0: 00 04       	 				  dw Cstr
[00201]                   	;----- cgldga
[00202] 00d2: d9 12       	 				gosub s_epush16
[00203] 00d4: 00 04       	 				  dw Cstr
[00204]                   	;----- cgldlab
[00205] 00d6: d9 12       	 				gosub s_epush16
[00206] 00d8: 02 25       	 				  dw  L11
[00207]                   	;----- cgcall
[00208] 00da: d4 00 00    	          call  Cprintf
[00209]                   	;----- cgstack
[00210] 00dd: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00211] 00df: 00 06       	          dw  6  ;--- offset
[00212] 00e1: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00213]                   	;---- queue dpush
[00214]                   	;----- push + pop data not required, data remains unchanged in RA
[00215]                   	;----- end stmt ------
[00216]                   	;----- begin stmt ------
[00217]                   	;----- cgldga
[00218] 00e4: d9 12       	 				gosub s_epush16
[00219] 00e6: 00 04       	 				  dw Cstr
[00220]                   	;----- cgindb
[00221] 00e8: d9 7b       	 				gosub s_deref8
[00222] 00ea: 00          	 				  db 0
[00223]                   	;----- cglit
[00224] 00eb: d9 12       	 				gosub s_epush16
[00225] 00ed: 00 71       	 				  dw 113
[00226]                   	;----- cgldlab
[00227] 00ef: d9 12       	 				gosub s_epush16
[00228] 00f1: 02 3f       	 				  dw  L12
[00229]                   	;----- cgcall
[00230] 00f3: d4 00 00    	          call  Cprintf
[00231]                   	;----- cgstack
[00232] 00f6: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00233] 00f8: 00 06       	          dw  6  ;--- offset
[00234] 00fa: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00235]                   	;---- queue dpush
[00236]                   	;----- push + pop data not required, data remains unchanged in RA
[00237]                   	;----- end stmt ------
[00238]                   	;----- begin stmt ------
[00239]                   	;----- cgldgw
[00240] 00fd: d9 1b       	 				gosub s_vpush16
[00241] 00ff: 00 02       	 				  dw Cj
[00242]                   	;----- cgldgw
[00243] 0101: d9 1b       	 				gosub s_vpush16
[00244] 0103: 00 00       	 				  dw Ci
[00245]                   	;----- cgldlab
[00246] 0105: d9 12       	 				gosub s_epush16
[00247] 0107: 02 50       	 				  dw  L13
[00248]                   	;----- cgcall
[00249] 0109: d4 00 00    	          call  Cprintf
[00250]                   	;----- cgstack
[00251] 010c: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00252] 010e: 00 06       	          dw  6  ;--- offset
[00253] 0110: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00254]                   	;---- queue dpush
[00255]                   	;----- push + pop data not required, data remains unchanged in RA
[00256]                   	;----- end stmt ------
[00257]                   	;----- begin stmt ------
[00258]                   	;----- cgldgw
[00259] 0113: d9 1b       	 				gosub s_vpush16
[00260] 0115: 00 02       	 				  dw Cj
[00261]                   	;----- cgldgw
[00262] 0117: d9 1b       	 				gosub s_vpush16
[00263] 0119: 00 00       	 				  dw Ci
[00264]                   	;----- cgldlab
[00265] 011b: d9 12       	 				gosub s_epush16
[00266] 011d: 02 5b       	 				  dw  L14
[00267]                   	;----- cgcall
[00268] 011f: d4 00 00    	          call  Cprintf
[00269]                   	;----- cgstack
[00270] 0122: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00271] 0124: 00 06       	          dw  6  ;--- offset
[00272] 0126: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00273]                   	;---- queue dpush
[00274]                   	;----- push + pop data not required, data remains unchanged in RA
[00275]                   	;----- end stmt ------
[00276]                   	;----- begin stmt ------
[00277]                   	;----- cgldgw
[00278] 0129: d9 1b       	 				gosub s_vpush16
[00279] 012b: 00 02       	 				  dw Cj
[00280]                   	;----- cgldgw
[00281] 012d: d9 1b       	 				gosub s_vpush16
[00282] 012f: 00 00       	 				  dw Ci
[00283]                   	;----- cgldlab
[00284] 0131: d9 12       	 				gosub s_epush16
[00285] 0133: 02 6d       	 				  dw  L15
[00286]                   	;----- cgcall
[00287] 0135: d4 00 00    	          call  Cprintf
[00288]                   	;----- cgstack
[00289] 0138: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00290] 013a: 00 06       	          dw  6  ;--- offset
[00291] 013c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00292]                   	;---- queue dpush
[00293]                   	;----- push + pop data not required, data remains unchanged in RA
[00294]                   	;----- end stmt ------
[00295]                   	;----- begin stmt ------
[00296]                   	;----- cgldgw
[00297] 013f: d9 1b       	 				gosub s_vpush16
[00298] 0141: 00 02       	 				  dw Cj
[00299]                   	;----- cgldgw
[00300] 0143: d9 1b       	 				gosub s_vpush16
[00301] 0145: 00 00       	 				  dw Ci
[00302]                   	;----- cgldlab
[00303] 0147: d9 12       	 				gosub s_epush16
[00304] 0149: 02 7a       	 				  dw  L16
[00305]                   	;----- cgcall
[00306] 014b: d4 00 00    	          call  Cprintf
[00307]                   	;----- cgstack
[00308] 014e: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00309] 0150: 00 06       	          dw  6  ;--- offset
[00310] 0152: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00311]                   	;---- queue dpush
[00312]                   	;----- push + pop data not required, data remains unchanged in RA
[00313]                   	;----- end stmt ------
[00314]                   	;----- begin stmt ------
[00315]                   	;----- cgldlab
[00316] 0155: d9 12       	 				gosub s_epush16
[00317] 0157: 02 8d       	 				  dw  L17
[00318]                   	;----- cgcall
[00319] 0159: d4 00 00    	          call  Cprintf
[00320]                   	;----- cgstack
[00321] 015c: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00322] 015e: 00 02       	          dw  2  ;--- offset
[00323] 0160: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00324]                   	;---- queue dpush
[00325]                   	;----- push + pop data not required, data remains unchanged in RA
[00326]                   	;----- end stmt ------
[00327]                   	;----- begin stmt ------
[00328]                   	;----- cgldlab
[00329] 0163: d9 12       	 				gosub s_epush16
[00330] 0165: 02 b3       	 				  dw  L18
[00331]                   	;----- cgcall
[00332] 0167: d4 00 00    	          call  Cprintf
[00333]                   	;----- cgstack
[00334] 016a: d9 03       	          gosub s_esmove				 ; move pointer for Expression Stack
[00335] 016c: 00 02       	          dw  2  ;--- offset
[00336] 016e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00337]                   	;---- queue dpush
[00338]                   	;----- push + pop data not required, data remains unchanged in RA
[00339]                   	;----- end stmt ------
[00340]                   
[00341]                   L1:
[00342]                   	;----- cgexit
[00343] 0171: e2          	          sex   r2            ; make sure X = SP
[00344] 0172: d9 06       	          gosub s_stkchk      ; check for expression stack creep
[00345] 0174: c3 00 00    	          lbdf  stk_err			 ; exit immediately when stack creep error occurs
[00346] 0177: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00347]                   
[00348] 017c: d5          	          rtn    			 	     ; return to caller
[00349]                   
[00350]                   ;----- string table
[00351]                   
[00352]                   L2:
[00353] 017d: 49 6e 74 20   db 'Int formats:', 10    ;----- cgdefs
              66 6f 72 6d 
              61 74 73 3a 
              0a 
[00354] 018a: 00          	db	$00    ;----- cgdefb
[00355]                   
[00356]                   L3:
[00357] 018b: 70 6c 61 69   db 'plain: _%d_%d_', 10    ;----- cgdefs
              6e 3a 20 5f 
              25 64 5f 25 
              64 5f 0a 
[00358] 019a: 00          	db	$00    ;----- cgdefb
[00359]                   
[00360]                   L4:
[00361] 019b: 2b 20 66 6c   db '+ flag: _%+d_%+d_', 10    ;----- cgdefs
              61 67 3a 20 
              5f 25 2b 64 
              5f 25 2b 64 
              5f 0a 
[00362] 01ad: 00          	db	$00    ;----- cgdefb
[00363]                   
[00364]                   L5:
[00365] 01ae: 73 69 7a 65   db 'size 4: _%4d_%4d_', 10    ;----- cgdefs
              20 34 3a 20 
              5f 25 34 64 
              5f 25 34 64 
              5f 0a 
[00366] 01c0: 00          	db	$00    ;----- cgdefb
[00367]                   
[00368]                   L6:
[00369] 01c1: 30 34 20 66   db '04 flag: _%04d_%04d_', 10    ;----- cgdefs
              6c 61 67 3a 
              20 5f 25 30 
              34 64 5f 25 
              30 34 64 5f 
              0a 
[00370] 01d6: 00          	db	$00    ;----- cgdefb
[00371]                   
[00372]                   L7:
[00373] 01d7: 2d 34 20 66   db '-4 flag: _%-4d_%-4d_', 10    ;----- cgdefs
              6c 61 67 3a 
              20 5f 25 2d 
              34 64 5f 25 
              2d 34 64 5f 
              0a 
[00374] 01ec: 00          	db	$00    ;----- cgdefb
[00375]                   
[00376]                   L8:
[00377] 01ed: 20 34 20 66   db ' 4 flag: _% 4d_% 4d_', 10    ;----- cgdefs
              6c 61 67 3a 
              20 5f 25 20 
              34 64 5f 25 
              20 34 64 5f 
              0a 
[00378] 0202: 00          	db	$00    ;----- cgdefb
[00379]                   
[00380]                   L9:
[00381] 0203: 2b 30 34 3a   db '+04: _%+04d_%+04d_', 10    ;----- cgdefs
              20 5f 25 2b 
              30 34 64 5f 
              25 2b 30 34 
              64 5f 0a 
[00382] 0216: 00          	db	$00    ;----- cgdefb
[00383]                   
[00384]                   L10:
[00385] 0217: 49 6e 74 20   db 'Int 06:%06i!', 10    ;----- cgdefs
              30 36 3a 25 
              30 36 69 21 
              0a 
[00386] 0224: 00          	db	$00    ;----- cgdefb
[00387]                   
[00388]                   L11:
[00389] 0225: 50 6f 69 6e   db 'Pointer %p and string %s', 10    ;----- cgdefs
              74 65 72 20 
              25 70 20 61 
              6e 64 20 73 
              74 72 69 6e 
              67 20 25 73 
              0a 
[00390] 023e: 00          	db	$00    ;----- cgdefb
[00391]                   
[00392]                   L12:
[00393] 023f: 43 68 61 72   db 'Character %c %c', 10    ;----- cgdefs
              61 63 74 65 
              72 20 25 63 
              20 25 63 0a 
[00394] 024f: 00          	db	$00    ;----- cgdefb
[00395]                   
[00396]                   L13:
[00397] 0250: 48 65 78 20   db 'Hex %x %X', 10    ;----- cgdefs
              25 78 20 25 
              58 0a 
[00398] 025a: 00          	db	$00    ;----- cgdefb
[00399]                   
[00400]                   L14:
[00401] 025b: 41 6c 74 20   db 'Alt Hex: %#x %#X', 10    ;----- cgdefs
              48 65 78 3a 
              20 25 23 78 
              20 25 23 58 
              0a 
[00402] 026c: 00          	db	$00    ;----- cgdefb
[00403]                   
[00404]                   L15:
[00405] 026d: 4f 63 74 61   db 'Octal %o %o', 10    ;----- cgdefs
              6c 20 25 6f 
              20 25 6f 0a 
[00406] 0279: 00          	db	$00    ;----- cgdefb
[00407]                   
[00408]                   L16:
[00409] 027a: 41 6c 74 20   db 'Alt Octal %#o %#o', 10    ;----- cgdefs
              4f 63 74 61 
              6c 20 25 23 
              6f 20 25 23 
              6f 0a 
[00410] 028c: 00          	db	$00    ;----- cgdefb
[00411]                   
[00412]                   L17:
[00413] 028d: 4e 75 6d 62   db 'Number characters written so far: %n', 10    ;----- cgdefs
              65 72 20 63 
              68 61 72 61 
              63 74 65 72 
              73 20 77 72 
              69 74 74 65 
              6e 20 73 6f 
              20 66 61 72 
              3a 20 25 6e 
              0a 
[00414] 02b2: 00          	db	$00    ;----- cgdefb
[00415]                   
[00416]                   L18:
[00417] 02b3: 45 73 63 61   db 'Escape for %% sign', 10    ;----- cgdefs
              70 65 20 66 
              6f 72 20 25 
              25 20 73 69 
              67 6e 0a 
[00418] 02c6: 00          	db	$00    ;----- cgdefb
[00419]                   	;---- cgpostlude
[00420] 02c7:             	             endp
