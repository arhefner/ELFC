; -------------------------------------------------------------------
; This file generated by ElfC, based on SubC
; SubC Copyright 2012-2025 by Nils Holm
; -------------------------------------------------------------------
#include include/ops_c.inc
#include include/bios.inc
#include include/kernel.inc
#include include/elfc.inc

	           proc ptest1

            extrn C_init

            extrn C_fdinit

            extrn C_fdtable

            extrn C_fildes

            extrn Cabort

            extrn Cabs

            extrn Catexit      

            extrn Cexit            

            extrn Cmalloc

            extrn Ccalloc 

            extrn Crealloc

            extrn Cfree  

            extrn Catoi 

            extrn Citoa           

            extrn Citox

            extrn Citou           

            extrn Cdiv 

            extrn Cbsearch              

            extrn Cqsort

            extrn Crand

            extrn Csrand

            extrn Ccreat

            extrn Copen

            extrn Cclose

            extrn Cread

            extrn Cwrite

            extrn Clseek

            extrn Cunlink

            extrn Crename

            extrn Cmin

            extrn Cmax

            extrn Cstdin

            extrn Cstdout

            extrn Cstderr

            extrn Cputs

            extrn Cputstr

            extrn Cgets

            extrn Cputch

            extrn Cgetch

            extrn Cputchar

            extrn Cgetchar

            extrn Cfdopen

            extrn Cfclose

            extrn Cfopen

            extrn Cferror

            extrn Cfeof

            extrn Cclearerr

            extrn Cfgetc

            extrn Cfputc

            extrn Cfgets

            extrn Cfputs

            extrn Cungetc

            extrn Cfread

            extrn Cfwrite

            extrn Cfflush

            extrn Cfprintf

            extrn Ckprintf

            extrn Cprintf

            extrn Csprintf

            extrn Cvfprintf

            extrn Cvprintf

            extrn Cvsprintf

            extrn Cfscanf

            extrn Cscanf

            extrn Csscanf

            extrn Cfgetpos

            extrn Cfsetpos

            extrn Cfseek

            extrn Cftell

            extrn Cperror

            extrn Crewind

            extrn Cremove

            extrn Ctmpnam

            extrn Ctmpfile

            extrn Cfileno
	;----- cgpublic
	              public Cr
Cr:	db	$00, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Ca
Ca:	db	$00, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Cp
Cp:	db	$00, $00  ;----- cgdefp LSB first, MSB second
	;----- cgpublic
	              public Cpp
Cpp:	db	$00, $00  ;----- cgdefp LSB first, MSB second
	;----- cgpublic
	              public CA
CA:	db	$00, $00  ;----- cgdefp LSB first, MSB second
	;----- cgpublic
	              public C_A
C_A:    ds 6    ;----- cggbss
	;----- cgpublic
	              public CP
CP:	db	$00, $00  ;----- cgdefp LSB first, MSB second
	;----- cgpublic
	              public C_P
C_P:    ds 6    ;----- cggbss
	;----- cgpublic
	              public CEa
CEa:    ds 6    ;----- cggbss
	;----- cgpublic
	              public CEp
CEp:    ds 6    ;----- cggbss
	;----- cgpublic
	              public Ctest
Ctest:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  -2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- begin stmt ------
	;---- queue lbr L3
	;----- cgjump
	 				  lbr	L3

L2:
  db 'Testing: %s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L3:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L2
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  2  ;--- offset
	;----- cgldgw
	 				call vpush16
	 				  dw Cr
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L5
	lbr	L4

L5:
	;----- begin stmt ------
	;---- queue lbr L7
	;----- cgjump
	 				  lbr	L7

L6:
  db '%s: expected value %d (%p), got %d (%p)', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L7:
	;----- cgldgw
	 				call vpush16
	 				  dw Cr
	;----- cgldgw
	 				call vpush16
	 				  dw Cr
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  2  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  2  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L6
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  12  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L4:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  4  ;--- offset
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L9
	lbr	L8

L9:
	;----- begin stmt ------
	;---- queue lbr L11
	;----- cgjump
	 				  lbr	L11

L10:
  db '%s: expected a=%d (%p), got %d (%p)', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L11:
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  4  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  4  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L10
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  12  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L8:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  6  ;--- offset
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L13
	lbr	L12

L13:
	;----- begin stmt ------
	;---- queue lbr L15
	;----- cgjump
	 				  lbr	L15

L14:
  db '%s: expected p=%d (%p), got %d (%p)', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L15:
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  6  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  6  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L14
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  12  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L12:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  8  ;--- offset
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L17
	lbr	L16

L17:
	;----- begin stmt ------
	;---- queue lbr L19
	;----- cgjump
	 				  lbr	L19

L18:
  db '%s: expected pp=%d (%p), got %d (%p)', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L19:
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  8  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  8  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L18
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  12  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L16:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw -1
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L20:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L24
	lbr	L22

L24:
	;---- queue lbr L21
	;----- cgjump
	 				  lbr	L21

L23:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L20
	;----- cgjump
	 				  lbr	L20

L21:
	;----- begin stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgscale
	 				call scltos2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L26
	lbr	L25

L26:
	;----- begin stmt ------
	;---- queue lbr L28
	;----- cgjump
	 				  lbr	L28

L27:
  db '%s: expected A[%d]=%d (%p), got %d (%p)', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L28:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgscale
	 				call scltos2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgscale
	 				call scltos2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L27
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  14  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L25:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgscale
	 				call scltos2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L30
	lbr	L29

L30:
	;----- begin stmt ------
	;---- queue lbr L32
	;----- cgjump
	 				  lbr	L32

L31:
  db '%s: expected P[%d]=%d (%p), got %d (%p)', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L32:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgscale
	 				call scltos2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgscale
	 				call scltos2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindw
	 				call deref16
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L31
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  14  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L29:
	;----- end if
	;----- end stmt ------
	;----- end stmt ------
	;---- queue lbr L23
	;----- cgjump
	 				  lbr	L23

L22:
	;----- end for
	;----- end stmt ------

L1:
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Creset
Creset:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Ca
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw C_A
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw CA
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw C_P
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw CP
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cp
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cpp
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------

L33:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Cmain
Cmain:
  ;----- cgsetup
#ifdef STGROM
      load   r1, $F000  ; set up handler for STG Breakpoint
#endif
	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L36
	;----- cgjump
	 				  lbr	L36

L35:
  db 'a+1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L36:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldlab
	 				call epush16
	 				  dw  L35
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L38
	;----- cgjump
	 				  lbr	L38

L37:
  db '1+a'    ;----- cgdefs
	db	$00    ;----- cgdefb

L38:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldlab
	 				call epush16
	 				  dw  L37
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgincgw
	 				 call vinc16       ; increment global variable
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L40
	;----- cgjump
	 				  lbr	L40

L39:
  db 'a++'    ;----- cgdefs
	db	$00    ;----- cgdefb

L40:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlab
	 				call epush16
	 				  dw  L39
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgincgw
	 				 call vinc16       ; increment global variable
	 				  dw Ca
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L42
	;----- cgjump
	 				  lbr	L42

L41:
  db '++a'    ;----- cgdefs
	db	$00    ;----- cgdefb

L42:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldlab
	 				call epush16
	 				  dw  L41
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L44
	;----- cgjump
	 				  lbr	L44

L43:
  db 'a-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L44:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw -1
	;----- cgldlab
	 				call epush16
	 				  dw  L43
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L46
	;----- cgjump
	 				  lbr	L46

L45:
  db '2-a'    ;----- cgdefs
	db	$00    ;----- cgdefb

L46:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlab
	 				call epush16
	 				  dw  L45
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L48
	;----- cgjump
	 				  lbr	L48

L47:
  db 'a-(-2)'    ;----- cgdefs
	db	$00    ;----- cgdefb

L48:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgldlab
	 				call epush16
	 				  dw  L47
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgneg
	          call  neg16				 ; negate TOS on Expression Stack

	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L50
	;----- cgjump
	 				  lbr	L50

L49:
  db '2-(-a)'    ;----- cgdefs
	db	$00    ;----- cgdefb

L50:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgldlab
	 				call epush16
	 				  dw  L49
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgdecgw
	 				 call vdec16       ; decrement global variable
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L52
	;----- cgjump
	 				  lbr	L52

L51:
  db 'a--'    ;----- cgdefs
	db	$00    ;----- cgdefb

L52:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldlab
	 				call epush16
	 				  dw  L51
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgdecgw
	 				 call vdec16       ; decrement global variable
	 				  dw Ca
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L54
	;----- cgjump
	 				  lbr	L54

L53:
  db '--a'    ;----- cgdefs
	db	$00    ;----- cgdefb

L54:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgldlab
	 				call epush16
	 				  dw  L53
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L56
	;----- cgjump
	 				  lbr	L56

L55:
  db 'a+=3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L56:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgldlab
	 				call epush16
	 				  dw  L55
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw -3
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L58
	;----- cgjump
	 				  lbr	L58

L57:
  db 'a+=-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L58:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgldlab
	 				call epush16
	 				  dw  L57
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L60
	;----- cgjump
	 				  lbr	L60

L59:
  db 'a-=3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L60:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgldlab
	 				call epush16
	 				  dw  L59
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Ca
	;----- cglit
	 				call epush16
	 				  dw -3
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Ca
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L62
	;----- cgjump
	 				  lbr	L62

L61:
  db 'a-=-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L62:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgldlab
	 				call epush16
	 				  dw  L61
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgscale2
	 				call sclsos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L64
	;----- cgjump
	 				  lbr	L64

L63:
  db 'p+1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L64:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L63
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L66
	;----- cgjump
	 				  lbr	L66

L65:
  db '1+p'    ;----- cgdefs
	db	$00    ;----- cgdefb

L66:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L65
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgincpg
	 				 call vpinc16       ; increment global pointer to 2-byte value
	 				  dw Cp  ;--- address
	          dw  2  ;--- size
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L68
	;----- cgjump
	 				  lbr	L68

L67:
  db 'p++'    ;----- cgdefs
	db	$00    ;----- cgdefb

L68:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgldlab
	 				call epush16
	 				  dw  L67
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgincpg
	 				 call vpinc16       ; increment global pointer to 2-byte value
	 				  dw Cp  ;--- address
	          dw  2  ;--- size
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L70
	;----- cgjump
	 				  lbr	L70

L69:
  db '++p'    ;----- cgdefs
	db	$00    ;----- cgdefb

L70:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L69
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L72
	;----- cgjump
	 				  lbr	L72

L71:
  db 'p-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L72:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L71
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L74
	;----- cgjump
	 				  lbr	L74

L73:
  db 'p-(-2)'    ;----- cgdefs
	db	$00    ;----- cgdefb

L74:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L73
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgdecpg
	 				 call vpdec16       ; decrement global pointer to 2-byte value
	 				  dw Cp  ;--- address
	          dw  2  ;--- size
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L76
	;----- cgjump
	 				  lbr	L76

L75:
  db 'p--'    ;----- cgdefs
	db	$00    ;----- cgdefb

L76:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgldlab
	 				call epush16
	 				  dw  L75
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgdecpg
	 				 call vpdec16       ; decrement global pointer to 2-byte value
	 				  dw Cp  ;--- address
	          dw  2  ;--- size
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L78
	;----- cgjump
	 				  lbr	L78

L77:
  db '--p'    ;----- cgdefs
	db	$00    ;----- cgdefb

L78:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L77
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgscale2
	 				call sclsos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L80
	;----- cgjump
	 				  lbr	L80

L79:
  db 'p+=1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L80:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L79
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw -1
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cgscale2
	 				call sclsos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L82
	;----- cgjump
	 				  lbr	L82

L81:
  db 'p+=-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L82:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L81
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L84
	;----- cgjump
	 				  lbr	L84

L83:
  db 'p-=1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L84:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L83
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cp
	;----- cglit
	 				call epush16
	 				  dw -1
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L86
	;----- cgjump
	 				  lbr	L86

L85:
  db 'p-=-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L86:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L85
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgscale2
	 				call sclsos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L88
	;----- cgjump
	 				  lbr	L88

L87:
  db 'pp+1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L88:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L87
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgscale
	 				call scltos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L90
	;----- cgjump
	 				  lbr	L90

L89:
  db '1+pp'    ;----- cgdefs
	db	$00    ;----- cgdefb

L90:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L89
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgincpg
	 				 call vpinc16       ; increment global pointer to 2-byte value
	 				  dw Cpp  ;--- address
	          dw  2  ;--- size
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L92
	;----- cgjump
	 				  lbr	L92

L91:
  db 'pp++'    ;----- cgdefs
	db	$00    ;----- cgdefb

L92:
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldlab
	 				call epush16
	 				  dw  L91
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgincpg
	 				 call vpinc16       ; increment global pointer to 2-byte value
	 				  dw Cpp  ;--- address
	          dw  2  ;--- size
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L94
	;----- cgjump
	 				  lbr	L94

L93:
  db '++pp'    ;----- cgdefs
	db	$00    ;----- cgdefb

L94:
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L93
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L96
	;----- cgjump
	 				  lbr	L96

L95:
  db 'pp-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L96:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L95
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cglit
	 				call epush16
	 				  dw -2
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L98
	;----- cgjump
	 				  lbr	L98

L97:
  db 'pp-(-2)'    ;----- cgdefs
	db	$00    ;----- cgdefb

L98:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L97
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgdecpg
	 				 call vpdec16       ; decrement global pointer to 2-byte value
	 				  dw Cpp  ;--- address
	          dw  2  ;--- size
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L100
	;----- cgjump
	 				  lbr	L100

L99:
  db 'pp--'    ;----- cgdefs
	db	$00    ;----- cgdefb

L100:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgldlab
	 				call epush16
	 				  dw  L99
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgdecpg
	 				 call vpdec16       ; decrement global pointer to 2-byte value
	 				  dw Cpp  ;--- address
	          dw  2  ;--- size
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L102
	;----- cgjump
	 				  lbr	L102

L101:
  db '--pp'    ;----- cgdefs
	db	$00    ;----- cgdefb

L102:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L101
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgscale2
	 				call sclsos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cpp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L104
	;----- cgjump
	 				  lbr	L104

L103:
  db 'pp+=1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L104:
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L103
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw -1
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cgscale2
	 				call sclsos2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cpp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L106
	;----- cgjump
	 				  lbr	L106

L105:
  db 'pp+=-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L106:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L105
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cpp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L108
	;----- cgjump
	 				  lbr	L108

L107:
  db 'pp-=1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L108:
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L107
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Creset
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cpp
	;----- cglit
	 				call epush16
	 				  dw -1
	;----- cgscale
	 				call scltos2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cpp
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cr
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEa
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgsub
	          call  sub16				 ; subtract TOS from SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw CEp
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstoriw
	          call  pstor16       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L110
	;----- cgjump
	 				  lbr	L110

L109:
  db 'pp-=-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L110:
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldgw
	 				call vpush16
	 				  dw CA
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cglit
	 				call epush16
	 				  dw 2
	;----- cgldgw
	 				call vpush16
	 				  dw CP
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgldlab
	 				call epush16
	 				  dw  L109
	;----- cgcall
	          call  Ctest
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin return
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L34
	;----- end return
	;----- end stmt ------
	;---- lbr L34 falls through

L34:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;---- cgpostlude
	             endp
