[00001]                   ; -------------------------------------------------------------------
[00002]                   ; This file generated by ElfC, based on SubC
[00003]                   ; SubC Copyright 2012-2025 by Nils Holm
[00004]                   ; -------------------------------------------------------------------
<00000>                   #include include/ops_c.inc
<00001>                   .op "PUSH","N","9$1 73 8$1 73"
<00002>                   .op "POP","N","60 72 A$1 F0 B$1"
<00003>                   .op "MOV","NR","9$2 B$1 8$2 A$1"
<00004>                   .op "MOV","NW","F8 H2 B$1 F8 L2 A$1"
<00005>                   .op "CALL","W","D4 H1 L1"
<00006>                   .op "RTN","","D5"
<00007>                   .op "CLC","","FC 00"
<00008>                   .op "STC","","FF 00"
<00009>                   .op "COPY","NR","8$1 A$2 9$1 B$2"
<00010>                   .op "LOAD","NW","F8 L2 A$1 F8 H2 B$1"
<00011>                   .op "RETURN","","D5"
<00012>                   .op "MATCH","NW","8$1 FF L2 52 9$1 7F H2 F1"
<00013>                   .op "BRKPT","","79 D1"
<00000>                   #include include/bios.inc
<00001>                   ; *******************************************************************
<00002>                   ; *** This software is copyright 2006 by Michael H Riley          ***
<00003>                   ; *** You have permission to use, modify, copy, and distribute    ***
<00004>                   ; *** this software so long as this copyright notice is retained. ***
<00005>                   ; *** This software may not be used in commercial applications    ***
<00006>                   ; *** without express written permission from the author.         ***
<00007>                   ; *******************************************************************
<00008>                   
<00011>                   #endif
<00012>                   
<00013>                   ; Define address for standard BIOS vectors
<00014>                   #ifndef BIOS
<00015>                   #define BIOS 0ff00h
<00016>                   #endif
<00017>                   
<00018>                   ; Define address for extended BIOS vectors
<00019>                   #ifndef EBIOS
<00020>                   #define EBIOS 0f800h
<00021>                   #endif
<00022>                   
<00023>                   #ifndef _TASM_
<00024> 0000:             scall:      equ  r4                    ; register for SCALL
<00025> 0000:             sret:       equ  r5                    ; register for SRET
<00026>                   
<00027> 0000:             call:       equ  0ffe0h                ; depricated
<00028> 0000:             ret:        equ  0fff1h                ; depricated
<00029>                   #endif
<00030>                   
<00031> 0000:             f_boot:     equ  (BIOS+00h)            ; boot from ide device
<00032> 0000:             f_type:     equ  (BIOS+03h)            ; type 1 character to console
<00033> 0000:             f_read:     equ  (BIOS+06h)            ; read 1 character from console
<00034> 0000:             f_msg:      equ  (BIOS+09h)            ; type asciiz string to console
<00035> 0000:             f_typex:    equ  (BIOS+0ch)            ; depricated, just returns now
<00036> 0000:             f_input:    equ  (BIOS+0fh)            ; read asciiz from console
<00037> 0000:             f_strcmp:   equ  (BIOS+12h)            ; compare 2 strings
<00038> 0000:             f_ltrim:    equ  (BIOS+15h)            ; trim leading spaces
<00039> 0000:             f_strcpy:   equ  (BIOS+18h)            ; copy an asciiz string
<00040> 0000:             f_memcpy:   equ  (BIOS+1bh)            ; copy memory
<00041> 0000:             f_wrtsec:   equ  (BIOS+1eh)            ; write floppy sector (depricated)
<00042> 0000:             f_rdsec:    equ  (BIOS+21h)            ; read floppy sector (depricated)
<00043> 0000:             f_seek0:    equ  (BIOS+24h)            ; floppy seek to track 0 (depricated)
<00044> 0000:             f_seek:     equ  (BIOS+27h)            ; floopy track seek (depricated)
<00045> 0000:             f_drive:    equ  (BIOS+2ah)            ; select floppy drive (depricated)
<00046> 0000:             f_setbd:    equ  (BIOS+2dh)            ; set console baud rate
<00047> 0000:             f_mul16:    equ  (BIOS+30h)            ; 16-bit multiply
<00048> 0000:             f_div16:    equ  (BIOS+33h)            ; 16-bit division
<00049> 0000:             f_idereset: equ  (BIOS+36h)            ; reset ide device
<00050> 0000:             f_idewrite: equ  (BIOS+39h)            ; write ide sector
<00051> 0000:             f_ideread:  equ  (BIOS+3ch)            ; read ide sector
<00052> 0000:             f_initcall: equ  (BIOS+3fh)            ; initialize R4 and R5
<00053> 0000:             f_bootide:  equ  (BIOS+42h)            ; boot from ide device
<00054> 0000:             f_hexin:    equ  (BIOS+45h)            ; convert ascii number to hex
<00055> 0000:             f_hexout2:  equ  (BIOS+48h)            ; convert hex to 2-digit ascii
<00056> 0000:             f_hexout4:  equ  (BIOS+4bh)            ; convert hex to 4-digit ascii
<00057> 0000:             f_tty:      equ  (BIOS+4eh)            ; type character to console
<00058> 0000:             f_mover:    equ  (BIOS+51h)            ; program relocator
<00059> 0000:             f_minimon:  equ  (BIOS+54h)            ; mini monitor
<00060> 0000:             f_freemem:  equ  (BIOS+57h)            ; determine memory size
<00061> 0000:             F_isnum:    equ  (BIOS+5ah)            ; determine if D is numeric
<00062> 0000:             f_atoi:     equ  (BIOS+5dh)            ; convert ascii to integer
<00063> 0000:             f_uintout:  equ  (BIOS+60h)            ; convert unsigned integer to ascii
<00064> 0000:             f_intout:   equ  (BIOS+63h)            ; convert signed integer to ascii
<00065> 0000:             f_inmsg:    equ  (BIOS+66h)            ; type in-line message
<00066> 0000:             f_inputl:   equ  (BIOS+69h)            ; read limited line from console
<00067> 0000:             f_brktest:  equ  (BIOS+6ch)            ; check for serial break
<00068> 0000:             f_findtkn:  equ  (BIOS+6fh)            ; find token in a token table
<00069> 0000:             f_isalpha:  equ  (BIOS+72h)            ; determine if D is alphabetic
<00070> 0000:             f_ishex:    equ  (BIOS+75h)            ; determine if D is hexadecimal
<00071> 0000:             f_isalnum:  equ  (BIOS+78h)            ; determine if D is alpha or numeric
<00072> 0000:             f_idnum:    equ  (BIOS+7bh)            ; determine type of ascii number
<00073> 0000:             f_isterm:   equ  (BIOS+7eh)            ; determine if D is a termination char
<00074> 0000:             f_getdev:   equ  (BIOS+81h)            ; get supported devices
<00075>                   
<00076> 0000:             f_version:  equ  (BIOS+0f9h)           ; 3 bytes holding bios version number
<00077>                   
<00078>                   ; "Extended" BIOS vectors
<00079>                   
<00080> 0000:             f_bread:    equ  (EBIOS+00h)        ; read from onboard serial port
<00081> 0000:             f_btype:    equ  (EBIOS+03h)        ; write to onboard serial port
<00082> 0000:             f_btest:    equ  (EBIOS+06h)        ; test onboard serial port
<00083> 0000:             f_utype:    equ  (EBIOS+09h)        ; write to disk board UART
<00084> 0000:             f_uread:    equ  (EBIOS+0ch)        ; read from disk board UART
<00085> 0000:             f_utest:    equ  (EBIOS+0fh)        ; test disk board UART
<00086> 0000:             f_usetbd:   equ  (EBIOS+12h)        ; set disk board UART baud rate and format
<00087> 0000:             f_gettod:   equ  (EBIOS+15h)        ; read time of day clock
<00088> 0000:             f_settod:   equ  (EBIOS+18h)        ; set time of day clock
<00089> 0000:             f_rdnvr:    equ  (EBIOS+1bh)        ; read non volatile RAM
<00090> 0000:             f_wrnvr:    equ  (EBIOS+1eh)        ; write non volatile RAM
<00091> 0000:             f_idesize:  equ  (EBIOS+21h)        ; return size of attached IDE drive(s)
<00092> 0000:             f_ideid:    equ  (EBIOS+24h)        ; return device data for IDE drive(s)
<00093> 0000:             f_tmtoas:   equ  (EBIOS+2ah)        ; time to ASCII string
<00094> 0000:             f_dttoas:   equ  (EBIOS+27h)        ; date to ASCII string
<00095> 0000:             f_rtctest:  equ  (EBIOS+2dh)        ; test size and presence of RTC/NVR
<00096> 0000:             f_astodt:   equ  (EBIOS+30h)        ; convert ASCII string to date
<00097> 0000:             f_astotm:   equ  (EBIOS+33h)        ; convert ASCII string to time
<00000>                   #include include/kernel.inc
<00001> 0000:             O_CLDBOOT:    equ    0300h             ; jump to cold boot routine
<00002> 0000:             O_WRMBOOT:    equ    0303h             ; jump to warm boot routine
<00003> 0000:             O_OPEN:       equ    0306h             ; open a file
<00004> 0000:             O_READ:       equ    0309h             ; read from file
<00005> 0000:             O_WRITE:      equ    030ch             ; write to file
<00006> 0000:             O_SEEK:       equ    030fh             ; seek to file position
<00007> 0000:             O_CLOSE:      equ    0312h             ; close file
<00008> 0000:             O_OPENDIR:    equ    0315h             ; open dir as a file
<00009> 0000:             O_DELETE:     equ    0318h             ; delete a file
<00010> 0000:             O_RENAME:     equ    031bh             ; rename a file
<00011> 0000:             O_EXEC:       equ    031eh             ; execute an external program
<00012> 0000:             O_MKDIR:      equ    0321h             ; make directory
<00013> 0000:             O_CHDIR:      equ    0324h             ; change directory
<00014> 0000:             O_RMDIR:      equ    0327h             ; remove directory
<00015> 0000:             O_RDLUMP:     equ    032Ah             ; read LAT entry
<00016> 0000:             O_RDLUMP32:   equ    040fh             ; read 32-bit LAT entry
<00017> 0000:             O_WRLUMP:     equ    032Dh             ; write LAT entry
<00018> 0000:             O_WRLUMP32:   equ    0421h             ; write LAT entry
<00019> 0000:             O_TYPE:       equ    0330h             ; passthrough for console output
<00020> 0000:             O_MSG:        equ    0333h             ; passthrough for console output
<00021> 0000:             O_READKEY:    equ    0336h             ; passthrough for console input
<00022> 0000:             O_INPUT:      equ    0339h             ; passthrough for console input
<00023> 0000:             O_PRTSTAT:    equ    033ch             ; printer status
<00024> 0000:             O_PRINT:      equ    033fh             ; output to printer
<00025> 0000:             O_EXECBIN:    equ    0342h             ; execute from default directory
<00026> 0000:             O_SETDEF:     equ    0345h             ; set/get default directory
<00027> 0000:             O_KINIT:      equ    0348h             ; reserved - do not use!!!
<00028> 0000:             O_INMSG:      equ    034bh             ; passthrough for console output
<00029> 0000:             O_GETDEV:     equ    034eh             ; passthrough to f_getdef
<00030> 0000:             O_GETTOD:     equ    0351h             ; passthrough to f_gettod
<00031> 0000:             O_SETTOD:     equ    0354h             ; passthrough to f_settod
<00032> 0000:             O_INPUTL:     equ    0357h             ; passthrough to f_inputl
<00033> 0000:             O_BOOT:       equ    035ah             ; passthrough to f_boot
<00034> 0000:             O_SETBD:      equ    0360h             ; passthrough to f_setbd
<00035> 0000:             O_INITCALL:   equ    0363h             ; passthrough to f_initcall
<00036> 0000:             O_BRKTEST:    equ    0366h             ; passthrough to f_brktest
<00037> 0000:             O_DEVCTRL:    equ    0369h             ; Hook for device control drivers
<00038> 0000:             O_ALLOC:      equ    036ch             ; passthrough to alloc
<00039> 0000:             O_DEALLOC:    equ    036fh             ; passthrough to dealloc
<00040> 0000:             O_TERMCTRL:   equ    0372h             ; Hook for terminal control drivers
<00041> 0000:             O_NBREAD:     equ    0375h             ; passthrough to f_nbread
<00042> 0000:             O_MEMBTRL:    equ    0378h             ; Hook for memory control drivers
<00043> 0000:             O_LMPTOSEC:   equ    0409h             ; convert lump to sector
<00044> 0000:             O_SECTOLMP:   equ    040ch             ; convert sector to lump
<00045> 0000:             O_DIRENT:     equ    037Bh             ; get dirent for a file
<00046> 0000:             O_RELSEC:     equ    0418h             ; find relative sector
<00047> 0000:             O_TRUNC:      equ    046ah             ; Truncate file
<00048> 0000:             O_VIDEO:      equ    0456h             ; video driver hook
<00049> 0000:             D_IDERESET:   equ    0444h             ; passthrough to f_idereset
<00050> 0000:             D_IDEREAD:    equ    0447h             ; passthrough to f_ideread
<00051> 0000:             D_IDEWRITE:   equ    044Ah             ; passthrough to f_idewrite
<00052> 0000:             D_REAPHEAP:   equ    044Dh             ; calls heap reaper to clean non-permanent heap blocks
<00053> 0000:             D_SAVESYS:    equ    0459h             ; save system sector
<00054> 0000:             D_DELCHAIN:   equ    0453h             ; delete an AU chain
<00055> 0000:             D_ALLOCAU:    equ    045eh             ; allocate an AU
<00056> 0000:             D_FREEDIRENT: equ    046dh             ; allocate a DIRENT
<00057> 0000:             I_SERVE:      equ    03f6h             ; address of interrupt chain head
<00058> 0000:             V_IVEC:       equ    03fdh             ; interrupt head
<00059> 0000:             V_DVEC:       equ    036ah             ; device head
<00060> 0000:             K_SYS_DTA:    equ    0100h             ; system sector DTA
<00061> 0000:             K_VER:        equ    0400h             ; kernel version number
<00062> 0000:             K_BUILD:      equ    0403h             ; kernel build number
<00063> 0000:             K_BMONTH:     equ    0405h             ; kernel build month
<00064> 0000:             K_BDAY:       equ    0406h             ; kernel build day
<00065> 0000:             K_BYEAR:      equ    0407h             ; kernel build month
<00066> 0000:             K_LASTSEC:    equ    042bh             ; sector currently in sys DTA
<00067> 0000:             K_CWD_LUMP:   equ    0436h             ; lump for current directory
<00068> 0000:             K_EXEC_AU:    equ    043Eh             ; executable starting AU
<00069> 0000:             K_HIMEM:      equ    0442h             ; high memory pointer
<00070> 0000:             K_LOWMEM:     equ    0465h             ; lowest memory heap can use
<00071> 0000:             K_RETVAL:     equ    0467h             ; D on program exit
<00072> 0000:             K_HEAP:       equ    0468h             ; heap pointer
<00073> 0000:             K_CLKFREQ:    equ    0470h             ; system clock frequency
<00074> 0000:             K_MONTH:      equ    0475h             ; date/time
<00075> 0000:             K_DAY:        equ    0476h
<00076> 0000:             K_YEAR:       equ    0477h
<00077> 0000:             K_HOUR:       equ    0478h
<00078> 0000:             K_MINUTE:     equ    0479h
<00079> 0000:             K_SECOND:     equ    047ah
<00080> 0000:             K_SECDEN:     equ    047bh
<00081> 0000:             K_SECNUM:     equ    047dh
<00082>                   
<00083>                   
<00000>                   #include include/elfc.inc
<00001>                   ;-------------------------------------------------------------------------------
<00002>                   ; elfc - a library for basic c language functions
<00003>                   ;-------------------------------------------------------------------------------
<00004> 0000:                       extrn   epush16
<00005> 0000:                       extrn   epush8
<00006> 0000:                       extrn   dpop16
<00007> 0000:                       extrn   abs16
<00008> 0000:                       extrn   add16
<00009> 0000:                       extrn   and16
<00010> 0000:                       extrn   atoi16
<00011> 0000:                       extrn   div16
<00012> 0000:                       extrn   eq16
<00013> 0000:                     	extrn   false16
<00014> 0000:                     	extrn   gt16
<00015> 0000:                     	extrn   gte16
<00016> 0000:                     	extrn   itoa16
<00017> 0000:                     	extrn   lfsrshift
<00018> 0000:                     	extrn   lt16
<00019> 0000:                     	extrn   lte16
<00020> 0000:                     	extrn   mdnorm16
<00021> 0000:                     	extrn   mod16
<00022> 0000:                     	extrn   mul16
<00023> 0000:                     	extrn   ne16
<00024> 0000:                     	extrn   neg16
<00025> 0000:                     	extrn   or16
<00026> 0000:                     	extrn   rnd16
<00027> 0000:                     	extrn   sgn16
<00028> 0000:                     	extrn   sub16
<00029> 0000:                     	extrn   tobcd16
<00030> 0000:                     	extrn   true16
<00031> 0000:                     	extrn   xor16
<00032> 0000:                       extrn   not16
<00033> 0000:                       extrn   bool16
<00034> 0000:                       extrn   inv16
<00035> 0000:                       extrn   shl16
<00036> 0000:                       extrn   shr16
<00037> 0000:                       extrn   vpush16
<00038> 0000:                       extrn   vpop16
<00039> 0000:                       extrn   vpush8
<00040> 0000:                       extrn   dpush16
<00041> 0000:                       extrn   dpush8
<00042> 0000:                       extrn   esmove
<00043> 0000:                       extrn   linit16
<00044> 0000:                       extrn   lstor16
<00045> 0000:                       extrn   lstor8
<00046> 0000:                       extrn   vstor16
<00047> 0000:                       extrn   vstor8
<00048> 0000:                       extrn   swap16
<00049> 0000:                       extrn   dget16
<00050> 0000:                       extrn   lpush16
<00051> 0000:                       extrn   lpush8
<00052> 0000:                       extrn   deref16
<00053> 0000:                       extrn   deref8
<00054> 0000:                       extrn   laddr16
<00055> 0000:                       extrn   pstor16
<00056> 0000:                       extrn   pstor8
<00057> 0000:                       extrn   scltos2
<00058> 0000:                       extrn   sclsos2
<00059> 0000:                       extrn   unscl2
<00060> 0000:                       extrn   vinc16
<00061> 0000:                       extrn   vdec16
<00062> 0000:                       extrn   vinc8
<00063> 0000:                       extrn   vdec8
<00064> 0000:                       extrn   linc16
<00065> 0000:                       extrn   ldec16
<00066> 0000:                       extrn   linc8
<00067> 0000:                       extrn   ldec8
<00068> 0000:                       extrn   lpinc16
<00069> 0000:                       extrn   lpdec16
<00070> 0000:                       extrn   vpinc16
<00071> 0000:                       extrn   vpdec16
<00072> 0000:                       extrn   psave
<00073> 0000:                       extrn   pinc16
<00074> 0000:                       extrn   pdec16
<00075> 0000:                       extrn   pinc8
<00076> 0000:                       extrn   pdec8
<00077> 0000:                       extrn   pincptr
<00078> 0000:                       extrn   pdecptr
<00079> 0000:                       extrn   escheck
<00080> 0000:                       extrn   ugt16
<00081> 0000:                     	extrn   uge16
<00082> 0000:                       extrn   ult16
<00083> 0000:                     	extrn   ule16
<00084> 0000:                       extrn   scltos4
<00085> 0000:                       extrn   sclsos4
<00086> 0000:                       extrn   unscl4
<00087> 0000:                       extrn   lget16
<00088> 0000:                       extrn   lget8
<00089> 0000:                       extrn   lset16
<00090>                   
<00091>                   ;-------------------------------------------------------------------------------
<00092>                   ; crt0 - Elf/OS c start-up library
<00093>                   ;-------------------------------------------------------------------------------
<00094> 0000:                       extrn   auto_err
[00009]                   
[00010] 0000:             	           proc libtest1
[00011]                   
[00012] 0000:                         extrn C_init
[00013]                   
[00014] 0000:                         extrn C_fdinit
[00015]                   
[00016] 0000:                         extrn C_fdtable
[00017]                   
[00018] 0000:                         extrn C_fildes
[00019]                   
[00020] 0000:                         extrn Cabort
[00021]                   
[00022] 0000:                         extrn Cabs
[00023]                   
[00024] 0000:                         extrn Catexit
[00025]                   
[00026] 0000:                         extrn Cexit
[00027]                   
[00028] 0000:                         extrn Cmalloc
[00029]                   
[00030] 0000:                         extrn Ccalloc
[00031]                   
[00032] 0000:                         extrn Crealloc
[00033]                   
[00034] 0000:                         extrn Cfree
[00035]                   
[00036] 0000:                         extrn Catoi
[00037]                   
[00038] 0000:                         extrn Citoa
[00039]                   
[00040] 0000:                         extrn Citox
[00041]                   
[00042] 0000:                         extrn Citou
[00043]                   
[00044] 0000:                         extrn Cdiv
[00045]                   
[00046] 0000:                         extrn Cbsearch
[00047]                   
[00048] 0000:                         extrn Cqsort
[00049]                   
[00050] 0000:                         extrn Crand
[00051]                   
[00052] 0000:                         extrn Csrand
[00053]                   
[00054] 0000:                         extrn Ccreat
[00055]                   
[00056] 0000:                         extrn Copen
[00057]                   
[00058] 0000:                         extrn Cclose
[00059]                   
[00060] 0000:                         extrn Cread
[00061]                   
[00062] 0000:                         extrn Cwrite
[00063]                   
[00064] 0000:                         extrn Clseek
[00065]                   
[00066] 0000:                         extrn Cunlink
[00067]                   
[00068] 0000:                         extrn Crename
[00069]                   
[00070] 0000:                         extrn Cmin
[00071]                   
[00072] 0000:                         extrn Cmax
[00073]                   
[00074] 0000:                         extrn Cstdin
[00075]                   
[00076] 0000:                         extrn Cstdout
[00077]                   
[00078] 0000:                         extrn Cstderr
[00079]                   
[00080] 0000:                         extrn Cputs
[00081]                   
[00082] 0000:                         extrn Cputstr
[00083]                   
[00084] 0000:                         extrn Cgets
[00085]                   
[00086] 0000:                         extrn Cputch
[00087]                   
[00088] 0000:                         extrn Cgetch
[00089]                   
[00090] 0000:                         extrn Cputchar
[00091]                   
[00092] 0000:                         extrn Cgetchar
[00093]                   
[00094] 0000:                         extrn Cfdopen
[00095]                   
[00096] 0000:                         extrn Cfclose
[00097]                   
[00098] 0000:                         extrn Cfopen
[00099]                   
[00100] 0000:                         extrn Cferror
[00101]                   
[00102] 0000:                         extrn Cfeof
[00103]                   
[00104] 0000:                         extrn Cclearerr
[00105]                   
[00106] 0000:                         extrn Cfgetc
[00107]                   
[00108] 0000:                         extrn Cfputc
[00109]                   
[00110] 0000:                         extrn Cfgets
[00111]                   
[00112] 0000:                         extrn Cfputs
[00113]                   
[00114] 0000:                         extrn Cungetc
[00115]                   
[00116] 0000:                         extrn Cfread
[00117]                   
[00118] 0000:                         extrn Cfwrite
[00119]                   
[00120] 0000:                         extrn Cfflush
[00121]                   
[00122] 0000:                         extrn Cfprintf
[00123]                   
[00124] 0000:                         extrn Ckprintf
[00125]                   
[00126] 0000:                         extrn Cprintf
[00127]                   
[00128] 0000:                         extrn Csprintf
[00129]                   
[00130] 0000:                         extrn Cvfprintf
[00131]                   
[00132] 0000:                         extrn Cvprintf
[00133]                   
[00134] 0000:                         extrn Cvsprintf
[00135]                   
[00136] 0000:                         extrn Cfscanf
[00137]                   
[00138] 0000:                         extrn Cscanf
[00139]                   
[00140] 0000:                         extrn Csscanf
[00141]                   
[00142] 0000:                         extrn Cfgetpos
[00143]                   
[00144] 0000:                         extrn Cfsetpos
[00145]                   
[00146] 0000:                         extrn Cfseek
[00147]                   
[00148] 0000:                         extrn Cftell
[00149]                   
[00150] 0000:                         extrn Cperror
[00151]                   
[00152] 0000:                         extrn Crewind
[00153]                   
[00154] 0000:                         extrn Cremove
[00155]                   
[00156] 0000:                         extrn Ctmpnam
[00157]                   
[00158] 0000:                         extrn Ctmpfile
[00159]                   
[00160] 0000:                         extrn Cfileno
[00161]                   
[00162]                   .link .library string.lib
[00163]                   
[00164] 0000:                         extrn Cmemchr
[00165]                   
[00166] 0000:                         extrn Cmemcmp
[00167]                   
[00168] 0000:                         extrn Cmemcpy
[00169]                   
[00170] 0000:                         extrn Cmemmove
[00171]                   
[00172] 0000:                         extrn Cmemset
[00173]                   
[00174] 0000:                         extrn Cstrcat
[00175]                   
[00176] 0000:                         extrn Cstrchr
[00177]                   
[00178] 0000:                         extrn Cstrcmp
[00179]                   
[00180] 0000:                         extrn Cstrcpy
[00181]                   
[00182] 0000:                         extrn Cstrcspn
[00183]                   
[00184] 0000:                         extrn Cstrdup
[00185]                   
[00186] 0000:                         extrn Cstrerror
[00187]                   
[00188] 0000:                         extrn Cstrlen
[00189]                   
[00190] 0000:                         extrn Cstrncat
[00191]                   
[00192] 0000:                         extrn Cstrncmp
[00193]                   
[00194] 0000:                         extrn Cstrncpy
[00195]                   
[00196] 0000:                         extrn Cstrlcpy
[00197]                   
[00198] 0000:                         extrn Cstrpbrk
[00199]                   
[00200] 0000:                         extrn Cstrrchr
[00201]                   
[00202] 0000:                         extrn Cstrspn
[00203]                   
[00204] 0000:                         extrn Cstrstr
[00205]                   
[00206] 0000:                         extrn Cstrtok
[00207]                   	;----- cgpublic
[00208] 0000:             	              public CErrors
[00209] 0000: 00 00       CErrors:	db	$00, $00  ;----- cgdefw LSB first, MSB second
[00210]                   	;----- cgpublic
[00211] 0002:             	              public Cv1
[00212] 0002:             Cv1:    ds 64    ;----- cggbss
[00213]                   	;----- cgpublic
[00214] 0042:             	              public Csegp
[00215] 0042:             Csegp:    ds 20    ;----- cggbss
[00216]                   	;----- cgpublic
[00217] 0056:             	              public Cnum
[00218] 0056:             Cnum:    ds 64    ;----- cggbss
[00219]                   	;----- cgpublic
[00220] 0096:             	              public Cresult
[00221] 0096: 00 00       Cresult:	db	$00, $00  ;----- cgdefw LSB first, MSB second
[00222]                   	;----- cgpublic
[00223] 0098:             	              public Cfail
[00224]                   Cfail:	;---- cgentry
[00225] 0098: e2          	          sex   r2   				 ; make sure X = SP
[00226] 0099: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00227] 009d: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00228]                   	;----- begin stmt ------
[00229]                   	;---- queue lbr L3
[00230]                   	;----- cgjump
[00231] 00a1: c0 00 af    	 				  lbr	L3
[00232]                   
[00233]                   L2:
[00234] 00a4: 25 73 20 66   db '%s failed', 10    ;----- cgdefs
              61 69 6c 65 
              64 0a 
[00235] 00ae: 00          	db	$00    ;----- cgdefb
[00236]                   
[00237]                   L3:
[00238]                   	;----- cgldlw
[00239] 00af: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00240] 00b2: 00 00       	          dw  0  ;--- offset
[00241]                   	;----- cgldlab
[00242] 00b4: d4 00 00    	 				call epush16
[00243] 00b7: 00 a4       	 				  dw  L2
[00244]                   	;----- cgcall
[00245] 00b9: d4 00 00    	          call  Cprintf
[00246]                   	;----- cgstack
[00247] 00bc: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00248] 00bf: 00 04       	          dw  4  ;--- offset
[00249] 00c1: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00250]                   	;---- queue dpush
[00251]                   	;----- push + pop data not required, data remains unchanged in RA
[00252]                   	;----- end stmt ------
[00253]                   	;----- begin stmt ------
[00254]                   	;----- cgldgw
[00255] 00c4: d4 00 00    	 				call vpush16
[00256] 00c7: 00 00       	 				  dw CErrors
[00257]                   	;----- cgincgw
[00258] 00c9: d4 00 00    	 				 call vinc16       ; increment global variable
[00259] 00cc: 00 00       	 				  dw CErrors
[00260]                   	;----- cgpopd
[00261] 00ce: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00262]                   	;----- end stmt ------
[00263]                   	;----- begin stmt ------
[00264]                   	;----- cglit
[00265] 00d1: d4 00 00    	 				call epush16
[00266] 00d4: 00 01       	 				  dw 1
[00267]                   	;----- cgstorgw
[00268] 00d6: d4 00 00    	 				 call vstor16       ; store value from ES in global variable
[00269] 00d9: 00 96       	 				  dw Cresult
[00270]                   	;----- cgpopd
[00271] 00db: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00272]                   	;----- end stmt ------
[00273]                   
[00274]                   L1:
[00275]                   	;----- cgexit
[00276] 00de: e2          	          sex   r2            ; make sure X = SP
[00277] 00df: d4 00 00    	          call  escheck       ; check for expression stack creep
[00278] 00e2: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00279]                   
[00280] 00e7: d5          	          rtn	  			 	     ; return to caller
[00281]                   	;----- cgpublic
[00282] 00e8:             	              public Cpr
[00283]                   Cpr:	;---- cgentry
[00284] 00e8: e2          	          sex   r2   				 ; make sure X = SP
[00285] 00e9: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00286] 00ed: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00287]                   	;----- begin stmt ------
[00288]                   	;---- queue lbr L6
[00289]                   	;----- cgjump
[00290] 00f1: c0 00 f8    	 				  lbr	L6
[00291]                   
[00292]                   L5:
[00293] 00f4: 25 73 0a      db '%s', 10    ;----- cgdefs
[00294] 00f7: 00          	db	$00    ;----- cgdefb
[00295]                   
[00296]                   L6:
[00297]                   	;----- cgldlw
[00298] 00f8: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00299] 00fb: 00 00       	          dw  0  ;--- offset
[00300]                   	;----- cgldlab
[00301] 00fd: d4 00 00    	 				call epush16
[00302] 0100: 00 f4       	 				  dw  L5
[00303]                   	;----- cgcall
[00304] 0102: d4 00 00    	          call  Cprintf
[00305]                   	;----- cgstack
[00306] 0105: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00307] 0108: 00 04       	          dw  4  ;--- offset
[00308] 010a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00309]                   	;---- queue dpush
[00310]                   	;----- push + pop data not required, data remains unchanged in RA
[00311]                   	;----- end stmt ------
[00312]                   
[00313]                   L4:
[00314]                   	;----- cgexit
[00315] 010d: e2          	          sex   r2            ; make sure X = SP
[00316] 010e: d4 00 00    	          call  escheck       ; check for expression stack creep
[00317] 0111: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00318]                   
[00319] 0116: d5          	          rtn	  			 	     ; return to caller
[00320]                   	;----- cgpublic
[00321] 0117:             	              public Ctest_memfn
[00322]                   Ctest_memfn:	;---- cgentry
[00323] 0117: e2          	          sex   r2   				 ; make sure X = SP
[00324] 0118: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00325] 011c: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00326]                   	;----- cgstack
[00327] 0120: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00328] 0123: ff f8       	          dw  -8  ;--- offset
[00329] 0125: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00330]                   	;----- begin stmt ------
[00331]                   	;---- queue lbr L9
[00332]                   	;----- cgjump
[00333] 0128: c0 01 32    	 				  lbr	L9
[00334]                   
[00335]                   L8:
[00336] 012b: 6d 65 6d 63   db 'memcmp'    ;----- cgdefs
              6d 70 
[00337] 0131: 00          	db	$00    ;----- cgdefb
[00338]                   
[00339]                   L9:
[00340]                   	;----- cgldlab
[00341] 0132: d4 00 00    	 				call epush16
[00342] 0135: 01 2b       	 				  dw  L8
[00343]                   	;----- cgcall
[00344] 0137: d4 00 e8    	          call  Cpr
[00345]                   	;----- cgstack
[00346] 013a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00347] 013d: 00 02       	          dw  2  ;--- offset
[00348] 013f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00349]                   	;---- queue dpush
[00350]                   	;----- push + pop data not required, data remains unchanged in RA
[00351]                   	;----- end stmt ------
[00352]                   	;----- begin stmt ------
[00353]                   	;---- queue lbr L11
[00354]                   	;----- cgjump
[00355] 0142: c0 01 4c    	 				  lbr	L11
[00356]                   
[00357]                   L10:
[00358] 0145: 74 65 73 74   db 'test01'    ;----- cgdefs
              30 31 
[00359] 014b: 00          	db	$00    ;----- cgdefb
[00360]                   
[00361]                   L11:
[00362]                   	;----- cgldlab
[00363] 014c: d4 00 00    	 				call epush16
[00364] 014f: 01 45       	 				  dw  L10
[00365]                   	;----- cgstorlw
[00366] 0151: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00367] 0154: ff fe       	          dw  -2  ;--- offset
[00368]                   	;----- cgpopd
[00369] 0156: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00370]                   	;----- end stmt ------
[00371]                   	;----- begin stmt ------
[00372]                   	;---- queue lbr L13
[00373]                   	;----- cgjump
[00374] 0159: c0 01 63    	 				  lbr	L13
[00375]                   
[00376]                   L12:
[00377] 015c: 74 65 73 74   db 'test03'    ;----- cgdefs
              30 33 
[00378] 0162: 00          	db	$00    ;----- cgdefb
[00379]                   
[00380]                   L13:
[00381]                   	;----- cgldlab
[00382] 0163: d4 00 00    	 				call epush16
[00383] 0166: 01 5c       	 				  dw  L12
[00384]                   	;----- cgstorlw
[00385] 0168: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00386] 016b: ff fc       	          dw  -4  ;--- offset
[00387]                   	;----- cgpopd
[00388] 016d: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00389]                   	;----- end stmt ------
[00390]                   	;----- begin stmt ------
[00391]                   	;----- begin if
[00392]                   	;----- cglit
[00393] 0170: d4 00 00    	 				call epush16
[00394] 0173: 00 05       	 				  dw 5
[00395]                   	;----- cgldlw
[00396] 0175: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00397] 0178: ff fc       	          dw  -4  ;--- offset
[00398]                   	;----- cgldlw
[00399] 017a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00400] 017d: ff fe       	          dw  -2  ;--- offset
[00401]                   	;----- cgcall
[00402] 017f: d4 00 00    	          call  Cmemcmp
[00403]                   	;----- cgstack
[00404] 0182: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00405] 0185: 00 06       	          dw  6  ;--- offset
[00406] 0187: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00407]                   	;---- queue dpush
[00408]                   	;----- genbrfalse
[00409]                   	;------ commit push
[00410]                   	;----- cgpushd
[00411] 018a: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00412]                   	;----- cgbrfalse
[00413]                   	;----- cgbr
[00414] 018d: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00415] 0190: 9a          	 				 ghi   ra            ; get MSB from result
[00416] 0191: 52          	 				 str   r2            ; save in M(X)
[00417] 0192: 8a          	 				 glo   ra            ; get LSB from result
[00418] 0193: f1          	 				 or                  ; D = MSB | LSB
[00419] 0194: c2 01 b3    	 				 lbz	L14           ; check for branch
[00420]                   	;----- begin stmt ------
[00421]                   	;---- queue lbr L16
[00422]                   	;----- cgjump
[00423] 0197: c0 01 a3    	 				  lbr	L16
[00424]                   
[00425]                   L15:
[00426] 019a: 6d 65 6d 63   db 'memcmp-1'    ;----- cgdefs
              6d 70 2d 31 
[00427] 01a2: 00          	db	$00    ;----- cgdefb
[00428]                   
[00429]                   L16:
[00430]                   	;----- cgldlab
[00431] 01a3: d4 00 00    	 				call epush16
[00432] 01a6: 01 9a       	 				  dw  L15
[00433]                   	;----- cgcall
[00434] 01a8: d4 00 98    	          call  Cfail
[00435]                   	;----- cgstack
[00436] 01ab: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00437] 01ae: 00 02       	          dw  2  ;--- offset
[00438] 01b0: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00439]                   	;---- queue dpush
[00440]                   	;----- push + pop data not required, data remains unchanged in RA
[00441]                   	;----- end stmt ------
[00442]                   
[00443]                   L14:
[00444]                   	;----- end if
[00445]                   	;----- end stmt ------
[00446]                   	;----- begin stmt ------
[00447]                   	;----- begin if
[00448]                   	;----- cglit
[00449] 01b3: d4 00 00    	 				call epush16
[00450] 01b6: 00 06       	 				  dw 6
[00451]                   	;----- cgldlw
[00452] 01b8: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00453] 01bb: ff fc       	          dw  -4  ;--- offset
[00454]                   	;----- cgldlw
[00455] 01bd: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00456] 01c0: ff fe       	          dw  -2  ;--- offset
[00457]                   	;----- cgcall
[00458] 01c2: d4 00 00    	          call  Cmemcmp
[00459]                   	;----- cgstack
[00460] 01c5: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00461] 01c8: 00 06       	          dw  6  ;--- offset
[00462] 01ca: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00463]                   	;---- queue dpush
[00464]                   	;----- queue_bool
[00465]                   	;------ commit push
[00466]                   	;----- cgpushd
[00467] 01cd: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00468]                   	;----- genbrfalse
[00469]                   	;----- genlogbr
[00470]                   	;----- cgbrtrue
[00471]                   	;----- cgbr
[00472] 01d0: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00473] 01d3: 9a          	 				 ghi   ra            ; get MSB from result
[00474] 01d4: 52          	 				 str   r2            ; save in M(X)
[00475] 01d5: 8a          	 				 glo   ra            ; get LSB from result
[00476] 01d6: f1          	 				 or                  ; D = MSB | LSB
[00477] 01d7: ca 01 f6    	 				 lbnz	L17           ; check for branch
[00478]                   	;----- begin stmt ------
[00479]                   	;---- queue lbr L19
[00480]                   	;----- cgjump
[00481] 01da: c0 01 e6    	 				  lbr	L19
[00482]                   
[00483]                   L18:
[00484] 01dd: 6d 65 6d 63   db 'memcmp-2'    ;----- cgdefs
              6d 70 2d 32 
[00485] 01e5: 00          	db	$00    ;----- cgdefb
[00486]                   
[00487]                   L19:
[00488]                   	;----- cgldlab
[00489] 01e6: d4 00 00    	 				call epush16
[00490] 01e9: 01 dd       	 				  dw  L18
[00491]                   	;----- cgcall
[00492] 01eb: d4 00 98    	          call  Cfail
[00493]                   	;----- cgstack
[00494] 01ee: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00495] 01f1: 00 02       	          dw  2  ;--- offset
[00496] 01f3: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00497]                   	;---- queue dpush
[00498]                   	;----- push + pop data not required, data remains unchanged in RA
[00499]                   	;----- end stmt ------
[00500]                   
[00501]                   L17:
[00502]                   	;----- end if
[00503]                   	;----- end stmt ------
[00504]                   	;----- begin stmt ------
[00505]                   	;----- begin if
[00506]                   	;----- cglit
[00507] 01f6: d4 00 00    	 				call epush16
[00508] 01f9: 00 06       	 				  dw 6
[00509]                   	;----- cgldlw
[00510] 01fb: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00511] 01fe: ff fc       	          dw  -4  ;--- offset
[00512]                   	;----- cgldlw
[00513] 0200: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00514] 0203: ff fe       	          dw  -2  ;--- offset
[00515]                   	;----- cgcall
[00516] 0205: d4 00 00    	          call  Cmemcmp
[00517]                   	;----- cgstack
[00518] 0208: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00519] 020b: 00 06       	          dw  6  ;--- offset
[00520] 020d: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00521]                   	;---- queue dpush
[00522]                   	;------ commit push
[00523]                   	;----- cgpushd
[00524] 0210: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00525]                   	;----- cglit
[00526] 0213: d4 00 00    	 				call epush16
[00527] 0216: ff fe       	 				  dw -2
[00528]                   	;----- queue_cmp
[00529]                   	;----- genbrfalse
[00530]                   	;----- genbranch
[00531]                   	;----- cgbrne
[00532]                   	;----- cgne
[00533] 0218: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00534]                   
[00535]                   	;----- cgbrcond
[00536] 021b: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00537] 021e: 9a          	 				 ghi   ra            ; get MSB from result
[00538] 021f: 52          	 				 str   r2            ; save in M(X)
[00539] 0220: 8a          	 				 glo   ra            ; get LSB from result
[00540] 0221: f1          	 				 or                  ; D = MSB | LSB
[00541] 0222: ca 02 28    	lbnz	L21
[00542] 0225: c0 02 44    	lbr	L20
[00543]                   
[00544]                   L21:
[00545]                   	;----- begin stmt ------
[00546]                   	;---- queue lbr L23
[00547]                   	;----- cgjump
[00548] 0228: c0 02 34    	 				  lbr	L23
[00549]                   
[00550]                   L22:
[00551] 022b: 6d 65 6d 63   db 'memcmp-3'    ;----- cgdefs
              6d 70 2d 33 
[00552] 0233: 00          	db	$00    ;----- cgdefb
[00553]                   
[00554]                   L23:
[00555]                   	;----- cgldlab
[00556] 0234: d4 00 00    	 				call epush16
[00557] 0237: 02 2b       	 				  dw  L22
[00558]                   	;----- cgcall
[00559] 0239: d4 00 98    	          call  Cfail
[00560]                   	;----- cgstack
[00561] 023c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00562] 023f: 00 02       	          dw  2  ;--- offset
[00563] 0241: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00564]                   	;---- queue dpush
[00565]                   	;----- push + pop data not required, data remains unchanged in RA
[00566]                   	;----- end stmt ------
[00567]                   
[00568]                   L20:
[00569]                   	;----- end if
[00570]                   	;----- end stmt ------
[00571]                   	;----- begin stmt ------
[00572]                   	;----- begin if
[00573]                   	;----- cglit
[00574] 0244: d4 00 00    	 				call epush16
[00575] 0247: 00 06       	 				  dw 6
[00576]                   	;----- cgldlw
[00577] 0249: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00578] 024c: ff fe       	          dw  -2  ;--- offset
[00579]                   	;----- cgldlw
[00580] 024e: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00581] 0251: ff fc       	          dw  -4  ;--- offset
[00582]                   	;----- cgcall
[00583] 0253: d4 00 00    	          call  Cmemcmp
[00584]                   	;----- cgstack
[00585] 0256: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00586] 0259: 00 06       	          dw  6  ;--- offset
[00587] 025b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00588]                   	;---- queue dpush
[00589]                   	;------ commit push
[00590]                   	;----- cgpushd
[00591] 025e: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00592]                   	;----- cglit
[00593] 0261: d4 00 00    	 				call epush16
[00594] 0264: 00 02       	 				  dw 2
[00595]                   	;----- queue_cmp
[00596]                   	;----- genbrfalse
[00597]                   	;----- genbranch
[00598]                   	;----- cgbrne
[00599]                   	;----- cgne
[00600] 0266: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00601]                   
[00602]                   	;----- cgbrcond
[00603] 0269: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00604] 026c: 9a          	 				 ghi   ra            ; get MSB from result
[00605] 026d: 52          	 				 str   r2            ; save in M(X)
[00606] 026e: 8a          	 				 glo   ra            ; get LSB from result
[00607] 026f: f1          	 				 or                  ; D = MSB | LSB
[00608] 0270: ca 02 76    	lbnz	L25
[00609] 0273: c0 02 92    	lbr	L24
[00610]                   
[00611]                   L25:
[00612]                   	;----- begin stmt ------
[00613]                   	;---- queue lbr L27
[00614]                   	;----- cgjump
[00615] 0276: c0 02 82    	 				  lbr	L27
[00616]                   
[00617]                   L26:
[00618] 0279: 6d 65 6d 63   db 'memcmp-4'    ;----- cgdefs
              6d 70 2d 34 
[00619] 0281: 00          	db	$00    ;----- cgdefb
[00620]                   
[00621]                   L27:
[00622]                   	;----- cgldlab
[00623] 0282: d4 00 00    	 				call epush16
[00624] 0285: 02 79       	 				  dw  L26
[00625]                   	;----- cgcall
[00626] 0287: d4 00 98    	          call  Cfail
[00627]                   	;----- cgstack
[00628] 028a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00629] 028d: 00 02       	          dw  2  ;--- offset
[00630] 028f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00631]                   	;---- queue dpush
[00632]                   	;----- push + pop data not required, data remains unchanged in RA
[00633]                   	;----- end stmt ------
[00634]                   
[00635]                   L24:
[00636]                   	;----- end if
[00637]                   	;----- end stmt ------
[00638]                   	;----- begin stmt ------
[00639]                   	;---- queue lbr L29
[00640]                   	;----- cgjump
[00641] 0292: c0 02 9c    	 				  lbr	L29
[00642]                   
[00643]                   L28:
[00644] 0295: 6d 65 6d 63   db 'memcpy'    ;----- cgdefs
              70 79 
[00645] 029b: 00          	db	$00    ;----- cgdefb
[00646]                   
[00647]                   L29:
[00648]                   	;----- cgldlab
[00649] 029c: d4 00 00    	 				call epush16
[00650] 029f: 02 95       	 				  dw  L28
[00651]                   	;----- cgcall
[00652] 02a1: d4 00 e8    	          call  Cpr
[00653]                   	;----- cgstack
[00654] 02a4: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00655] 02a7: 00 02       	          dw  2  ;--- offset
[00656] 02a9: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00657]                   	;---- queue dpush
[00658]                   	;----- push + pop data not required, data remains unchanged in RA
[00659]                   	;----- end stmt ------
[00660]                   	;----- begin stmt ------
[00661]                   	;---- queue lbr L31
[00662]                   	;----- cgjump
[00663] 02ac: c0 02 d4    	 				  lbr	L31
[00664]                   
[00665]                   L30:
[00666] 02af: 61 62 63 64   db 'abcdefghijklmnopqrstuvwxyz0123456789'    ;----- cgdefs
              65 66 67 68 
              69 6a 6b 6c 
              6d 6e 6f 70 
              71 72 73 74 
              75 76 77 78 
              79 7a 30 31 
              32 33 34 35 
              36 37 38 39 
[00667] 02d3: 00          	db	$00    ;----- cgdefb
[00668]                   
[00669]                   L31:
[00670]                   	;----- cgldlab
[00671] 02d4: d4 00 00    	 				call epush16
[00672] 02d7: 02 af       	 				  dw  L30
[00673]                   	;----- cgstorlw
[00674] 02d9: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00675] 02dc: ff fe       	          dw  -2  ;--- offset
[00676]                   	;----- cgpopd
[00677] 02de: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00678]                   	;----- end stmt ------
[00679]                   	;----- begin stmt ------
[00680]                   	;----- cglit
[00681] 02e1: d4 00 00    	 				call epush16
[00682] 02e4: 00 24       	 				  dw 36
[00683]                   	;----- cgldlw
[00684] 02e6: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00685] 02e9: ff fe       	          dw  -2  ;--- offset
[00686]                   	;----- cgldga
[00687] 02eb: d4 00 00    	 				call epush16
[00688] 02ee: 00 02       	 				  dw Cv1
[00689]                   	;----- cgcall
[00690] 02f0: d4 00 00    	          call  Cmemcpy
[00691]                   	;----- cgstack
[00692] 02f3: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00693] 02f6: 00 06       	          dw  6  ;--- offset
[00694] 02f8: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00695]                   	;---- queue dpush
[00696]                   	;----- push + pop data not required, data remains unchanged in RA
[00697]                   	;----- end stmt ------
[00698]                   	;----- begin stmt ------
[00699]                   	;----- begin if
[00700]                   	;----- cglit
[00701] 02fb: d4 00 00    	 				call epush16
[00702] 02fe: 00 24       	 				  dw 36
[00703]                   	;----- cgldga
[00704] 0300: d4 00 00    	 				call epush16
[00705] 0303: 00 02       	 				  dw Cv1
[00706]                   	;----- cgldlw
[00707] 0305: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00708] 0308: ff fe       	          dw  -2  ;--- offset
[00709]                   	;----- cgcall
[00710] 030a: d4 00 00    	          call  Cmemcmp
[00711]                   	;----- cgstack
[00712] 030d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00713] 0310: 00 06       	          dw  6  ;--- offset
[00714] 0312: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00715]                   	;---- queue dpush
[00716]                   	;----- genbrfalse
[00717]                   	;------ commit push
[00718]                   	;----- cgpushd
[00719] 0315: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00720]                   	;----- cgbrfalse
[00721]                   	;----- cgbr
[00722] 0318: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00723] 031b: 9a          	 				 ghi   ra            ; get MSB from result
[00724] 031c: 52          	 				 str   r2            ; save in M(X)
[00725] 031d: 8a          	 				 glo   ra            ; get LSB from result
[00726] 031e: f1          	 				 or                  ; D = MSB | LSB
[00727] 031f: c2 03 3e    	 				 lbz	L32           ; check for branch
[00728]                   	;----- begin stmt ------
[00729]                   	;---- queue lbr L34
[00730]                   	;----- cgjump
[00731] 0322: c0 03 2e    	 				  lbr	L34
[00732]                   
[00733]                   L33:
[00734] 0325: 6d 65 6d 63   db 'memcpy-1'    ;----- cgdefs
              70 79 2d 31 
[00735] 032d: 00          	db	$00    ;----- cgdefb
[00736]                   
[00737]                   L34:
[00738]                   	;----- cgldlab
[00739] 032e: d4 00 00    	 				call epush16
[00740] 0331: 03 25       	 				  dw  L33
[00741]                   	;----- cgcall
[00742] 0333: d4 00 98    	          call  Cfail
[00743]                   	;----- cgstack
[00744] 0336: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00745] 0339: 00 02       	          dw  2  ;--- offset
[00746] 033b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00747]                   	;---- queue dpush
[00748]                   	;----- push + pop data not required, data remains unchanged in RA
[00749]                   	;----- end stmt ------
[00750]                   
[00751]                   L32:
[00752]                   	;----- end if
[00753]                   	;----- end stmt ------
[00754]                   	;----- begin stmt ------
[00755]                   	;----- cglit
[00756] 033e: d4 00 00    	 				call epush16
[00757] 0341: 00 24       	 				  dw 36
[00758]                   	;----- cgldga
[00759] 0343: d4 00 00    	 				call epush16
[00760] 0346: 00 02       	 				  dw Cv1
[00761]                   	;----- cgldga
[00762] 0348: d4 00 00    	 				call epush16
[00763] 034b: 00 02       	 				  dw Cv1
[00764]                   	;----- cglit
[00765] 034d: d4 00 00    	 				call epush16
[00766] 0350: 00 12       	 				  dw 18
[00767]                   	;----- cgadd
[00768] 0352: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[00769]                   
[00770]                   	;----- cgcall
[00771] 0355: d4 00 00    	          call  Cmemcpy
[00772]                   	;----- cgstack
[00773] 0358: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00774] 035b: 00 06       	          dw  6  ;--- offset
[00775] 035d: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00776]                   	;---- queue dpush
[00777]                   	;----- push + pop data not required, data remains unchanged in RA
[00778]                   	;----- end stmt ------
[00779]                   	;----- begin stmt ------
[00780]                   	;----- begin if
[00781]                   	;----- cglit
[00782] 0360: d4 00 00    	 				call epush16
[00783] 0363: 00 12       	 				  dw 18
[00784]                   	;----- cgldga
[00785] 0365: d4 00 00    	 				call epush16
[00786] 0368: 00 02       	 				  dw Cv1
[00787]                   	;----- cglit
[00788] 036a: d4 00 00    	 				call epush16
[00789] 036d: 00 12       	 				  dw 18
[00790]                   	;----- cgadd
[00791] 036f: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[00792]                   
[00793]                   	;----- cgldlw
[00794] 0372: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00795] 0375: ff fe       	          dw  -2  ;--- offset
[00796]                   	;----- cgcall
[00797] 0377: d4 00 00    	          call  Cmemcmp
[00798]                   	;----- cgstack
[00799] 037a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00800] 037d: 00 06       	          dw  6  ;--- offset
[00801] 037f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00802]                   	;---- queue dpush
[00803]                   	;----- genbrfalse
[00804]                   	;------ commit push
[00805]                   	;----- cgpushd
[00806] 0382: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00807]                   	;----- cgbrfalse
[00808]                   	;----- cgbr
[00809] 0385: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00810] 0388: 9a          	 				 ghi   ra            ; get MSB from result
[00811] 0389: 52          	 				 str   r2            ; save in M(X)
[00812] 038a: 8a          	 				 glo   ra            ; get LSB from result
[00813] 038b: f1          	 				 or                  ; D = MSB | LSB
[00814] 038c: c2 03 ab    	 				 lbz	L35           ; check for branch
[00815]                   	;----- begin stmt ------
[00816]                   	;---- queue lbr L37
[00817]                   	;----- cgjump
[00818] 038f: c0 03 9b    	 				  lbr	L37
[00819]                   
[00820]                   L36:
[00821] 0392: 6d 65 6d 63   db 'memcpy-2'    ;----- cgdefs
              70 79 2d 32 
[00822] 039a: 00          	db	$00    ;----- cgdefb
[00823]                   
[00824]                   L37:
[00825]                   	;----- cgldlab
[00826] 039b: d4 00 00    	 				call epush16
[00827] 039e: 03 92       	 				  dw  L36
[00828]                   	;----- cgcall
[00829] 03a0: d4 00 98    	          call  Cfail
[00830]                   	;----- cgstack
[00831] 03a3: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00832] 03a6: 00 02       	          dw  2  ;--- offset
[00833] 03a8: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00834]                   	;---- queue dpush
[00835]                   	;----- push + pop data not required, data remains unchanged in RA
[00836]                   	;----- end stmt ------
[00837]                   
[00838]                   L35:
[00839]                   	;----- end if
[00840]                   	;----- end stmt ------
[00841]                   	;----- begin stmt ------
[00842]                   	;----- cglit
[00843] 03ab: d4 00 00    	 				call epush16
[00844] 03ae: 00 24       	 				  dw 36
[00845]                   	;----- cgldga
[00846] 03b0: d4 00 00    	 				call epush16
[00847] 03b3: 00 02       	 				  dw Cv1
[00848]                   	;----- cglit
[00849] 03b5: d4 00 00    	 				call epush16
[00850] 03b8: 00 12       	 				  dw 18
[00851]                   	;----- cgadd
[00852] 03ba: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[00853]                   
[00854]                   	;----- cgldga
[00855] 03bd: d4 00 00    	 				call epush16
[00856] 03c0: 00 02       	 				  dw Cv1
[00857]                   	;----- cgcall
[00858] 03c2: d4 00 00    	          call  Cmemcpy
[00859]                   	;----- cgstack
[00860] 03c5: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00861] 03c8: 00 06       	          dw  6  ;--- offset
[00862] 03ca: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00863]                   	;---- queue dpush
[00864]                   	;----- push + pop data not required, data remains unchanged in RA
[00865]                   	;----- end stmt ------
[00866]                   	;----- begin stmt ------
[00867]                   	;----- begin if
[00868]                   	;----- cglit
[00869] 03cd: d4 00 00    	 				call epush16
[00870] 03d0: 00 12       	 				  dw 18
[00871]                   	;----- cgldga
[00872] 03d2: d4 00 00    	 				call epush16
[00873] 03d5: 00 02       	 				  dw Cv1
[00874]                   	;----- cgldlw
[00875] 03d7: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00876] 03da: ff fe       	          dw  -2  ;--- offset
[00877]                   	;----- cgcall
[00878] 03dc: d4 00 00    	          call  Cmemcmp
[00879]                   	;----- cgstack
[00880] 03df: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00881] 03e2: 00 06       	          dw  6  ;--- offset
[00882] 03e4: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00883]                   	;---- queue dpush
[00884]                   	;----- genbrfalse
[00885]                   	;------ commit push
[00886]                   	;----- cgpushd
[00887] 03e7: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00888]                   	;----- cgbrfalse
[00889]                   	;----- cgbr
[00890] 03ea: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00891] 03ed: 9a          	 				 ghi   ra            ; get MSB from result
[00892] 03ee: 52          	 				 str   r2            ; save in M(X)
[00893] 03ef: 8a          	 				 glo   ra            ; get LSB from result
[00894] 03f0: f1          	 				 or                  ; D = MSB | LSB
[00895] 03f1: c2 04 10    	 				 lbz	L38           ; check for branch
[00896]                   	;----- begin stmt ------
[00897]                   	;---- queue lbr L40
[00898]                   	;----- cgjump
[00899] 03f4: c0 04 00    	 				  lbr	L40
[00900]                   
[00901]                   L39:
[00902] 03f7: 6d 65 6d 63   db 'memcpy-3'    ;----- cgdefs
              70 79 2d 33 
[00903] 03ff: 00          	db	$00    ;----- cgdefb
[00904]                   
[00905]                   L40:
[00906]                   	;----- cgldlab
[00907] 0400: d4 00 00    	 				call epush16
[00908] 0403: 03 f7       	 				  dw  L39
[00909]                   	;----- cgcall
[00910] 0405: d4 00 98    	          call  Cfail
[00911]                   	;----- cgstack
[00912] 0408: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00913] 040b: 00 02       	          dw  2  ;--- offset
[00914] 040d: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00915]                   	;---- queue dpush
[00916]                   	;----- push + pop data not required, data remains unchanged in RA
[00917]                   	;----- end stmt ------
[00918]                   
[00919]                   L38:
[00920]                   	;----- end if
[00921]                   	;----- end stmt ------
[00922]                   	;----- begin stmt ------
[00923]                   	;---- queue lbr L42
[00924]                   	;----- cgjump
[00925] 0410: c0 04 1b    	 				  lbr	L42
[00926]                   
[00927]                   L41:
[00928] 0413: 6d 65 6d 6d   db 'memmove'    ;----- cgdefs
              6f 76 65 
[00929] 041a: 00          	db	$00    ;----- cgdefb
[00930]                   
[00931]                   L42:
[00932]                   	;----- cgldlab
[00933] 041b: d4 00 00    	 				call epush16
[00934] 041e: 04 13       	 				  dw  L41
[00935]                   	;----- cgcall
[00936] 0420: d4 00 e8    	          call  Cpr
[00937]                   	;----- cgstack
[00938] 0423: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00939] 0426: 00 02       	          dw  2  ;--- offset
[00940] 0428: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00941]                   	;---- queue dpush
[00942]                   	;----- push + pop data not required, data remains unchanged in RA
[00943]                   	;----- end stmt ------
[00944]                   	;----- begin stmt ------
[00945]                   	;----- cglit
[00946] 042b: d4 00 00    	 				call epush16
[00947] 042e: 00 24       	 				  dw 36
[00948]                   	;----- cgldlw
[00949] 0430: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00950] 0433: ff fe       	          dw  -2  ;--- offset
[00951]                   	;----- cgldga
[00952] 0435: d4 00 00    	 				call epush16
[00953] 0438: 00 02       	 				  dw Cv1
[00954]                   	;----- cgcall
[00955] 043a: d4 00 00    	          call  Cmemcpy
[00956]                   	;----- cgstack
[00957] 043d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00958] 0440: 00 06       	          dw  6  ;--- offset
[00959] 0442: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00960]                   	;---- queue dpush
[00961]                   	;----- push + pop data not required, data remains unchanged in RA
[00962]                   	;----- end stmt ------
[00963]                   	;----- begin stmt ------
[00964]                   	;----- cglit
[00965] 0445: d4 00 00    	 				call epush16
[00966] 0448: 00 23       	 				  dw 35
[00967]                   	;----- cgldga
[00968] 044a: d4 00 00    	 				call epush16
[00969] 044d: 00 02       	 				  dw Cv1
[00970]                   	;----- cgldga
[00971] 044f: d4 00 00    	 				call epush16
[00972] 0452: 00 02       	 				  dw Cv1
[00973]                   	;----- cglit
[00974] 0454: d4 00 00    	 				call epush16
[00975] 0457: 00 01       	 				  dw 1
[00976]                   	;----- cgadd
[00977] 0459: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[00978]                   
[00979]                   	;----- cgcall
[00980] 045c: d4 00 00    	          call  Cmemmove
[00981]                   	;----- cgstack
[00982] 045f: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00983] 0462: 00 06       	          dw  6  ;--- offset
[00984] 0464: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00985]                   	;---- queue dpush
[00986]                   	;----- push + pop data not required, data remains unchanged in RA
[00987]                   	;----- end stmt ------
[00988]                   	;----- begin stmt ------
[00989]                   	;----- begin if
[00990]                   	;----- cglit
[00991] 0467: d4 00 00    	 				call epush16
[00992] 046a: 00 23       	 				  dw 35
[00993]                   	;----- cgldlw
[00994] 046c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00995] 046f: ff fe       	          dw  -2  ;--- offset
[00996]                   	;----- cgldga
[00997] 0471: d4 00 00    	 				call epush16
[00998] 0474: 00 02       	 				  dw Cv1
[00999]                   	;----- cglit
[01000] 0476: d4 00 00    	 				call epush16
[01001] 0479: 00 01       	 				  dw 1
[01002]                   	;----- cgadd
[01003] 047b: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01004]                   
[01005]                   	;----- cgcall
[01006] 047e: d4 00 00    	          call  Cmemcmp
[01007]                   	;----- cgstack
[01008] 0481: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01009] 0484: 00 06       	          dw  6  ;--- offset
[01010] 0486: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01011]                   	;---- queue dpush
[01012]                   	;------ commit push
[01013]                   	;----- cgpushd
[01014] 0489: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01015]                   	;----- gensctrue
[01016]                   	;----- cgbrtrue
[01017]                   	;----- cgbr
[01018] 048c: d4 00 00    	 				 call  dget16        ; test result on expression stack for short circuit
[01019] 048f: 9a          	 				 ghi   ra            ; get MSB from result
[01020] 0490: 52          	 				 str   r2            ; save in M(X)
[01021] 0491: 8a          	 				 glo   ra            ; get LSB from result
[01022] 0492: f1          	 				 or                  ; D = MSB | LSB
[01023] 0493: ca 04 a9    	 				 lbnz	L43           ; check for branch
[01024] 0496: d4 00 00    	 				 call  dpop16        ; remove short circuited value from expression stack
[01025]                   	;----- cgldga
[01026] 0499: d4 00 00    	 				call epush16
[01027] 049c: 00 02       	 				  dw Cv1
[01028]                   	;----- cgindb
[01029] 049e: d4 00 00    	 				call deref8
[01030]                   	;----- cglit
[01031] 04a1: d4 00 00    	 				call epush16
[01032] 04a4: 00 61       	 				  dw 97
[01033]                   	;----- queue_cmp
[01034]                   	;----- commit_cmp
[01035]                   	;----- cgne
[01036] 04a6: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01037]                   
[01038]                   
[01039]                   L43:
[01040]                   	;----- queue_bool
[01041]                   	;----- genbrfalse
[01042]                   	;----- genlogbr
[01043]                   	;----- cgbrfalse
[01044]                   	;----- cgbr
[01045] 04a9: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01046] 04ac: 9a          	 				 ghi   ra            ; get MSB from result
[01047] 04ad: 52          	 				 str   r2            ; save in M(X)
[01048] 04ae: 8a          	 				 glo   ra            ; get LSB from result
[01049] 04af: f1          	 				 or                  ; D = MSB | LSB
[01050] 04b0: c2 04 d0    	 				 lbz	L44           ; check for branch
[01051]                   	;----- begin stmt ------
[01052]                   	;---- queue lbr L46
[01053]                   	;----- cgjump
[01054] 04b3: c0 04 c0    	 				  lbr	L46
[01055]                   
[01056]                   L45:
[01057] 04b6: 6d 65 6d 6d   db 'memmove-1'    ;----- cgdefs
              6f 76 65 2d 
              31 
[01058] 04bf: 00          	db	$00    ;----- cgdefb
[01059]                   
[01060]                   L46:
[01061]                   	;----- cgldlab
[01062] 04c0: d4 00 00    	 				call epush16
[01063] 04c3: 04 b6       	 				  dw  L45
[01064]                   	;----- cgcall
[01065] 04c5: d4 00 98    	          call  Cfail
[01066]                   	;----- cgstack
[01067] 04c8: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01068] 04cb: 00 02       	          dw  2  ;--- offset
[01069] 04cd: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01070]                   	;---- queue dpush
[01071]                   	;----- push + pop data not required, data remains unchanged in RA
[01072]                   	;----- end stmt ------
[01073]                   
[01074]                   L44:
[01075]                   	;----- end if
[01076]                   	;----- end stmt ------
[01077]                   	;----- begin stmt ------
[01078]                   	;----- cglit
[01079] 04d0: d4 00 00    	 				call epush16
[01080] 04d3: 00 24       	 				  dw 36
[01081]                   	;----- cgldlw
[01082] 04d5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01083] 04d8: ff fe       	          dw  -2  ;--- offset
[01084]                   	;----- cgldga
[01085] 04da: d4 00 00    	 				call epush16
[01086] 04dd: 00 02       	 				  dw Cv1
[01087]                   	;----- cgcall
[01088] 04df: d4 00 00    	          call  Cmemcpy
[01089]                   	;----- cgstack
[01090] 04e2: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01091] 04e5: 00 06       	          dw  6  ;--- offset
[01092] 04e7: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01093]                   	;---- queue dpush
[01094]                   	;----- push + pop data not required, data remains unchanged in RA
[01095]                   	;----- end stmt ------
[01096]                   	;----- begin stmt ------
[01097]                   	;----- cglit
[01098] 04ea: d4 00 00    	 				call epush16
[01099] 04ed: 00 23       	 				  dw 35
[01100]                   	;----- cgldga
[01101] 04ef: d4 00 00    	 				call epush16
[01102] 04f2: 00 02       	 				  dw Cv1
[01103]                   	;----- cglit
[01104] 04f4: d4 00 00    	 				call epush16
[01105] 04f7: 00 01       	 				  dw 1
[01106]                   	;----- cgadd
[01107] 04f9: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01108]                   
[01109]                   	;----- cgldga
[01110] 04fc: d4 00 00    	 				call epush16
[01111] 04ff: 00 02       	 				  dw Cv1
[01112]                   	;----- cgcall
[01113] 0501: d4 00 00    	          call  Cmemmove
[01114]                   	;----- cgstack
[01115] 0504: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01116] 0507: 00 06       	          dw  6  ;--- offset
[01117] 0509: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01118]                   	;---- queue dpush
[01119]                   	;----- push + pop data not required, data remains unchanged in RA
[01120]                   	;----- end stmt ------
[01121]                   	;----- begin stmt ------
[01122]                   	;----- begin if
[01123]                   	;----- cglit
[01124] 050c: d4 00 00    	 				call epush16
[01125] 050f: 00 23       	 				  dw 35
[01126]                   	;----- cglit
[01127] 0511: d4 00 00    	 				call epush16
[01128] 0514: 00 01       	 				  dw 1
[01129]                   	;----- cgldlw
[01130] 0516: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01131] 0519: ff fe       	          dw  -2  ;--- offset
[01132]                   	;----- cgadd
[01133] 051b: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01134]                   
[01135]                   	;----- cgldga
[01136] 051e: d4 00 00    	 				call epush16
[01137] 0521: 00 02       	 				  dw Cv1
[01138]                   	;----- cgcall
[01139] 0523: d4 00 00    	          call  Cmemcmp
[01140]                   	;----- cgstack
[01141] 0526: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01142] 0529: 00 06       	          dw  6  ;--- offset
[01143] 052b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01144]                   	;---- queue dpush
[01145]                   	;------ commit push
[01146]                   	;----- cgpushd
[01147] 052e: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01148]                   	;----- gensctrue
[01149]                   	;----- cgbrtrue
[01150]                   	;----- cgbr
[01151] 0531: d4 00 00    	 				 call  dget16        ; test result on expression stack for short circuit
[01152] 0534: 9a          	 				 ghi   ra            ; get MSB from result
[01153] 0535: 52          	 				 str   r2            ; save in M(X)
[01154] 0536: 8a          	 				 glo   ra            ; get LSB from result
[01155] 0537: f1          	 				 or                  ; D = MSB | LSB
[01156] 0538: ca 05 56    	 				 lbnz	L47           ; check for branch
[01157] 053b: d4 00 00    	 				 call  dpop16        ; remove short circuited value from expression stack
[01158]                   	;----- cgldga
[01159] 053e: d4 00 00    	 				call epush16
[01160] 0541: 00 02       	 				  dw Cv1
[01161]                   	;----- cglit
[01162] 0543: d4 00 00    	 				call epush16
[01163] 0546: 00 23       	 				  dw 35
[01164]                   	;----- cgadd
[01165] 0548: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01166]                   
[01167]                   	;----- cgindb
[01168] 054b: d4 00 00    	 				call deref8
[01169]                   	;----- cglit
[01170] 054e: d4 00 00    	 				call epush16
[01171] 0551: 00 39       	 				  dw 57
[01172]                   	;----- queue_cmp
[01173]                   	;----- commit_cmp
[01174]                   	;----- cgne
[01175] 0553: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01176]                   
[01177]                   
[01178]                   L47:
[01179]                   	;----- queue_bool
[01180]                   	;----- genbrfalse
[01181]                   	;----- genlogbr
[01182]                   	;----- cgbrfalse
[01183]                   	;----- cgbr
[01184] 0556: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01185] 0559: 9a          	 				 ghi   ra            ; get MSB from result
[01186] 055a: 52          	 				 str   r2            ; save in M(X)
[01187] 055b: 8a          	 				 glo   ra            ; get LSB from result
[01188] 055c: f1          	 				 or                  ; D = MSB | LSB
[01189] 055d: c2 05 7d    	 				 lbz	L48           ; check for branch
[01190]                   	;----- begin stmt ------
[01191]                   	;---- queue lbr L50
[01192]                   	;----- cgjump
[01193] 0560: c0 05 6d    	 				  lbr	L50
[01194]                   
[01195]                   L49:
[01196] 0563: 6d 65 6d 6d   db 'memmove-2'    ;----- cgdefs
              6f 76 65 2d 
              32 
[01197] 056c: 00          	db	$00    ;----- cgdefb
[01198]                   
[01199]                   L50:
[01200]                   	;----- cgldlab
[01201] 056d: d4 00 00    	 				call epush16
[01202] 0570: 05 63       	 				  dw  L49
[01203]                   	;----- cgcall
[01204] 0572: d4 00 98    	          call  Cfail
[01205]                   	;----- cgstack
[01206] 0575: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01207] 0578: 00 02       	          dw  2  ;--- offset
[01208] 057a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01209]                   	;---- queue dpush
[01210]                   	;----- push + pop data not required, data remains unchanged in RA
[01211]                   	;----- end stmt ------
[01212]                   
[01213]                   L48:
[01214]                   	;----- end if
[01215]                   	;----- end stmt ------
[01216]                   	;----- begin stmt ------
[01217]                   	;---- queue lbr L52
[01218]                   	;----- cgjump
[01219] 057d: c0 05 87    	 				  lbr	L52
[01220]                   
[01221]                   L51:
[01222] 0580: 6d 65 6d 73   db 'memset'    ;----- cgdefs
              65 74 
[01223] 0586: 00          	db	$00    ;----- cgdefb
[01224]                   
[01225]                   L52:
[01226]                   	;----- cgldlab
[01227] 0587: d4 00 00    	 				call epush16
[01228] 058a: 05 80       	 				  dw  L51
[01229]                   	;----- cgcall
[01230] 058c: d4 00 e8    	          call  Cpr
[01231]                   	;----- cgstack
[01232] 058f: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01233] 0592: 00 02       	          dw  2  ;--- offset
[01234] 0594: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01235]                   	;---- queue dpush
[01236]                   	;----- push + pop data not required, data remains unchanged in RA
[01237]                   	;----- end stmt ------
[01238]                   	;----- begin stmt ------
[01239]                   	;----- begin for
[01240]                   	;----- cglit
[01241] 0597: d4 00 00    	 				call epush16
[01242] 059a: 00 00       	 				  dw 0
[01243]                   	;----- cgstorlw
[01244] 059c: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01245] 059f: ff f8       	          dw  -8  ;--- offset
[01246]                   	;----- cgpopd
[01247] 05a1: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01248]                   
[01249]                   L53:
[01250]                   	;----- cgldlw
[01251] 05a4: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01252] 05a7: ff f8       	          dw  -8  ;--- offset
[01253]                   	;----- cglit
[01254] 05a9: d4 00 00    	 				call epush16
[01255] 05ac: 00 40       	 				  dw 64
[01256]                   	;----- queue_cmp
[01257]                   	;----- genbrfalse
[01258]                   	;----- genbranch
[01259]                   	;----- cgbrlt
[01260]                   	;----- cglt
[01261] 05ae: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01262]                   
[01263]                   	;----- cgbrcond
[01264] 05b1: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01265] 05b4: 9a          	 				 ghi   ra            ; get MSB from result
[01266] 05b5: 52          	 				 str   r2            ; save in M(X)
[01267] 05b6: 8a          	 				 glo   ra            ; get LSB from result
[01268] 05b7: f1          	 				 or                  ; D = MSB | LSB
[01269] 05b8: ca 05 be    	lbnz	L57
[01270] 05bb: c0 05 f2    	lbr	L55
[01271]                   
[01272]                   L57:
[01273]                   	;---- queue lbr L54
[01274]                   	;----- cgjump
[01275] 05be: c0 05 d1    	 				  lbr	L54
[01276]                   
[01277]                   L56:
[01278]                   	;----- cgldlw
[01279] 05c1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01280] 05c4: ff f8       	          dw  -8  ;--- offset
[01281]                   	;----- cginclw
[01282] 05c6: d4 00 00    	          call  linc16       ; increment local variable
[01283] 05c9: ff f8       	          dw  -8  ;--- offset
[01284]                   	;----- cgpopd
[01285] 05cb: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01286]                   	;---- queue lbr L53
[01287]                   	;----- cgjump
[01288] 05ce: c0 05 a4    	 				  lbr	L53
[01289]                   
[01290]                   L54:
[01291]                   	;----- begin stmt ------
[01292]                   	;----- cgldga
[01293] 05d1: d4 00 00    	 				call epush16
[01294] 05d4: 00 02       	 				  dw Cv1
[01295]                   	;----- cgldlw
[01296] 05d6: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01297] 05d9: ff f8       	          dw  -8  ;--- offset
[01298]                   	;----- cgadd
[01299] 05db: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01300]                   
[01301]                   	;----- cglit
[01302] 05de: d4 00 00    	 				call epush16
[01303] 05e1: ff ff       	 				  dw -1
[01304]                   	;----- cgpopptr
[01305] 05e3: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[01306] 05e6: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[01307]                   	;----- cgstorib
[01308] 05e9: d4 00 00    	          call  pstor8       ; store value from ES in pointer variable
[01309]                   	;----- cgpopd
[01310] 05ec: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01311]                   	;----- end stmt ------
[01312]                   	;---- queue lbr L56
[01313]                   	;----- cgjump
[01314] 05ef: c0 05 c1    	 				  lbr	L56
[01315]                   
[01316]                   L55:
[01317]                   	;----- end for
[01318]                   	;----- end stmt ------
[01319]                   	;----- begin stmt ------
[01320]                   	;----- cglit
[01321] 05f2: d4 00 00    	 				call epush16
[01322] 05f5: 00 20       	 				  dw 32
[01323]                   	;----- cglit
[01324] 05f7: d4 00 00    	 				call epush16
[01325] 05fa: 00 00       	 				  dw 0
[01326]                   	;----- cgldga
[01327] 05fc: d4 00 00    	 				call epush16
[01328] 05ff: 00 02       	 				  dw Cv1
[01329]                   	;----- cgcall
[01330] 0601: d4 00 00    	          call  Cmemset
[01331]                   	;----- cgstack
[01332] 0604: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01333] 0607: 00 06       	          dw  6  ;--- offset
[01334] 0609: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01335]                   	;---- queue dpush
[01336]                   	;----- push + pop data not required, data remains unchanged in RA
[01337]                   	;----- end stmt ------
[01338]                   	;----- begin stmt ------
[01339]                   	;----- begin if
[01340]                   	;----- cgldga
[01341] 060c: d4 00 00    	 				call epush16
[01342] 060f: 00 02       	 				  dw Cv1
[01343]                   	;----- cglit
[01344] 0611: d4 00 00    	 				call epush16
[01345] 0614: 00 1f       	 				  dw 31
[01346]                   	;----- cgadd
[01347] 0616: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01348]                   
[01349]                   	;----- cgindb
[01350] 0619: d4 00 00    	 				call deref8
[01351]                   	;----- genbrfalse
[01352]                   	;----- cgbrfalse
[01353]                   	;----- cgbr
[01354] 061c: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01355] 061f: 9a          	 				 ghi   ra            ; get MSB from result
[01356] 0620: 52          	 				 str   r2            ; save in M(X)
[01357] 0621: 8a          	 				 glo   ra            ; get LSB from result
[01358] 0622: f1          	 				 or                  ; D = MSB | LSB
[01359] 0623: c2 06 42    	 				 lbz	L58           ; check for branch
[01360]                   	;----- begin stmt ------
[01361]                   	;---- queue lbr L60
[01362]                   	;----- cgjump
[01363] 0626: c0 06 32    	 				  lbr	L60
[01364]                   
[01365]                   L59:
[01366] 0629: 6d 65 6d 73   db 'memset-1'    ;----- cgdefs
              65 74 2d 31 
[01367] 0631: 00          	db	$00    ;----- cgdefb
[01368]                   
[01369]                   L60:
[01370]                   	;----- cgldlab
[01371] 0632: d4 00 00    	 				call epush16
[01372] 0635: 06 29       	 				  dw  L59
[01373]                   	;----- cgcall
[01374] 0637: d4 00 98    	          call  Cfail
[01375]                   	;----- cgstack
[01376] 063a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01377] 063d: 00 02       	          dw  2  ;--- offset
[01378] 063f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01379]                   	;---- queue dpush
[01380]                   	;----- push + pop data not required, data remains unchanged in RA
[01381]                   	;----- end stmt ------
[01382]                   
[01383]                   L58:
[01384]                   	;----- end if
[01385]                   	;----- end stmt ------
[01386]                   	;----- begin stmt ------
[01387]                   	;----- begin if
[01388]                   	;----- cgldga
[01389] 0642: d4 00 00    	 				call epush16
[01390] 0645: 00 02       	 				  dw Cv1
[01391]                   	;----- cglit
[01392] 0647: d4 00 00    	 				call epush16
[01393] 064a: 00 20       	 				  dw 32
[01394]                   	;----- cgadd
[01395] 064c: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01396]                   
[01397]                   	;----- cgindb
[01398] 064f: d4 00 00    	 				call deref8
[01399]                   	;----- queue_bool
[01400]                   	;----- genbrfalse
[01401]                   	;----- genlogbr
[01402]                   	;----- cgbrtrue
[01403]                   	;----- cgbr
[01404] 0652: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01405] 0655: 9a          	 				 ghi   ra            ; get MSB from result
[01406] 0656: 52          	 				 str   r2            ; save in M(X)
[01407] 0657: 8a          	 				 glo   ra            ; get LSB from result
[01408] 0658: f1          	 				 or                  ; D = MSB | LSB
[01409] 0659: ca 06 78    	 				 lbnz	L61           ; check for branch
[01410]                   	;----- begin stmt ------
[01411]                   	;---- queue lbr L63
[01412]                   	;----- cgjump
[01413] 065c: c0 06 68    	 				  lbr	L63
[01414]                   
[01415]                   L62:
[01416] 065f: 6d 65 6d 73   db 'memset-2'    ;----- cgdefs
              65 74 2d 32 
[01417] 0667: 00          	db	$00    ;----- cgdefb
[01418]                   
[01419]                   L63:
[01420]                   	;----- cgldlab
[01421] 0668: d4 00 00    	 				call epush16
[01422] 066b: 06 5f       	 				  dw  L62
[01423]                   	;----- cgcall
[01424] 066d: d4 00 98    	          call  Cfail
[01425]                   	;----- cgstack
[01426] 0670: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01427] 0673: 00 02       	          dw  2  ;--- offset
[01428] 0675: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01429]                   	;---- queue dpush
[01430]                   	;----- push + pop data not required, data remains unchanged in RA
[01431]                   	;----- end stmt ------
[01432]                   
[01433]                   L61:
[01434]                   	;----- end if
[01435]                   	;----- end stmt ------
[01436]                   	;----- begin stmt ------
[01437]                   	;----- begin for
[01438]                   	;----- cglit
[01439] 0678: d4 00 00    	 				call epush16
[01440] 067b: 00 00       	 				  dw 0
[01441]                   	;----- cgstorlw
[01442] 067d: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01443] 0680: ff f8       	          dw  -8  ;--- offset
[01444]                   	;----- cgpopd
[01445] 0682: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01446]                   
[01447]                   L64:
[01448]                   	;----- cgldlw
[01449] 0685: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01450] 0688: ff f8       	          dw  -8  ;--- offset
[01451]                   	;----- cglit
[01452] 068a: d4 00 00    	 				call epush16
[01453] 068d: 00 80       	 				  dw 128
[01454]                   	;----- queue_cmp
[01455]                   	;----- genbrfalse
[01456]                   	;----- genbranch
[01457]                   	;----- cgbrlt
[01458]                   	;----- cglt
[01459] 068f: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01460]                   
[01461]                   	;----- cgbrcond
[01462] 0692: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01463] 0695: 9a          	 				 ghi   ra            ; get MSB from result
[01464] 0696: 52          	 				 str   r2            ; save in M(X)
[01465] 0697: 8a          	 				 glo   ra            ; get LSB from result
[01466] 0698: f1          	 				 or                  ; D = MSB | LSB
[01467] 0699: ca 06 9f    	lbnz	L68
[01468] 069c: c0 06 d3    	lbr	L66
[01469]                   
[01470]                   L68:
[01471]                   	;---- queue lbr L65
[01472]                   	;----- cgjump
[01473] 069f: c0 06 b2    	 				  lbr	L65
[01474]                   
[01475]                   L67:
[01476]                   	;----- cgldlw
[01477] 06a2: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01478] 06a5: ff f8       	          dw  -8  ;--- offset
[01479]                   	;----- cginclw
[01480] 06a7: d4 00 00    	          call  linc16       ; increment local variable
[01481] 06aa: ff f8       	          dw  -8  ;--- offset
[01482]                   	;----- cgpopd
[01483] 06ac: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01484]                   	;---- queue lbr L64
[01485]                   	;----- cgjump
[01486] 06af: c0 06 85    	 				  lbr	L64
[01487]                   
[01488]                   L65:
[01489]                   	;----- begin stmt ------
[01490]                   	;----- cgldga
[01491] 06b2: d4 00 00    	 				call epush16
[01492] 06b5: 00 02       	 				  dw Cv1
[01493]                   	;----- cgldlw
[01494] 06b7: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01495] 06ba: ff f8       	          dw  -8  ;--- offset
[01496]                   	;----- cgadd
[01497] 06bc: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01498]                   
[01499]                   	;----- cglit
[01500] 06bf: d4 00 00    	 				call epush16
[01501] 06c2: ff ff       	 				  dw -1
[01502]                   	;----- cgpopptr
[01503] 06c4: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[01504] 06c7: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[01505]                   	;----- cgstorib
[01506] 06ca: d4 00 00    	          call  pstor8       ; store value from ES in pointer variable
[01507]                   	;----- cgpopd
[01508] 06cd: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01509]                   	;----- end stmt ------
[01510]                   	;---- queue lbr L67
[01511]                   	;----- cgjump
[01512] 06d0: c0 06 a2    	 				  lbr	L67
[01513]                   
[01514]                   L66:
[01515]                   	;----- end for
[01516]                   	;----- end stmt ------
[01517]                   	;----- begin stmt ------
[01518]                   	;----- cglit
[01519] 06d3: d4 00 00    	 				call epush16
[01520] 06d6: 00 20       	 				  dw 32
[01521]                   	;----- cglit
[01522] 06d8: d4 00 00    	 				call epush16
[01523] 06db: 00 7b       	 				  dw 123
[01524]                   	;----- cgldga
[01525] 06dd: d4 00 00    	 				call epush16
[01526] 06e0: 00 02       	 				  dw Cv1
[01527]                   	;----- cgcall
[01528] 06e2: d4 00 00    	          call  Cmemset
[01529]                   	;----- cgstack
[01530] 06e5: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01531] 06e8: 00 06       	          dw  6  ;--- offset
[01532] 06ea: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01533]                   	;---- queue dpush
[01534]                   	;----- push + pop data not required, data remains unchanged in RA
[01535]                   	;----- end stmt ------
[01536]                   	;----- begin stmt ------
[01537]                   	;----- begin if
[01538]                   	;----- cgldga
[01539] 06ed: d4 00 00    	 				call epush16
[01540] 06f0: 00 02       	 				  dw Cv1
[01541]                   	;----- cglit
[01542] 06f2: d4 00 00    	 				call epush16
[01543] 06f5: 00 1f       	 				  dw 31
[01544]                   	;----- cgadd
[01545] 06f7: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01546]                   
[01547]                   	;----- cgindb
[01548] 06fa: d4 00 00    	 				call deref8
[01549]                   	;----- cglit
[01550] 06fd: d4 00 00    	 				call epush16
[01551] 0700: 00 7b       	 				  dw 123
[01552]                   	;----- queue_cmp
[01553]                   	;----- genbrfalse
[01554]                   	;----- genbranch
[01555]                   	;----- cgbrne
[01556]                   	;----- cgne
[01557] 0702: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01558]                   
[01559]                   	;----- cgbrcond
[01560] 0705: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01561] 0708: 9a          	 				 ghi   ra            ; get MSB from result
[01562] 0709: 52          	 				 str   r2            ; save in M(X)
[01563] 070a: 8a          	 				 glo   ra            ; get LSB from result
[01564] 070b: f1          	 				 or                  ; D = MSB | LSB
[01565] 070c: ca 07 12    	lbnz	L70
[01566] 070f: c0 07 2e    	lbr	L69
[01567]                   
[01568]                   L70:
[01569]                   	;----- begin stmt ------
[01570]                   	;---- queue lbr L72
[01571]                   	;----- cgjump
[01572] 0712: c0 07 1e    	 				  lbr	L72
[01573]                   
[01574]                   L71:
[01575] 0715: 6d 65 6d 73   db 'memset-3'    ;----- cgdefs
              65 74 2d 33 
[01576] 071d: 00          	db	$00    ;----- cgdefb
[01577]                   
[01578]                   L72:
[01579]                   	;----- cgldlab
[01580] 071e: d4 00 00    	 				call epush16
[01581] 0721: 07 15       	 				  dw  L71
[01582]                   	;----- cgcall
[01583] 0723: d4 00 98    	          call  Cfail
[01584]                   	;----- cgstack
[01585] 0726: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01586] 0729: 00 02       	          dw  2  ;--- offset
[01587] 072b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01588]                   	;---- queue dpush
[01589]                   	;----- push + pop data not required, data remains unchanged in RA
[01590]                   	;----- end stmt ------
[01591]                   
[01592]                   L69:
[01593]                   	;----- end if
[01594]                   	;----- end stmt ------
[01595]                   	;----- begin stmt ------
[01596]                   	;----- begin if
[01597]                   	;----- cgldga
[01598] 072e: d4 00 00    	 				call epush16
[01599] 0731: 00 02       	 				  dw Cv1
[01600]                   	;----- cglit
[01601] 0733: d4 00 00    	 				call epush16
[01602] 0736: 00 20       	 				  dw 32
[01603]                   	;----- cgadd
[01604] 0738: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01605]                   
[01606]                   	;----- cgindb
[01607] 073b: d4 00 00    	 				call deref8
[01608]                   	;----- cglit
[01609] 073e: d4 00 00    	 				call epush16
[01610] 0741: 00 7b       	 				  dw 123
[01611]                   	;----- queue_cmp
[01612]                   	;----- genbrfalse
[01613]                   	;----- genbranch
[01614]                   	;----- cgbreq
[01615]                   	;----- cgeq
[01616] 0743: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[01617]                   
[01618]                   	;----- cgbrcond
[01619] 0746: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01620] 0749: 9a          	 				 ghi   ra            ; get MSB from result
[01621] 074a: 52          	 				 str   r2            ; save in M(X)
[01622] 074b: 8a          	 				 glo   ra            ; get LSB from result
[01623] 074c: f1          	 				 or                  ; D = MSB | LSB
[01624] 074d: ca 07 53    	lbnz	L74
[01625] 0750: c0 07 6f    	lbr	L73
[01626]                   
[01627]                   L74:
[01628]                   	;----- begin stmt ------
[01629]                   	;---- queue lbr L76
[01630]                   	;----- cgjump
[01631] 0753: c0 07 5f    	 				  lbr	L76
[01632]                   
[01633]                   L75:
[01634] 0756: 6d 65 6d 73   db 'memset-4'    ;----- cgdefs
              65 74 2d 34 
[01635] 075e: 00          	db	$00    ;----- cgdefb
[01636]                   
[01637]                   L76:
[01638]                   	;----- cgldlab
[01639] 075f: d4 00 00    	 				call epush16
[01640] 0762: 07 56       	 				  dw  L75
[01641]                   	;----- cgcall
[01642] 0764: d4 00 98    	          call  Cfail
[01643]                   	;----- cgstack
[01644] 0767: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01645] 076a: 00 02       	          dw  2  ;--- offset
[01646] 076c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01647]                   	;---- queue dpush
[01648]                   	;----- push + pop data not required, data remains unchanged in RA
[01649]                   	;----- end stmt ------
[01650]                   
[01651]                   L73:
[01652]                   	;----- end if
[01653]                   	;----- end stmt ------
[01654]                   	;----- begin stmt ------
[01655]                   	;---- queue lbr L78
[01656]                   	;----- cgjump
[01657] 076f: c0 07 79    	 				  lbr	L78
[01658]                   
[01659]                   L77:
[01660] 0772: 6d 65 6d 63   db 'memchr'    ;----- cgdefs
              68 72 
[01661] 0778: 00          	db	$00    ;----- cgdefb
[01662]                   
[01663]                   L78:
[01664]                   	;----- cgldlab
[01665] 0779: d4 00 00    	 				call epush16
[01666] 077c: 07 72       	 				  dw  L77
[01667]                   	;----- cgcall
[01668] 077e: d4 00 e8    	          call  Cpr
[01669]                   	;----- cgstack
[01670] 0781: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01671] 0784: 00 02       	          dw  2  ;--- offset
[01672] 0786: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01673]                   	;---- queue dpush
[01674]                   	;----- push + pop data not required, data remains unchanged in RA
[01675]                   	;----- end stmt ------
[01676]                   	;----- begin stmt ------
[01677]                   	;---- queue lbr L80
[01678]                   	;----- cgjump
[01679] 0789: c0 07 9e    	 				  lbr	L80
[01680]                   
[01681]                   L79:
[01682] 078c: 2e 2e 2e 2e   db '...............X1'    ;----- cgdefs
              2e 2e 2e 2e 
              2e 2e 2e 2e 
              2e 2e 2e 58 
              31 
[01683] 079d: 00          	db	$00    ;----- cgdefb
[01684]                   
[01685]                   L80:
[01686]                   	;----- cgldlab
[01687] 079e: d4 00 00    	 				call epush16
[01688] 07a1: 07 8c       	 				  dw  L79
[01689]                   	;----- cgstorlw
[01690] 07a3: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01691] 07a6: ff fe       	          dw  -2  ;--- offset
[01692]                   	;----- cgpopd
[01693] 07a8: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01694]                   	;----- end stmt ------
[01695]                   	;----- begin stmt ------
[01696]                   	;----- cglit
[01697] 07ab: d4 00 00    	 				call epush16
[01698] 07ae: 00 10       	 				  dw 16
[01699]                   	;----- cglit
[01700] 07b0: d4 00 00    	 				call epush16
[01701] 07b3: 00 58       	 				  dw 88
[01702]                   	;----- cgldlw
[01703] 07b5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01704] 07b8: ff fe       	          dw  -2  ;--- offset
[01705]                   	;----- cgcall
[01706] 07ba: d4 00 00    	          call  Cmemchr
[01707]                   	;----- cgstack
[01708] 07bd: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01709] 07c0: 00 06       	          dw  6  ;--- offset
[01710] 07c2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01711]                   	;---- queue dpush
[01712]                   	;------ commit push
[01713]                   	;----- cgpushd
[01714] 07c5: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01715]                   	;----- cgstorlw
[01716] 07c8: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01717] 07cb: ff fa       	          dw  -6  ;--- offset
[01718]                   	;----- cgpopd
[01719] 07cd: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01720]                   	;----- end stmt ------
[01721]                   	;----- begin stmt ------
[01722]                   	;----- begin if
[01723]                   	;----- cgldlw
[01724] 07d0: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01725] 07d3: ff fa       	          dw  -6  ;--- offset
[01726]                   	;----- queue_bool
[01727]                   	;----- commit_bool
[01728]                   	;----- commit_bool Q_bool = 1
[01729]                   	;----- cglognot
[01730] 07d5: d4 00 00    	          call  not16				 ; logical not TOS on Expression Stack
[01731]                   
[01732]                   	;----- gensctrue
[01733]                   	;----- cgbrtrue
[01734]                   	;----- cgbr
[01735] 07d8: d4 00 00    	 				 call  dget16        ; test result on expression stack for short circuit
[01736] 07db: 9a          	 				 ghi   ra            ; get MSB from result
[01737] 07dc: 52          	 				 str   r2            ; save in M(X)
[01738] 07dd: 8a          	 				 glo   ra            ; get LSB from result
[01739] 07de: f1          	 				 or                  ; D = MSB | LSB
[01740] 07df: ca 08 1a    	 				 lbnz	L81           ; check for branch
[01741] 07e2: d4 00 00    	 				 call  dpop16        ; remove short circuited value from expression stack
[01742]                   	;----- cgldlw
[01743] 07e5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01744] 07e8: ff fa       	          dw  -6  ;--- offset
[01745]                   	;----- cgindb
[01746] 07ea: d4 00 00    	 				call deref8
[01747]                   	;----- cglit
[01748] 07ed: d4 00 00    	 				call epush16
[01749] 07f0: 00 58       	 				  dw 88
[01750]                   	;----- queue_cmp
[01751]                   	;----- commit_cmp
[01752]                   	;----- cgne
[01753] 07f2: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01754]                   
[01755]                   	;----- gensctrue
[01756]                   	;----- cgbrtrue
[01757]                   	;----- cgbr
[01758] 07f5: d4 00 00    	 				 call  dget16        ; test result on expression stack for short circuit
[01759] 07f8: 9a          	 				 ghi   ra            ; get MSB from result
[01760] 07f9: 52          	 				 str   r2            ; save in M(X)
[01761] 07fa: 8a          	 				 glo   ra            ; get LSB from result
[01762] 07fb: f1          	 				 or                  ; D = MSB | LSB
[01763] 07fc: ca 08 1a    	 				 lbnz	L81           ; check for branch
[01764] 07ff: d4 00 00    	 				 call  dpop16        ; remove short circuited value from expression stack
[01765]                   	;----- cglit
[01766] 0802: d4 00 00    	 				call epush16
[01767] 0805: 00 01       	 				  dw 1
[01768]                   	;----- cgldlw
[01769] 0807: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01770] 080a: ff fa       	          dw  -6  ;--- offset
[01771]                   	;----- cgadd
[01772] 080c: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01773]                   
[01774]                   	;----- cgindb
[01775] 080f: d4 00 00    	 				call deref8
[01776]                   	;----- cglit
[01777] 0812: d4 00 00    	 				call epush16
[01778] 0815: 00 31       	 				  dw 49
[01779]                   	;----- queue_cmp
[01780]                   	;----- commit_cmp
[01781]                   	;----- cgne
[01782] 0817: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01783]                   
[01784]                   
[01785]                   L81:
[01786]                   	;----- queue_bool
[01787]                   	;----- genbrfalse
[01788]                   	;----- genlogbr
[01789]                   	;----- cgbrfalse
[01790]                   	;----- cgbr
[01791] 081a: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01792] 081d: 9a          	 				 ghi   ra            ; get MSB from result
[01793] 081e: 52          	 				 str   r2            ; save in M(X)
[01794] 081f: 8a          	 				 glo   ra            ; get LSB from result
[01795] 0820: f1          	 				 or                  ; D = MSB | LSB
[01796] 0821: c2 08 40    	 				 lbz	L82           ; check for branch
[01797]                   	;----- begin stmt ------
[01798]                   	;---- queue lbr L84
[01799]                   	;----- cgjump
[01800] 0824: c0 08 30    	 				  lbr	L84
[01801]                   
[01802]                   L83:
[01803] 0827: 6d 65 6d 63   db 'memchr-1'    ;----- cgdefs
              68 72 2d 31 
[01804] 082f: 00          	db	$00    ;----- cgdefb
[01805]                   
[01806]                   L84:
[01807]                   	;----- cgldlab
[01808] 0830: d4 00 00    	 				call epush16
[01809] 0833: 08 27       	 				  dw  L83
[01810]                   	;----- cgcall
[01811] 0835: d4 00 98    	          call  Cfail
[01812]                   	;----- cgstack
[01813] 0838: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01814] 083b: 00 02       	          dw  2  ;--- offset
[01815] 083d: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01816]                   	;---- queue dpush
[01817]                   	;----- push + pop data not required, data remains unchanged in RA
[01818]                   	;----- end stmt ------
[01819]                   
[01820]                   L82:
[01821]                   	;----- end if
[01822]                   	;----- end stmt ------
[01823]                   	;----- begin stmt ------
[01824]                   	;----- begin if
[01825]                   	;----- cglit
[01826] 0840: d4 00 00    	 				call epush16
[01827] 0843: 00 0f       	 				  dw 15
[01828]                   	;----- cglit
[01829] 0845: d4 00 00    	 				call epush16
[01830] 0848: 00 58       	 				  dw 88
[01831]                   	;----- cgldlw
[01832] 084a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01833] 084d: ff fe       	          dw  -2  ;--- offset
[01834]                   	;----- cgcall
[01835] 084f: d4 00 00    	          call  Cmemchr
[01836]                   	;----- cgstack
[01837] 0852: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01838] 0855: 00 06       	          dw  6  ;--- offset
[01839] 0857: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01840]                   	;---- queue dpush
[01841]                   	;------ commit push
[01842]                   	;----- cgpushd
[01843] 085a: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01844]                   	;----- cglit
[01845] 085d: d4 00 00    	 				call epush16
[01846] 0860: 00 00       	 				  dw 0
[01847]                   	;----- queue_cmp
[01848]                   	;----- genbrfalse
[01849]                   	;----- genbranch
[01850]                   	;----- cgbrne
[01851]                   	;----- cgne
[01852] 0862: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01853]                   
[01854]                   	;----- cgbrcond
[01855] 0865: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01856] 0868: 9a          	 				 ghi   ra            ; get MSB from result
[01857] 0869: 52          	 				 str   r2            ; save in M(X)
[01858] 086a: 8a          	 				 glo   ra            ; get LSB from result
[01859] 086b: f1          	 				 or                  ; D = MSB | LSB
[01860] 086c: ca 08 72    	lbnz	L86
[01861] 086f: c0 08 8e    	lbr	L85
[01862]                   
[01863]                   L86:
[01864]                   	;----- begin stmt ------
[01865]                   	;---- queue lbr L88
[01866]                   	;----- cgjump
[01867] 0872: c0 08 7e    	 				  lbr	L88
[01868]                   
[01869]                   L87:
[01870] 0875: 6d 65 6d 63   db 'memchr-2'    ;----- cgdefs
              68 72 2d 32 
[01871] 087d: 00          	db	$00    ;----- cgdefb
[01872]                   
[01873]                   L88:
[01874]                   	;----- cgldlab
[01875] 087e: d4 00 00    	 				call epush16
[01876] 0881: 08 75       	 				  dw  L87
[01877]                   	;----- cgcall
[01878] 0883: d4 00 98    	          call  Cfail
[01879]                   	;----- cgstack
[01880] 0886: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01881] 0889: 00 02       	          dw  2  ;--- offset
[01882] 088b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01883]                   	;---- queue dpush
[01884]                   	;----- push + pop data not required, data remains unchanged in RA
[01885]                   	;----- end stmt ------
[01886]                   
[01887]                   L85:
[01888]                   	;----- end if
[01889]                   	;----- end stmt ------
[01890]                   
[01891]                   L7:
[01892]                   	;----- cgstack
[01893] 088e: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01894] 0891: 00 08       	          dw  8  ;--- offset
[01895] 0893: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01896]                   	;----- cgexit
[01897] 0896: e2          	          sex   r2            ; make sure X = SP
[01898] 0897: d4 00 00    	          call  escheck       ; check for expression stack creep
[01899] 089a: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[01900]                   
[01901] 089f: d5          	          rtn	  			 	     ; return to caller
[01902]                   	;----- cgpublic
[01903] 08a0:             	              public Ctest_dmem
[01904]                   Ctest_dmem:	;---- cgentry
[01905] 08a0: e2          	          sex   r2   				 ; make sure X = SP
[01906] 08a1: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[01907] 08a5: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[01908]                   	;----- cgstack
[01909] 08a9: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01910] 08ac: ff fa       	          dw  -6  ;--- offset
[01911] 08ae: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01912]                   	;----- begin stmt ------
[01913]                   	;---- queue lbr L91
[01914]                   	;----- cgjump
[01915] 08b1: c0 08 bb    	 				  lbr	L91
[01916]                   
[01917]                   L90:
[01918] 08b4: 6d 61 6c 6c   db 'malloc'    ;----- cgdefs
              6f 63 
[01919] 08ba: 00          	db	$00    ;----- cgdefb
[01920]                   
[01921]                   L91:
[01922]                   	;----- cgldlab
[01923] 08bb: d4 00 00    	 				call epush16
[01924] 08be: 08 b4       	 				  dw  L90
[01925]                   	;----- cgcall
[01926] 08c0: d4 00 e8    	          call  Cpr
[01927]                   	;----- cgstack
[01928] 08c3: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01929] 08c6: 00 02       	          dw  2  ;--- offset
[01930] 08c8: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01931]                   	;---- queue dpush
[01932]                   	;----- push + pop data not required, data remains unchanged in RA
[01933]                   	;----- end stmt ------
[01934]                   	;----- begin stmt ------
[01935]                   	;----- begin for
[01936]                   	;----- cglit
[01937] 08cb: d4 00 00    	 				call epush16
[01938] 08ce: 00 00       	 				  dw 0
[01939]                   	;----- cgstorlw
[01940] 08d0: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01941] 08d3: ff fc       	          dw  -4  ;--- offset
[01942]                   	;----- cgpopd
[01943] 08d5: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01944]                   
[01945]                   L92:
[01946]                   	;----- cgldlw
[01947] 08d8: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01948] 08db: ff fc       	          dw  -4  ;--- offset
[01949]                   	;----- cglit
[01950] 08dd: d4 00 00    	 				call epush16
[01951] 08e0: 00 0a       	 				  dw 10
[01952]                   	;----- queue_cmp
[01953]                   	;----- genbrfalse
[01954]                   	;----- genbranch
[01955]                   	;----- cgbrlt
[01956]                   	;----- cglt
[01957] 08e2: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01958]                   
[01959]                   	;----- cgbrcond
[01960] 08e5: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01961] 08e8: 9a          	 				 ghi   ra            ; get MSB from result
[01962] 08e9: 52          	 				 str   r2            ; save in M(X)
[01963] 08ea: 8a          	 				 glo   ra            ; get LSB from result
[01964] 08eb: f1          	 				 or                  ; D = MSB | LSB
[01965] 08ec: ca 08 f2    	lbnz	L96
[01966] 08ef: c0 09 b5    	lbr	L94
[01967]                   
[01968]                   L96:
[01969]                   	;---- queue lbr L93
[01970]                   	;----- cgjump
[01971] 08f2: c0 09 05    	 				  lbr	L93
[01972]                   
[01973]                   L95:
[01974]                   	;----- cgldlw
[01975] 08f5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01976] 08f8: ff fc       	          dw  -4  ;--- offset
[01977]                   	;----- cginclw
[01978] 08fa: d4 00 00    	          call  linc16       ; increment local variable
[01979] 08fd: ff fc       	          dw  -4  ;--- offset
[01980]                   	;----- cgpopd
[01981] 08ff: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01982]                   	;---- queue lbr L92
[01983]                   	;----- cgjump
[01984] 0902: c0 08 d8    	 				  lbr	L92
[01985]                   
[01986]                   L93:
[01987]                   	;----- begin stmt ------
[01988]                   	;----- begin stmt ------
[01989]                   	;----- begin if
[01990]                   	;----- cgldga
[01991] 0905: d4 00 00    	 				call epush16
[01992] 0908: 00 42       	 				  dw Csegp
[01993]                   	;----- cgldlw
[01994] 090a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01995] 090d: ff fc       	          dw  -4  ;--- offset
[01996]                   	;----- cgscale
[01997] 090f: d4 00 00    	 				call scltos2
[01998]                   	;----- cgadd
[01999] 0912: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02000]                   
[02001]                   	;----- cglit
[02002] 0915: d4 00 00    	 				call epush16
[02003] 0918: 00 40       	 				  dw 64
[02004]                   	;----- cgcall
[02005] 091a: d4 00 00    	          call  Cmalloc
[02006]                   	;----- cgstack
[02007] 091d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02008] 0920: 00 02       	          dw  2  ;--- offset
[02009] 0922: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02010]                   	;---- queue dpush
[02011]                   	;------ commit push
[02012]                   	;----- cgpushd
[02013] 0925: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02014]                   	;----- cgpopptr
[02015] 0928: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[02016] 092b: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[02017]                   	;----- cgstoriw
[02018] 092e: d4 00 00    	          call  pstor16       ; store value from ES in pointer variable
[02019]                   	;----- cglit
[02020] 0931: d4 00 00    	 				call epush16
[02021] 0934: 00 00       	 				  dw 0
[02022]                   	;----- queue_cmp
[02023]                   	;----- genbrfalse
[02024]                   	;----- genbranch
[02025]                   	;----- cgbreq
[02026]                   	;----- cgeq
[02027] 0936: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[02028]                   
[02029]                   	;----- cgbrcond
[02030] 0939: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02031] 093c: 9a          	 				 ghi   ra            ; get MSB from result
[02032] 093d: 52          	 				 str   r2            ; save in M(X)
[02033] 093e: 8a          	 				 glo   ra            ; get LSB from result
[02034] 093f: f1          	 				 or                  ; D = MSB | LSB
[02035] 0940: ca 09 46    	lbnz	L98
[02036] 0943: c0 09 49    	lbr	L97
[02037]                   
[02038]                   L98:
[02039]                   	;----- begin stmt ------
[02040]                   	;----- begin break
[02041]                   	;---- queue lbr L94
[02042]                   	;----- end break
[02043]                   	;----- end stmt ------
[02044]                   	;----- cgjump
[02045] 0946: c0 09 b5    	 				  lbr	L94
[02046]                   
[02047]                   L97:
[02048]                   	;----- end if
[02049]                   	;----- end stmt ------
[02050]                   	;----- begin stmt ------
[02051]                   	;----- begin for
[02052]                   	;----- cglit
[02053] 0949: d4 00 00    	 				call epush16
[02054] 094c: 00 00       	 				  dw 0
[02055]                   	;----- cgstorlw
[02056] 094e: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02057] 0951: ff fa       	          dw  -6  ;--- offset
[02058]                   	;----- cgpopd
[02059] 0953: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02060]                   
[02061]                   L99:
[02062]                   	;----- cgldlw
[02063] 0956: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02064] 0959: ff fa       	          dw  -6  ;--- offset
[02065]                   	;----- cglit
[02066] 095b: d4 00 00    	 				call epush16
[02067] 095e: 00 40       	 				  dw 64
[02068]                   	;----- queue_cmp
[02069]                   	;----- genbrfalse
[02070]                   	;----- genbranch
[02071]                   	;----- cgbrlt
[02072]                   	;----- cglt
[02073] 0960: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02074]                   
[02075]                   	;----- cgbrcond
[02076] 0963: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02077] 0966: 9a          	 				 ghi   ra            ; get MSB from result
[02078] 0967: 52          	 				 str   r2            ; save in M(X)
[02079] 0968: 8a          	 				 glo   ra            ; get LSB from result
[02080] 0969: f1          	 				 or                  ; D = MSB | LSB
[02081] 096a: ca 09 70    	lbnz	L103
[02082] 096d: c0 09 b2    	lbr	L101
[02083]                   
[02084]                   L103:
[02085]                   	;---- queue lbr L100
[02086]                   	;----- cgjump
[02087] 0970: c0 09 83    	 				  lbr	L100
[02088]                   
[02089]                   L102:
[02090]                   	;----- cgldlw
[02091] 0973: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02092] 0976: ff fa       	          dw  -6  ;--- offset
[02093]                   	;----- cginclw
[02094] 0978: d4 00 00    	          call  linc16       ; increment local variable
[02095] 097b: ff fa       	          dw  -6  ;--- offset
[02096]                   	;----- cgpopd
[02097] 097d: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02098]                   	;---- queue lbr L99
[02099]                   	;----- cgjump
[02100] 0980: c0 09 56    	 				  lbr	L99
[02101]                   
[02102]                   L100:
[02103]                   	;----- begin stmt ------
[02104]                   	;----- cgldga
[02105] 0983: d4 00 00    	 				call epush16
[02106] 0986: 00 42       	 				  dw Csegp
[02107]                   	;----- cgldlw
[02108] 0988: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02109] 098b: ff fc       	          dw  -4  ;--- offset
[02110]                   	;----- cgscale
[02111] 098d: d4 00 00    	 				call scltos2
[02112]                   	;----- cgadd
[02113] 0990: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02114]                   
[02115]                   	;----- cgindw
[02116] 0993: d4 00 00    	 				call deref16
[02117]                   	;----- cgldlw
[02118] 0996: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02119] 0999: ff fa       	          dw  -6  ;--- offset
[02120]                   	;----- cgadd
[02121] 099b: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02122]                   
[02123]                   	;----- cgldlw
[02124] 099e: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02125] 09a1: ff fc       	          dw  -4  ;--- offset
[02126]                   	;----- cgpopptr
[02127] 09a3: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[02128] 09a6: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[02129]                   	;----- cgstorib
[02130] 09a9: d4 00 00    	          call  pstor8       ; store value from ES in pointer variable
[02131]                   	;----- cgpopd
[02132] 09ac: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02133]                   	;----- end stmt ------
[02134]                   	;---- queue lbr L102
[02135]                   	;----- cgjump
[02136] 09af: c0 09 73    	 				  lbr	L102
[02137]                   
[02138]                   L101:
[02139]                   	;----- end for
[02140]                   	;----- end stmt ------
[02141]                   	;----- end stmt ------
[02142]                   	;---- queue lbr L95
[02143]                   	;----- cgjump
[02144] 09b2: c0 08 f5    	 				  lbr	L95
[02145]                   
[02146]                   L94:
[02147]                   	;----- end for
[02148]                   	;----- end stmt ------
[02149]                   	;----- begin stmt ------
[02150]                   	;----- begin if
[02151]                   	;----- cgldlw
[02152] 09b5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02153] 09b8: ff fc       	          dw  -4  ;--- offset
[02154]                   	;----- cglit
[02155] 09ba: d4 00 00    	 				call epush16
[02156] 09bd: 00 0a       	 				  dw 10
[02157]                   	;----- queue_cmp
[02158]                   	;----- genbrfalse
[02159]                   	;----- genbranch
[02160]                   	;----- cgbrlt
[02161]                   	;----- cglt
[02162] 09bf: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02163]                   
[02164]                   	;----- cgbrcond
[02165] 09c2: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02166] 09c5: 9a          	 				 ghi   ra            ; get MSB from result
[02167] 09c6: 52          	 				 str   r2            ; save in M(X)
[02168] 09c7: 8a          	 				 glo   ra            ; get LSB from result
[02169] 09c8: f1          	 				 or                  ; D = MSB | LSB
[02170] 09c9: ca 09 cf    	lbnz	L105
[02171] 09cc: c0 09 eb    	lbr	L104
[02172]                   
[02173]                   L105:
[02174]                   	;----- begin stmt ------
[02175]                   	;---- queue lbr L107
[02176]                   	;----- cgjump
[02177] 09cf: c0 09 db    	 				  lbr	L107
[02178]                   
[02179]                   L106:
[02180] 09d2: 6d 61 6c 6c   db 'malloc-1'    ;----- cgdefs
              6f 63 2d 31 
[02181] 09da: 00          	db	$00    ;----- cgdefb
[02182]                   
[02183]                   L107:
[02184]                   	;----- cgldlab
[02185] 09db: d4 00 00    	 				call epush16
[02186] 09de: 09 d2       	 				  dw  L106
[02187]                   	;----- cgcall
[02188] 09e0: d4 00 98    	          call  Cfail
[02189]                   	;----- cgstack
[02190] 09e3: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02191] 09e6: 00 02       	          dw  2  ;--- offset
[02192] 09e8: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02193]                   	;---- queue dpush
[02194]                   	;----- push + pop data not required, data remains unchanged in RA
[02195]                   	;----- end stmt ------
[02196]                   
[02197]                   L104:
[02198]                   	;----- end if
[02199]                   	;----- end stmt ------
[02200]                   	;----- begin stmt ------
[02201]                   	;----- begin for
[02202]                   	;----- cglit
[02203] 09eb: d4 00 00    	 				call epush16
[02204] 09ee: 00 00       	 				  dw 0
[02205]                   	;----- cgstorlw
[02206] 09f0: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02207] 09f3: ff fc       	          dw  -4  ;--- offset
[02208]                   	;----- cgpopd
[02209] 09f5: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02210]                   
[02211]                   L108:
[02212]                   	;----- cgldlw
[02213] 09f8: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02214] 09fb: ff fc       	          dw  -4  ;--- offset
[02215]                   	;----- cglit
[02216] 09fd: d4 00 00    	 				call epush16
[02217] 0a00: 00 0a       	 				  dw 10
[02218]                   	;----- queue_cmp
[02219]                   	;----- genbrfalse
[02220]                   	;----- genbranch
[02221]                   	;----- cgbrlt
[02222]                   	;----- cglt
[02223] 0a02: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02224]                   
[02225]                   	;----- cgbrcond
[02226] 0a05: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02227] 0a08: 9a          	 				 ghi   ra            ; get MSB from result
[02228] 0a09: 52          	 				 str   r2            ; save in M(X)
[02229] 0a0a: 8a          	 				 glo   ra            ; get LSB from result
[02230] 0a0b: f1          	 				 or                  ; D = MSB | LSB
[02231] 0a0c: ca 0a 12    	lbnz	L112
[02232] 0a0f: c0 0a b8    	lbr	L110
[02233]                   
[02234]                   L112:
[02235]                   	;---- queue lbr L109
[02236]                   	;----- cgjump
[02237] 0a12: c0 0a 25    	 				  lbr	L109
[02238]                   
[02239]                   L111:
[02240]                   	;----- cgldlw
[02241] 0a15: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02242] 0a18: ff fc       	          dw  -4  ;--- offset
[02243]                   	;----- cginclw
[02244] 0a1a: d4 00 00    	          call  linc16       ; increment local variable
[02245] 0a1d: ff fc       	          dw  -4  ;--- offset
[02246]                   	;----- cgpopd
[02247] 0a1f: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02248]                   	;---- queue lbr L108
[02249]                   	;----- cgjump
[02250] 0a22: c0 09 f8    	 				  lbr	L108
[02251]                   
[02252]                   L109:
[02253]                   	;----- begin stmt ------
[02254]                   	;----- begin stmt ------
[02255]                   	;----- begin for
[02256]                   	;----- cglit
[02257] 0a25: d4 00 00    	 				call epush16
[02258] 0a28: 00 00       	 				  dw 0
[02259]                   	;----- cgstorlw
[02260] 0a2a: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02261] 0a2d: ff fa       	          dw  -6  ;--- offset
[02262]                   	;----- cgpopd
[02263] 0a2f: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02264]                   
[02265]                   L113:
[02266]                   	;----- cgldlw
[02267] 0a32: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02268] 0a35: ff fa       	          dw  -6  ;--- offset
[02269]                   	;----- cglit
[02270] 0a37: d4 00 00    	 				call epush16
[02271] 0a3a: 00 40       	 				  dw 64
[02272]                   	;----- queue_cmp
[02273]                   	;----- genbrfalse
[02274]                   	;----- genbranch
[02275]                   	;----- cgbrlt
[02276]                   	;----- cglt
[02277] 0a3c: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02278]                   
[02279]                   	;----- cgbrcond
[02280] 0a3f: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02281] 0a42: 9a          	 				 ghi   ra            ; get MSB from result
[02282] 0a43: 52          	 				 str   r2            ; save in M(X)
[02283] 0a44: 8a          	 				 glo   ra            ; get LSB from result
[02284] 0a45: f1          	 				 or                  ; D = MSB | LSB
[02285] 0a46: ca 0a 4c    	lbnz	L117
[02286] 0a49: c0 0a 98    	lbr	L115
[02287]                   
[02288]                   L117:
[02289]                   	;---- queue lbr L114
[02290]                   	;----- cgjump
[02291] 0a4c: c0 0a 5f    	 				  lbr	L114
[02292]                   
[02293]                   L116:
[02294]                   	;----- cgldlw
[02295] 0a4f: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02296] 0a52: ff fa       	          dw  -6  ;--- offset
[02297]                   	;----- cginclw
[02298] 0a54: d4 00 00    	          call  linc16       ; increment local variable
[02299] 0a57: ff fa       	          dw  -6  ;--- offset
[02300]                   	;----- cgpopd
[02301] 0a59: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02302]                   	;---- queue lbr L113
[02303]                   	;----- cgjump
[02304] 0a5c: c0 0a 32    	 				  lbr	L113
[02305]                   
[02306]                   L114:
[02307]                   	;----- begin stmt ------
[02308]                   	;----- begin if
[02309]                   	;----- cgldga
[02310] 0a5f: d4 00 00    	 				call epush16
[02311] 0a62: 00 42       	 				  dw Csegp
[02312]                   	;----- cgldlw
[02313] 0a64: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02314] 0a67: ff fc       	          dw  -4  ;--- offset
[02315]                   	;----- cgscale
[02316] 0a69: d4 00 00    	 				call scltos2
[02317]                   	;----- cgadd
[02318] 0a6c: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02319]                   
[02320]                   	;----- cgindw
[02321] 0a6f: d4 00 00    	 				call deref16
[02322]                   	;----- cgldlw
[02323] 0a72: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02324] 0a75: ff fa       	          dw  -6  ;--- offset
[02325]                   	;----- cgadd
[02326] 0a77: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02327]                   
[02328]                   	;----- cgindb
[02329] 0a7a: d4 00 00    	 				call deref8
[02330]                   	;----- cgldlw
[02331] 0a7d: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02332] 0a80: ff fc       	          dw  -4  ;--- offset
[02333]                   	;----- queue_cmp
[02334]                   	;----- genbrfalse
[02335]                   	;----- genbranch
[02336]                   	;----- cgbrne
[02337]                   	;----- cgne
[02338] 0a82: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02339]                   
[02340]                   	;----- cgbrcond
[02341] 0a85: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02342] 0a88: 9a          	 				 ghi   ra            ; get MSB from result
[02343] 0a89: 52          	 				 str   r2            ; save in M(X)
[02344] 0a8a: 8a          	 				 glo   ra            ; get LSB from result
[02345] 0a8b: f1          	 				 or                  ; D = MSB | LSB
[02346] 0a8c: ca 0a 92    	lbnz	L119
[02347] 0a8f: c0 0a 95    	lbr	L118
[02348]                   
[02349]                   L119:
[02350]                   	;----- begin stmt ------
[02351]                   	;----- begin break
[02352]                   	;---- queue lbr L115
[02353]                   	;----- end break
[02354]                   	;----- end stmt ------
[02355]                   	;----- cgjump
[02356] 0a92: c0 0a 98    	 				  lbr	L115
[02357]                   
[02358]                   L118:
[02359]                   	;----- end if
[02360]                   	;----- end stmt ------
[02361]                   	;---- queue lbr L116
[02362]                   	;----- cgjump
[02363] 0a95: c0 0a 4f    	 				  lbr	L116
[02364]                   
[02365]                   L115:
[02366]                   	;----- end for
[02367]                   	;----- end stmt ------
[02368]                   	;----- begin stmt ------
[02369]                   	;----- begin if
[02370]                   	;----- cglit
[02371] 0a98: d4 00 00    	 				call epush16
[02372] 0a9b: 00 40       	 				  dw 64
[02373]                   	;----- cgldlw
[02374] 0a9d: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02375] 0aa0: ff fa       	          dw  -6  ;--- offset
[02376]                   	;----- queue_cmp
[02377]                   	;----- genbrfalse
[02378]                   	;----- genbranch
[02379]                   	;----- cgbrne
[02380]                   	;----- cgne
[02381] 0aa2: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02382]                   
[02383]                   	;----- cgbrcond
[02384] 0aa5: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02385] 0aa8: 9a          	 				 ghi   ra            ; get MSB from result
[02386] 0aa9: 52          	 				 str   r2            ; save in M(X)
[02387] 0aaa: 8a          	 				 glo   ra            ; get LSB from result
[02388] 0aab: f1          	 				 or                  ; D = MSB | LSB
[02389] 0aac: ca 0a b2    	lbnz	L121
[02390] 0aaf: c0 0a b5    	lbr	L120
[02391]                   
[02392]                   L121:
[02393]                   	;----- begin stmt ------
[02394]                   	;----- begin break
[02395]                   	;---- queue lbr L110
[02396]                   	;----- end break
[02397]                   	;----- end stmt ------
[02398]                   	;----- cgjump
[02399] 0ab2: c0 0a b8    	 				  lbr	L110
[02400]                   
[02401]                   L120:
[02402]                   	;----- end if
[02403]                   	;----- end stmt ------
[02404]                   	;----- end stmt ------
[02405]                   	;---- queue lbr L111
[02406]                   	;----- cgjump
[02407] 0ab5: c0 0a 15    	 				  lbr	L111
[02408]                   
[02409]                   L110:
[02410]                   	;----- end for
[02411]                   	;----- end stmt ------
[02412]                   	;----- begin stmt ------
[02413]                   	;----- begin if
[02414]                   	;----- cgldlw
[02415] 0ab8: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02416] 0abb: ff fc       	          dw  -4  ;--- offset
[02417]                   	;----- cglit
[02418] 0abd: d4 00 00    	 				call epush16
[02419] 0ac0: 00 0a       	 				  dw 10
[02420]                   	;----- queue_cmp
[02421]                   	;----- genbrfalse
[02422]                   	;----- genbranch
[02423]                   	;----- cgbrlt
[02424]                   	;----- cglt
[02425] 0ac2: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02426]                   
[02427]                   	;----- cgbrcond
[02428] 0ac5: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02429] 0ac8: 9a          	 				 ghi   ra            ; get MSB from result
[02430] 0ac9: 52          	 				 str   r2            ; save in M(X)
[02431] 0aca: 8a          	 				 glo   ra            ; get LSB from result
[02432] 0acb: f1          	 				 or                  ; D = MSB | LSB
[02433] 0acc: ca 0a d2    	lbnz	L123
[02434] 0acf: c0 0a ee    	lbr	L122
[02435]                   
[02436]                   L123:
[02437]                   	;----- begin stmt ------
[02438]                   	;---- queue lbr L125
[02439]                   	;----- cgjump
[02440] 0ad2: c0 0a de    	 				  lbr	L125
[02441]                   
[02442]                   L124:
[02443] 0ad5: 6d 61 6c 6c   db 'malloc-2'    ;----- cgdefs
              6f 63 2d 32 
[02444] 0add: 00          	db	$00    ;----- cgdefb
[02445]                   
[02446]                   L125:
[02447]                   	;----- cgldlab
[02448] 0ade: d4 00 00    	 				call epush16
[02449] 0ae1: 0a d5       	 				  dw  L124
[02450]                   	;----- cgcall
[02451] 0ae3: d4 00 98    	          call  Cfail
[02452]                   	;----- cgstack
[02453] 0ae6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02454] 0ae9: 00 02       	          dw  2  ;--- offset
[02455] 0aeb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02456]                   	;---- queue dpush
[02457]                   	;----- push + pop data not required, data remains unchanged in RA
[02458]                   	;----- end stmt ------
[02459]                   
[02460]                   L122:
[02461]                   	;----- end if
[02462]                   	;----- end stmt ------
[02463]                   	;----- begin stmt ------
[02464]                   	;---- queue lbr L127
[02465]                   	;----- cgjump
[02466] 0aee: c0 0a f6    	 				  lbr	L127
[02467]                   
[02468]                   L126:
[02469] 0af1: 66 72 65 65   db 'free'    ;----- cgdefs
[02470] 0af5: 00          	db	$00    ;----- cgdefb
[02471]                   
[02472]                   L127:
[02473]                   	;----- cgldlab
[02474] 0af6: d4 00 00    	 				call epush16
[02475] 0af9: 0a f1       	 				  dw  L126
[02476]                   	;----- cgcall
[02477] 0afb: d4 00 e8    	          call  Cpr
[02478]                   	;----- cgstack
[02479] 0afe: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02480] 0b01: 00 02       	          dw  2  ;--- offset
[02481] 0b03: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02482]                   	;---- queue dpush
[02483]                   	;----- push + pop data not required, data remains unchanged in RA
[02484]                   	;----- end stmt ------
[02485]                   	;----- begin stmt ------
[02486]                   	;----- begin for
[02487]                   	;----- cglit
[02488] 0b06: d4 00 00    	 				call epush16
[02489] 0b09: 00 00       	 				  dw 0
[02490]                   	;----- cgstorlw
[02491] 0b0b: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02492] 0b0e: ff fa       	          dw  -6  ;--- offset
[02493]                   	;----- cgpopd
[02494] 0b10: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02495]                   
[02496]                   L128:
[02497]                   	;----- cgldlw
[02498] 0b13: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02499] 0b16: ff fa       	          dw  -6  ;--- offset
[02500]                   	;----- cgldlw
[02501] 0b18: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02502] 0b1b: ff fc       	          dw  -4  ;--- offset
[02503]                   	;----- queue_cmp
[02504]                   	;----- genbrfalse
[02505]                   	;----- genbranch
[02506]                   	;----- cgbrlt
[02507]                   	;----- cglt
[02508] 0b1d: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02509]                   
[02510]                   	;----- cgbrcond
[02511] 0b20: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02512] 0b23: 9a          	 				 ghi   ra            ; get MSB from result
[02513] 0b24: 52          	 				 str   r2            ; save in M(X)
[02514] 0b25: 8a          	 				 glo   ra            ; get LSB from result
[02515] 0b26: f1          	 				 or                  ; D = MSB | LSB
[02516] 0b27: ca 0b 2d    	lbnz	L132
[02517] 0b2a: c0 0b 61    	lbr	L130
[02518]                   
[02519]                   L132:
[02520]                   	;---- queue lbr L129
[02521]                   	;----- cgjump
[02522] 0b2d: c0 0b 40    	 				  lbr	L129
[02523]                   
[02524]                   L131:
[02525]                   	;----- cgldlw
[02526] 0b30: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02527] 0b33: ff fa       	          dw  -6  ;--- offset
[02528]                   	;----- cginclw
[02529] 0b35: d4 00 00    	          call  linc16       ; increment local variable
[02530] 0b38: ff fa       	          dw  -6  ;--- offset
[02531]                   	;----- cgpopd
[02532] 0b3a: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02533]                   	;---- queue lbr L128
[02534]                   	;----- cgjump
[02535] 0b3d: c0 0b 13    	 				  lbr	L128
[02536]                   
[02537]                   L129:
[02538]                   	;----- begin stmt ------
[02539]                   	;----- cgldga
[02540] 0b40: d4 00 00    	 				call epush16
[02541] 0b43: 00 42       	 				  dw Csegp
[02542]                   	;----- cgldlw
[02543] 0b45: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02544] 0b48: ff fa       	          dw  -6  ;--- offset
[02545]                   	;----- cgscale
[02546] 0b4a: d4 00 00    	 				call scltos2
[02547]                   	;----- cgadd
[02548] 0b4d: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02549]                   
[02550]                   	;----- cgindw
[02551] 0b50: d4 00 00    	 				call deref16
[02552]                   	;----- cgcall
[02553] 0b53: d4 00 00    	          call  Cfree
[02554]                   	;----- cgstack
[02555] 0b56: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02556] 0b59: 00 02       	          dw  2  ;--- offset
[02557] 0b5b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02558]                   	;---- queue dpush
[02559]                   	;----- push + pop data not required, data remains unchanged in RA
[02560]                   	;----- end stmt ------
[02561]                   	;---- queue lbr L131
[02562]                   	;----- cgjump
[02563] 0b5e: c0 0b 30    	 				  lbr	L131
[02564]                   
[02565]                   L130:
[02566]                   	;----- end for
[02567]                   	;----- end stmt ------
[02568]                   	;----- begin stmt ------
[02569]                   	;---- queue lbr L134
[02570]                   	;----- cgjump
[02571] 0b61: c0 0b 6b    	 				  lbr	L134
[02572]                   
[02573]                   L133:
[02574] 0b64: 63 61 6c 6c   db 'calloc'    ;----- cgdefs
              6f 63 
[02575] 0b6a: 00          	db	$00    ;----- cgdefb
[02576]                   
[02577]                   L134:
[02578]                   	;----- cgldlab
[02579] 0b6b: d4 00 00    	 				call epush16
[02580] 0b6e: 0b 64       	 				  dw  L133
[02581]                   	;----- cgcall
[02582] 0b70: d4 00 e8    	          call  Cpr
[02583]                   	;----- cgstack
[02584] 0b73: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02585] 0b76: 00 02       	          dw  2  ;--- offset
[02586] 0b78: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02587]                   	;---- queue dpush
[02588]                   	;----- push + pop data not required, data remains unchanged in RA
[02589]                   	;----- end stmt ------
[02590]                   	;----- begin stmt ------
[02591]                   	;----- begin if
[02592]                   	;----- cglit
[02593] 0b7b: d4 00 00    	 				call epush16
[02594] 0b7e: 00 40       	 				  dw 64
[02595]                   	;----- cgldlw
[02596] 0b80: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02597] 0b83: ff fc       	          dw  -4  ;--- offset
[02598]                   	;----- cgcall
[02599] 0b85: d4 00 00    	          call  Ccalloc
[02600]                   	;----- cgstack
[02601] 0b88: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02602] 0b8b: 00 04       	          dw  4  ;--- offset
[02603] 0b8d: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02604]                   	;---- queue dpush
[02605]                   	;------ commit push
[02606]                   	;----- cgpushd
[02607] 0b90: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02608]                   	;----- cgstorlw
[02609] 0b93: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02610] 0b96: ff fe       	          dw  -2  ;--- offset
[02611]                   	;----- cglit
[02612] 0b98: d4 00 00    	 				call epush16
[02613] 0b9b: 00 00       	 				  dw 0
[02614]                   	;----- queue_cmp
[02615]                   	;----- genbrfalse
[02616]                   	;----- genbranch
[02617]                   	;----- cgbreq
[02618]                   	;----- cgeq
[02619] 0b9d: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[02620]                   
[02621]                   	;----- cgbrcond
[02622] 0ba0: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02623] 0ba3: 9a          	 				 ghi   ra            ; get MSB from result
[02624] 0ba4: 52          	 				 str   r2            ; save in M(X)
[02625] 0ba5: 8a          	 				 glo   ra            ; get LSB from result
[02626] 0ba6: f1          	 				 or                  ; D = MSB | LSB
[02627] 0ba7: ca 0b ad    	lbnz	L136
[02628] 0baa: c0 0b c9    	lbr	L135
[02629]                   
[02630]                   L136:
[02631]                   	;----- begin stmt ------
[02632]                   	;---- queue lbr L138
[02633]                   	;----- cgjump
[02634] 0bad: c0 0b b9    	 				  lbr	L138
[02635]                   
[02636]                   L137:
[02637] 0bb0: 63 61 6c 6c   db 'calloc-1'    ;----- cgdefs
              6f 63 2d 31 
[02638] 0bb8: 00          	db	$00    ;----- cgdefb
[02639]                   
[02640]                   L138:
[02641]                   	;----- cgldlab
[02642] 0bb9: d4 00 00    	 				call epush16
[02643] 0bbc: 0b b0       	 				  dw  L137
[02644]                   	;----- cgcall
[02645] 0bbe: d4 00 98    	          call  Cfail
[02646]                   	;----- cgstack
[02647] 0bc1: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02648] 0bc4: 00 02       	          dw  2  ;--- offset
[02649] 0bc6: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02650]                   	;---- queue dpush
[02651]                   	;----- push + pop data not required, data remains unchanged in RA
[02652]                   	;----- end stmt ------
[02653]                   
[02654]                   L135:
[02655]                   	;----- end if
[02656]                   	;----- end stmt ------
[02657]                   	;----- begin stmt ------
[02658]                   	;----- begin for
[02659]                   	;----- cglit
[02660] 0bc9: d4 00 00    	 				call epush16
[02661] 0bcc: 00 00       	 				  dw 0
[02662]                   	;----- cgstorlw
[02663] 0bce: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02664] 0bd1: ff fc       	          dw  -4  ;--- offset
[02665]                   	;----- cgpopd
[02666] 0bd3: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02667]                   
[02668]                   L139:
[02669]                   	;----- cgldlw
[02670] 0bd6: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02671] 0bd9: ff fc       	          dw  -4  ;--- offset
[02672]                   	;----- cglit
[02673] 0bdb: d4 00 00    	 				call epush16
[02674] 0bde: 00 40       	 				  dw 64
[02675]                   	;----- queue_cmp
[02676]                   	;----- genbrfalse
[02677]                   	;----- genbranch
[02678]                   	;----- cgbrlt
[02679]                   	;----- cglt
[02680] 0be0: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02681]                   
[02682]                   	;----- cgbrcond
[02683] 0be3: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02684] 0be6: 9a          	 				 ghi   ra            ; get MSB from result
[02685] 0be7: 52          	 				 str   r2            ; save in M(X)
[02686] 0be8: 8a          	 				 glo   ra            ; get LSB from result
[02687] 0be9: f1          	 				 or                  ; D = MSB | LSB
[02688] 0bea: ca 0b f0    	lbnz	L143
[02689] 0bed: c0 0c 23    	lbr	L141
[02690]                   
[02691]                   L143:
[02692]                   	;---- queue lbr L140
[02693]                   	;----- cgjump
[02694] 0bf0: c0 0c 03    	 				  lbr	L140
[02695]                   
[02696]                   L142:
[02697]                   	;----- cgldlw
[02698] 0bf3: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02699] 0bf6: ff fc       	          dw  -4  ;--- offset
[02700]                   	;----- cginclw
[02701] 0bf8: d4 00 00    	          call  linc16       ; increment local variable
[02702] 0bfb: ff fc       	          dw  -4  ;--- offset
[02703]                   	;----- cgpopd
[02704] 0bfd: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02705]                   	;---- queue lbr L139
[02706]                   	;----- cgjump
[02707] 0c00: c0 0b d6    	 				  lbr	L139
[02708]                   
[02709]                   L140:
[02710]                   	;----- begin stmt ------
[02711]                   	;----- begin if
[02712]                   	;----- cgldlw
[02713] 0c03: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02714] 0c06: ff fc       	          dw  -4  ;--- offset
[02715]                   	;----- cgldlw
[02716] 0c08: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02717] 0c0b: ff fe       	          dw  -2  ;--- offset
[02718]                   	;----- cgadd
[02719] 0c0d: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02720]                   
[02721]                   	;----- cgindb
[02722] 0c10: d4 00 00    	 				call deref8
[02723]                   	;----- genbrfalse
[02724]                   	;----- cgbrfalse
[02725]                   	;----- cgbr
[02726] 0c13: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02727] 0c16: 9a          	 				 ghi   ra            ; get MSB from result
[02728] 0c17: 52          	 				 str   r2            ; save in M(X)
[02729] 0c18: 8a          	 				 glo   ra            ; get LSB from result
[02730] 0c19: f1          	 				 or                  ; D = MSB | LSB
[02731] 0c1a: c2 0c 20    	 				 lbz	L144           ; check for branch
[02732]                   	;----- begin stmt ------
[02733]                   	;----- begin break
[02734]                   	;---- queue lbr L141
[02735]                   	;----- end break
[02736]                   	;----- end stmt ------
[02737]                   	;----- cgjump
[02738] 0c1d: c0 0c 23    	 				  lbr	L141
[02739]                   
[02740]                   L144:
[02741]                   	;----- end if
[02742]                   	;----- end stmt ------
[02743]                   	;---- queue lbr L142
[02744]                   	;----- cgjump
[02745] 0c20: c0 0b f3    	 				  lbr	L142
[02746]                   
[02747]                   L141:
[02748]                   	;----- end for
[02749]                   	;----- end stmt ------
[02750]                   	;----- begin stmt ------
[02751]                   	;----- begin if
[02752]                   	;----- cgldlw
[02753] 0c23: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02754] 0c26: ff fc       	          dw  -4  ;--- offset
[02755]                   	;----- cglit
[02756] 0c28: d4 00 00    	 				call epush16
[02757] 0c2b: 00 40       	 				  dw 64
[02758]                   	;----- queue_cmp
[02759]                   	;----- genbrfalse
[02760]                   	;----- genbranch
[02761]                   	;----- cgbrlt
[02762]                   	;----- cglt
[02763] 0c2d: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02764]                   
[02765]                   	;----- cgbrcond
[02766] 0c30: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02767] 0c33: 9a          	 				 ghi   ra            ; get MSB from result
[02768] 0c34: 52          	 				 str   r2            ; save in M(X)
[02769] 0c35: 8a          	 				 glo   ra            ; get LSB from result
[02770] 0c36: f1          	 				 or                  ; D = MSB | LSB
[02771] 0c37: ca 0c 3d    	lbnz	L146
[02772] 0c3a: c0 0c 59    	lbr	L145
[02773]                   
[02774]                   L146:
[02775]                   	;----- begin stmt ------
[02776]                   	;---- queue lbr L148
[02777]                   	;----- cgjump
[02778] 0c3d: c0 0c 49    	 				  lbr	L148
[02779]                   
[02780]                   L147:
[02781] 0c40: 63 61 6c 6c   db 'calloc-2'    ;----- cgdefs
              6f 63 2d 32 
[02782] 0c48: 00          	db	$00    ;----- cgdefb
[02783]                   
[02784]                   L148:
[02785]                   	;----- cgldlab
[02786] 0c49: d4 00 00    	 				call epush16
[02787] 0c4c: 0c 40       	 				  dw  L147
[02788]                   	;----- cgcall
[02789] 0c4e: d4 00 98    	          call  Cfail
[02790]                   	;----- cgstack
[02791] 0c51: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02792] 0c54: 00 02       	          dw  2  ;--- offset
[02793] 0c56: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02794]                   	;---- queue dpush
[02795]                   	;----- push + pop data not required, data remains unchanged in RA
[02796]                   	;----- end stmt ------
[02797]                   
[02798]                   L145:
[02799]                   	;----- end if
[02800]                   	;----- end stmt ------
[02801]                   	;----- begin stmt ------
[02802]                   	;----- cgldlw
[02803] 0c59: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02804] 0c5c: ff fe       	          dw  -2  ;--- offset
[02805]                   	;----- cgcall
[02806] 0c5e: d4 00 00    	          call  Cfree
[02807]                   	;----- cgstack
[02808] 0c61: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02809] 0c64: 00 02       	          dw  2  ;--- offset
[02810] 0c66: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02811]                   	;---- queue dpush
[02812]                   	;----- push + pop data not required, data remains unchanged in RA
[02813]                   	;----- end stmt ------
[02814]                   	;----- begin stmt ------
[02815]                   	;---- queue lbr L150
[02816]                   	;----- cgjump
[02817] 0c69: c0 0c 74    	 				  lbr	L150
[02818]                   
[02819]                   L149:
[02820] 0c6c: 72 65 61 6c   db 'realloc'    ;----- cgdefs
              6c 6f 63 
[02821] 0c73: 00          	db	$00    ;----- cgdefb
[02822]                   
[02823]                   L150:
[02824]                   	;----- cgldlab
[02825] 0c74: d4 00 00    	 				call epush16
[02826] 0c77: 0c 6c       	 				  dw  L149
[02827]                   	;----- cgcall
[02828] 0c79: d4 00 e8    	          call  Cpr
[02829]                   	;----- cgstack
[02830] 0c7c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02831] 0c7f: 00 02       	          dw  2  ;--- offset
[02832] 0c81: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02833]                   	;---- queue dpush
[02834]                   	;----- push + pop data not required, data remains unchanged in RA
[02835]                   	;----- end stmt ------
[02836]                   	;----- begin stmt ------
[02837]                   	;----- begin if
[02838]                   	;----- cglit
[02839] 0c84: d4 00 00    	 				call epush16
[02840] 0c87: 00 7b       	 				  dw 123
[02841]                   	;----- cgcall
[02842] 0c89: d4 00 00    	          call  Cmalloc
[02843]                   	;----- cgstack
[02844] 0c8c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02845] 0c8f: 00 02       	          dw  2  ;--- offset
[02846] 0c91: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02847]                   	;---- queue dpush
[02848]                   	;------ commit push
[02849]                   	;----- cgpushd
[02850] 0c94: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02851]                   	;----- cgstorlw
[02852] 0c97: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02853] 0c9a: ff fe       	          dw  -2  ;--- offset
[02854]                   	;----- cglit
[02855] 0c9c: d4 00 00    	 				call epush16
[02856] 0c9f: 00 00       	 				  dw 0
[02857]                   	;----- queue_cmp
[02858]                   	;----- genbrfalse
[02859]                   	;----- genbranch
[02860]                   	;----- cgbreq
[02861]                   	;----- cgeq
[02862] 0ca1: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[02863]                   
[02864]                   	;----- cgbrcond
[02865] 0ca4: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02866] 0ca7: 9a          	 				 ghi   ra            ; get MSB from result
[02867] 0ca8: 52          	 				 str   r2            ; save in M(X)
[02868] 0ca9: 8a          	 				 glo   ra            ; get LSB from result
[02869] 0caa: f1          	 				 or                  ; D = MSB | LSB
[02870] 0cab: ca 0c b1    	lbnz	L152
[02871] 0cae: c0 0c cd    	lbr	L151
[02872]                   
[02873]                   L152:
[02874]                   	;----- begin stmt ------
[02875]                   	;---- queue lbr L154
[02876]                   	;----- cgjump
[02877] 0cb1: c0 0c bd    	 				  lbr	L154
[02878]                   
[02879]                   L153:
[02880] 0cb4: 6d 61 6c 6c   db 'malloc-3'    ;----- cgdefs
              6f 63 2d 33 
[02881] 0cbc: 00          	db	$00    ;----- cgdefb
[02882]                   
[02883]                   L154:
[02884]                   	;----- cgldlab
[02885] 0cbd: d4 00 00    	 				call epush16
[02886] 0cc0: 0c b4       	 				  dw  L153
[02887]                   	;----- cgcall
[02888] 0cc2: d4 00 98    	          call  Cfail
[02889]                   	;----- cgstack
[02890] 0cc5: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02891] 0cc8: 00 02       	          dw  2  ;--- offset
[02892] 0cca: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02893]                   	;---- queue dpush
[02894]                   	;----- push + pop data not required, data remains unchanged in RA
[02895]                   	;----- end stmt ------
[02896]                   
[02897]                   L151:
[02898]                   	;----- end if
[02899]                   	;----- end stmt ------
[02900]                   	;----- begin stmt ------
[02901]                   	;----- begin for
[02902]                   	;----- cglit
[02903] 0ccd: d4 00 00    	 				call epush16
[02904] 0cd0: 00 00       	 				  dw 0
[02905]                   	;----- cgstorlw
[02906] 0cd2: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02907] 0cd5: ff fc       	          dw  -4  ;--- offset
[02908]                   	;----- cgpopd
[02909] 0cd7: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02910]                   
[02911]                   L155:
[02912]                   	;----- cgldlw
[02913] 0cda: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02914] 0cdd: ff fc       	          dw  -4  ;--- offset
[02915]                   	;----- cglit
[02916] 0cdf: d4 00 00    	 				call epush16
[02917] 0ce2: 00 7b       	 				  dw 123
[02918]                   	;----- queue_cmp
[02919]                   	;----- genbrfalse
[02920]                   	;----- genbranch
[02921]                   	;----- cgbrlt
[02922]                   	;----- cglt
[02923] 0ce4: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[02924]                   
[02925]                   	;----- cgbrcond
[02926] 0ce7: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02927] 0cea: 9a          	 				 ghi   ra            ; get MSB from result
[02928] 0ceb: 52          	 				 str   r2            ; save in M(X)
[02929] 0cec: 8a          	 				 glo   ra            ; get LSB from result
[02930] 0ced: f1          	 				 or                  ; D = MSB | LSB
[02931] 0cee: ca 0c f4    	lbnz	L159
[02932] 0cf1: c0 0d 28    	lbr	L157
[02933]                   
[02934]                   L159:
[02935]                   	;---- queue lbr L156
[02936]                   	;----- cgjump
[02937] 0cf4: c0 0d 07    	 				  lbr	L156
[02938]                   
[02939]                   L158:
[02940]                   	;----- cgldlw
[02941] 0cf7: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02942] 0cfa: ff fc       	          dw  -4  ;--- offset
[02943]                   	;----- cginclw
[02944] 0cfc: d4 00 00    	          call  linc16       ; increment local variable
[02945] 0cff: ff fc       	          dw  -4  ;--- offset
[02946]                   	;----- cgpopd
[02947] 0d01: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02948]                   	;---- queue lbr L155
[02949]                   	;----- cgjump
[02950] 0d04: c0 0c da    	 				  lbr	L155
[02951]                   
[02952]                   L156:
[02953]                   	;----- begin stmt ------
[02954]                   	;----- cgldlw
[02955] 0d07: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02956] 0d0a: ff fc       	          dw  -4  ;--- offset
[02957]                   	;----- cgldlw
[02958] 0d0c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02959] 0d0f: ff fe       	          dw  -2  ;--- offset
[02960]                   	;----- cgadd
[02961] 0d11: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[02962]                   
[02963]                   	;----- cgldlw
[02964] 0d14: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02965] 0d17: ff fc       	          dw  -4  ;--- offset
[02966]                   	;----- cgpopptr
[02967] 0d19: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[02968] 0d1c: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[02969]                   	;----- cgstorib
[02970] 0d1f: d4 00 00    	          call  pstor8       ; store value from ES in pointer variable
[02971]                   	;----- cgpopd
[02972] 0d22: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02973]                   	;----- end stmt ------
[02974]                   	;---- queue lbr L158
[02975]                   	;----- cgjump
[02976] 0d25: c0 0c f7    	 				  lbr	L158
[02977]                   
[02978]                   L157:
[02979]                   	;----- end for
[02980]                   	;----- end stmt ------
[02981]                   	;----- begin stmt ------
[02982]                   	;----- begin if
[02983]                   	;----- cglit
[02984] 0d28: d4 00 00    	 				call epush16
[02985] 0d2b: 01 01       	 				  dw 257
[02986]                   	;----- cgldlw
[02987] 0d2d: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02988] 0d30: ff fe       	          dw  -2  ;--- offset
[02989]                   	;----- cgcall
[02990] 0d32: d4 00 00    	          call  Crealloc
[02991]                   	;----- cgstack
[02992] 0d35: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02993] 0d38: 00 04       	          dw  4  ;--- offset
[02994] 0d3a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02995]                   	;---- queue dpush
[02996]                   	;------ commit push
[02997]                   	;----- cgpushd
[02998] 0d3d: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02999]                   	;----- cgstorlw
[03000] 0d40: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03001] 0d43: ff fe       	          dw  -2  ;--- offset
[03002]                   	;----- cglit
[03003] 0d45: d4 00 00    	 				call epush16
[03004] 0d48: 00 00       	 				  dw 0
[03005]                   	;----- queue_cmp
[03006]                   	;----- genbrfalse
[03007]                   	;----- genbranch
[03008]                   	;----- cgbreq
[03009]                   	;----- cgeq
[03010] 0d4a: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[03011]                   
[03012]                   	;----- cgbrcond
[03013] 0d4d: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03014] 0d50: 9a          	 				 ghi   ra            ; get MSB from result
[03015] 0d51: 52          	 				 str   r2            ; save in M(X)
[03016] 0d52: 8a          	 				 glo   ra            ; get LSB from result
[03017] 0d53: f1          	 				 or                  ; D = MSB | LSB
[03018] 0d54: ca 0d 5a    	lbnz	L161
[03019] 0d57: c0 0d 77    	lbr	L160
[03020]                   
[03021]                   L161:
[03022]                   	;----- begin stmt ------
[03023]                   	;---- queue lbr L163
[03024]                   	;----- cgjump
[03025] 0d5a: c0 0d 67    	 				  lbr	L163
[03026]                   
[03027]                   L162:
[03028] 0d5d: 72 65 61 6c   db 'realloc-1'    ;----- cgdefs
              6c 6f 63 2d 
              31 
[03029] 0d66: 00          	db	$00    ;----- cgdefb
[03030]                   
[03031]                   L163:
[03032]                   	;----- cgldlab
[03033] 0d67: d4 00 00    	 				call epush16
[03034] 0d6a: 0d 5d       	 				  dw  L162
[03035]                   	;----- cgcall
[03036] 0d6c: d4 00 98    	          call  Cfail
[03037]                   	;----- cgstack
[03038] 0d6f: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03039] 0d72: 00 02       	          dw  2  ;--- offset
[03040] 0d74: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03041]                   	;---- queue dpush
[03042]                   	;----- push + pop data not required, data remains unchanged in RA
[03043]                   	;----- end stmt ------
[03044]                   
[03045]                   L160:
[03046]                   	;----- end if
[03047]                   	;----- end stmt ------
[03048]                   	;----- begin stmt ------
[03049]                   	;----- begin for
[03050]                   	;----- cglit
[03051] 0d77: d4 00 00    	 				call epush16
[03052] 0d7a: 00 00       	 				  dw 0
[03053]                   	;----- cgstorlw
[03054] 0d7c: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03055] 0d7f: ff fc       	          dw  -4  ;--- offset
[03056]                   	;----- cgpopd
[03057] 0d81: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03058]                   
[03059]                   L164:
[03060]                   	;----- cgldlw
[03061] 0d84: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03062] 0d87: ff fc       	          dw  -4  ;--- offset
[03063]                   	;----- cglit
[03064] 0d89: d4 00 00    	 				call epush16
[03065] 0d8c: 00 7b       	 				  dw 123
[03066]                   	;----- queue_cmp
[03067]                   	;----- genbrfalse
[03068]                   	;----- genbranch
[03069]                   	;----- cgbrlt
[03070]                   	;----- cglt
[03071] 0d8e: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03072]                   
[03073]                   	;----- cgbrcond
[03074] 0d91: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03075] 0d94: 9a          	 				 ghi   ra            ; get MSB from result
[03076] 0d95: 52          	 				 str   r2            ; save in M(X)
[03077] 0d96: 8a          	 				 glo   ra            ; get LSB from result
[03078] 0d97: f1          	 				 or                  ; D = MSB | LSB
[03079] 0d98: ca 0d 9e    	lbnz	L168
[03080] 0d9b: c0 0d dc    	lbr	L166
[03081]                   
[03082]                   L168:
[03083]                   	;---- queue lbr L165
[03084]                   	;----- cgjump
[03085] 0d9e: c0 0d b1    	 				  lbr	L165
[03086]                   
[03087]                   L167:
[03088]                   	;----- cgldlw
[03089] 0da1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03090] 0da4: ff fc       	          dw  -4  ;--- offset
[03091]                   	;----- cginclw
[03092] 0da6: d4 00 00    	          call  linc16       ; increment local variable
[03093] 0da9: ff fc       	          dw  -4  ;--- offset
[03094]                   	;----- cgpopd
[03095] 0dab: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03096]                   	;---- queue lbr L164
[03097]                   	;----- cgjump
[03098] 0dae: c0 0d 84    	 				  lbr	L164
[03099]                   
[03100]                   L165:
[03101]                   	;----- begin stmt ------
[03102]                   	;----- begin if
[03103]                   	;----- cgldlw
[03104] 0db1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03105] 0db4: ff fc       	          dw  -4  ;--- offset
[03106]                   	;----- cgldlw
[03107] 0db6: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03108] 0db9: ff fe       	          dw  -2  ;--- offset
[03109]                   	;----- cgadd
[03110] 0dbb: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[03111]                   
[03112]                   	;----- cgindb
[03113] 0dbe: d4 00 00    	 				call deref8
[03114]                   	;----- cgldlw
[03115] 0dc1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03116] 0dc4: ff fc       	          dw  -4  ;--- offset
[03117]                   	;----- queue_cmp
[03118]                   	;----- genbrfalse
[03119]                   	;----- genbranch
[03120]                   	;----- cgbrne
[03121]                   	;----- cgne
[03122] 0dc6: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[03123]                   
[03124]                   	;----- cgbrcond
[03125] 0dc9: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03126] 0dcc: 9a          	 				 ghi   ra            ; get MSB from result
[03127] 0dcd: 52          	 				 str   r2            ; save in M(X)
[03128] 0dce: 8a          	 				 glo   ra            ; get LSB from result
[03129] 0dcf: f1          	 				 or                  ; D = MSB | LSB
[03130] 0dd0: ca 0d d6    	lbnz	L170
[03131] 0dd3: c0 0d d9    	lbr	L169
[03132]                   
[03133]                   L170:
[03134]                   	;----- begin stmt ------
[03135]                   	;----- begin break
[03136]                   	;---- queue lbr L166
[03137]                   	;----- end break
[03138]                   	;----- end stmt ------
[03139]                   	;----- cgjump
[03140] 0dd6: c0 0d dc    	 				  lbr	L166
[03141]                   
[03142]                   L169:
[03143]                   	;----- end if
[03144]                   	;----- end stmt ------
[03145]                   	;---- queue lbr L167
[03146]                   	;----- cgjump
[03147] 0dd9: c0 0d a1    	 				  lbr	L167
[03148]                   
[03149]                   L166:
[03150]                   	;----- end for
[03151]                   	;----- end stmt ------
[03152]                   	;----- begin stmt ------
[03153]                   	;----- begin if
[03154]                   	;----- cgldlw
[03155] 0ddc: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03156] 0ddf: ff fc       	          dw  -4  ;--- offset
[03157]                   	;----- cglit
[03158] 0de1: d4 00 00    	 				call epush16
[03159] 0de4: 00 7b       	 				  dw 123
[03160]                   	;----- queue_cmp
[03161]                   	;----- genbrfalse
[03162]                   	;----- genbranch
[03163]                   	;----- cgbrlt
[03164]                   	;----- cglt
[03165] 0de6: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03166]                   
[03167]                   	;----- cgbrcond
[03168] 0de9: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03169] 0dec: 9a          	 				 ghi   ra            ; get MSB from result
[03170] 0ded: 52          	 				 str   r2            ; save in M(X)
[03171] 0dee: 8a          	 				 glo   ra            ; get LSB from result
[03172] 0def: f1          	 				 or                  ; D = MSB | LSB
[03173] 0df0: ca 0d f6    	lbnz	L172
[03174] 0df3: c0 0e 13    	lbr	L171
[03175]                   
[03176]                   L172:
[03177]                   	;----- begin stmt ------
[03178]                   	;---- queue lbr L174
[03179]                   	;----- cgjump
[03180] 0df6: c0 0e 03    	 				  lbr	L174
[03181]                   
[03182]                   L173:
[03183] 0df9: 72 65 61 6c   db 'realloc-2'    ;----- cgdefs
              6c 6f 63 2d 
              32 
[03184] 0e02: 00          	db	$00    ;----- cgdefb
[03185]                   
[03186]                   L174:
[03187]                   	;----- cgldlab
[03188] 0e03: d4 00 00    	 				call epush16
[03189] 0e06: 0d f9       	 				  dw  L173
[03190]                   	;----- cgcall
[03191] 0e08: d4 00 98    	          call  Cfail
[03192]                   	;----- cgstack
[03193] 0e0b: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03194] 0e0e: 00 02       	          dw  2  ;--- offset
[03195] 0e10: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03196]                   	;---- queue dpush
[03197]                   	;----- push + pop data not required, data remains unchanged in RA
[03198]                   	;----- end stmt ------
[03199]                   
[03200]                   L171:
[03201]                   	;----- end if
[03202]                   	;----- end stmt ------
[03203]                   	;----- begin stmt ------
[03204]                   	;----- begin if
[03205]                   	;----- cglit
[03206] 0e13: d4 00 00    	 				call epush16
[03207] 0e16: 00 61       	 				  dw 97
[03208]                   	;----- cgldlw
[03209] 0e18: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03210] 0e1b: ff fe       	          dw  -2  ;--- offset
[03211]                   	;----- cgcall
[03212] 0e1d: d4 00 00    	          call  Crealloc
[03213]                   	;----- cgstack
[03214] 0e20: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03215] 0e23: 00 04       	          dw  4  ;--- offset
[03216] 0e25: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03217]                   	;---- queue dpush
[03218]                   	;------ commit push
[03219]                   	;----- cgpushd
[03220] 0e28: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[03221]                   	;----- cgstorlw
[03222] 0e2b: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03223] 0e2e: ff fe       	          dw  -2  ;--- offset
[03224]                   	;----- cglit
[03225] 0e30: d4 00 00    	 				call epush16
[03226] 0e33: 00 00       	 				  dw 0
[03227]                   	;----- queue_cmp
[03228]                   	;----- genbrfalse
[03229]                   	;----- genbranch
[03230]                   	;----- cgbreq
[03231]                   	;----- cgeq
[03232] 0e35: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[03233]                   
[03234]                   	;----- cgbrcond
[03235] 0e38: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03236] 0e3b: 9a          	 				 ghi   ra            ; get MSB from result
[03237] 0e3c: 52          	 				 str   r2            ; save in M(X)
[03238] 0e3d: 8a          	 				 glo   ra            ; get LSB from result
[03239] 0e3e: f1          	 				 or                  ; D = MSB | LSB
[03240] 0e3f: ca 0e 45    	lbnz	L176
[03241] 0e42: c0 0e 62    	lbr	L175
[03242]                   
[03243]                   L176:
[03244]                   	;----- begin stmt ------
[03245]                   	;---- queue lbr L178
[03246]                   	;----- cgjump
[03247] 0e45: c0 0e 52    	 				  lbr	L178
[03248]                   
[03249]                   L177:
[03250] 0e48: 72 65 61 6c   db 'realloc-3'    ;----- cgdefs
              6c 6f 63 2d 
              33 
[03251] 0e51: 00          	db	$00    ;----- cgdefb
[03252]                   
[03253]                   L178:
[03254]                   	;----- cgldlab
[03255] 0e52: d4 00 00    	 				call epush16
[03256] 0e55: 0e 48       	 				  dw  L177
[03257]                   	;----- cgcall
[03258] 0e57: d4 00 98    	          call  Cfail
[03259]                   	;----- cgstack
[03260] 0e5a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03261] 0e5d: 00 02       	          dw  2  ;--- offset
[03262] 0e5f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03263]                   	;---- queue dpush
[03264]                   	;----- push + pop data not required, data remains unchanged in RA
[03265]                   	;----- end stmt ------
[03266]                   
[03267]                   L175:
[03268]                   	;----- end if
[03269]                   	;----- end stmt ------
[03270]                   	;----- begin stmt ------
[03271]                   	;----- begin for
[03272]                   	;----- cglit
[03273] 0e62: d4 00 00    	 				call epush16
[03274] 0e65: 00 00       	 				  dw 0
[03275]                   	;----- cgstorlw
[03276] 0e67: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03277] 0e6a: ff fc       	          dw  -4  ;--- offset
[03278]                   	;----- cgpopd
[03279] 0e6c: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03280]                   
[03281]                   L179:
[03282]                   	;----- cgldlw
[03283] 0e6f: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03284] 0e72: ff fc       	          dw  -4  ;--- offset
[03285]                   	;----- cglit
[03286] 0e74: d4 00 00    	 				call epush16
[03287] 0e77: 00 61       	 				  dw 97
[03288]                   	;----- queue_cmp
[03289]                   	;----- genbrfalse
[03290]                   	;----- genbranch
[03291]                   	;----- cgbrlt
[03292]                   	;----- cglt
[03293] 0e79: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03294]                   
[03295]                   	;----- cgbrcond
[03296] 0e7c: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03297] 0e7f: 9a          	 				 ghi   ra            ; get MSB from result
[03298] 0e80: 52          	 				 str   r2            ; save in M(X)
[03299] 0e81: 8a          	 				 glo   ra            ; get LSB from result
[03300] 0e82: f1          	 				 or                  ; D = MSB | LSB
[03301] 0e83: ca 0e 89    	lbnz	L183
[03302] 0e86: c0 0e c7    	lbr	L181
[03303]                   
[03304]                   L183:
[03305]                   	;---- queue lbr L180
[03306]                   	;----- cgjump
[03307] 0e89: c0 0e 9c    	 				  lbr	L180
[03308]                   
[03309]                   L182:
[03310]                   	;----- cgldlw
[03311] 0e8c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03312] 0e8f: ff fc       	          dw  -4  ;--- offset
[03313]                   	;----- cginclw
[03314] 0e91: d4 00 00    	          call  linc16       ; increment local variable
[03315] 0e94: ff fc       	          dw  -4  ;--- offset
[03316]                   	;----- cgpopd
[03317] 0e96: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03318]                   	;---- queue lbr L179
[03319]                   	;----- cgjump
[03320] 0e99: c0 0e 6f    	 				  lbr	L179
[03321]                   
[03322]                   L180:
[03323]                   	;----- begin stmt ------
[03324]                   	;----- begin if
[03325]                   	;----- cgldlw
[03326] 0e9c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03327] 0e9f: ff fc       	          dw  -4  ;--- offset
[03328]                   	;----- cgldlw
[03329] 0ea1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03330] 0ea4: ff fe       	          dw  -2  ;--- offset
[03331]                   	;----- cgadd
[03332] 0ea6: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[03333]                   
[03334]                   	;----- cgindb
[03335] 0ea9: d4 00 00    	 				call deref8
[03336]                   	;----- cgldlw
[03337] 0eac: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03338] 0eaf: ff fc       	          dw  -4  ;--- offset
[03339]                   	;----- queue_cmp
[03340]                   	;----- genbrfalse
[03341]                   	;----- genbranch
[03342]                   	;----- cgbrne
[03343]                   	;----- cgne
[03344] 0eb1: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[03345]                   
[03346]                   	;----- cgbrcond
[03347] 0eb4: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03348] 0eb7: 9a          	 				 ghi   ra            ; get MSB from result
[03349] 0eb8: 52          	 				 str   r2            ; save in M(X)
[03350] 0eb9: 8a          	 				 glo   ra            ; get LSB from result
[03351] 0eba: f1          	 				 or                  ; D = MSB | LSB
[03352] 0ebb: ca 0e c1    	lbnz	L185
[03353] 0ebe: c0 0e c4    	lbr	L184
[03354]                   
[03355]                   L185:
[03356]                   	;----- begin stmt ------
[03357]                   	;----- begin break
[03358]                   	;---- queue lbr L181
[03359]                   	;----- end break
[03360]                   	;----- end stmt ------
[03361]                   	;----- cgjump
[03362] 0ec1: c0 0e c7    	 				  lbr	L181
[03363]                   
[03364]                   L184:
[03365]                   	;----- end if
[03366]                   	;----- end stmt ------
[03367]                   	;---- queue lbr L182
[03368]                   	;----- cgjump
[03369] 0ec4: c0 0e 8c    	 				  lbr	L182
[03370]                   
[03371]                   L181:
[03372]                   	;----- end for
[03373]                   	;----- end stmt ------
[03374]                   	;----- begin stmt ------
[03375]                   	;----- begin if
[03376]                   	;----- cgldlw
[03377] 0ec7: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03378] 0eca: ff fc       	          dw  -4  ;--- offset
[03379]                   	;----- cglit
[03380] 0ecc: d4 00 00    	 				call epush16
[03381] 0ecf: 00 61       	 				  dw 97
[03382]                   	;----- queue_cmp
[03383]                   	;----- genbrfalse
[03384]                   	;----- genbranch
[03385]                   	;----- cgbrlt
[03386]                   	;----- cglt
[03387] 0ed1: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03388]                   
[03389]                   	;----- cgbrcond
[03390] 0ed4: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03391] 0ed7: 9a          	 				 ghi   ra            ; get MSB from result
[03392] 0ed8: 52          	 				 str   r2            ; save in M(X)
[03393] 0ed9: 8a          	 				 glo   ra            ; get LSB from result
[03394] 0eda: f1          	 				 or                  ; D = MSB | LSB
[03395] 0edb: ca 0e e1    	lbnz	L187
[03396] 0ede: c0 0e fe    	lbr	L186
[03397]                   
[03398]                   L187:
[03399]                   	;----- begin stmt ------
[03400]                   	;---- queue lbr L189
[03401]                   	;----- cgjump
[03402] 0ee1: c0 0e ee    	 				  lbr	L189
[03403]                   
[03404]                   L188:
[03405] 0ee4: 72 65 61 6c   db 'realloc-4'    ;----- cgdefs
              6c 6f 63 2d 
              34 
[03406] 0eed: 00          	db	$00    ;----- cgdefb
[03407]                   
[03408]                   L189:
[03409]                   	;----- cgldlab
[03410] 0eee: d4 00 00    	 				call epush16
[03411] 0ef1: 0e e4       	 				  dw  L188
[03412]                   	;----- cgcall
[03413] 0ef3: d4 00 98    	          call  Cfail
[03414]                   	;----- cgstack
[03415] 0ef6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03416] 0ef9: 00 02       	          dw  2  ;--- offset
[03417] 0efb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03418]                   	;---- queue dpush
[03419]                   	;----- push + pop data not required, data remains unchanged in RA
[03420]                   	;----- end stmt ------
[03421]                   
[03422]                   L186:
[03423]                   	;----- end if
[03424]                   	;----- end stmt ------
[03425]                   	;----- begin stmt ------
[03426]                   	;----- cgldlw
[03427] 0efe: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03428] 0f01: ff fe       	          dw  -2  ;--- offset
[03429]                   	;----- cgcall
[03430] 0f03: d4 00 00    	          call  Cfree
[03431]                   	;----- cgstack
[03432] 0f06: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03433] 0f09: 00 02       	          dw  2  ;--- offset
[03434] 0f0b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03435]                   	;---- queue dpush
[03436]                   	;----- push + pop data not required, data remains unchanged in RA
[03437]                   	;----- end stmt ------
[03438]                   
[03439]                   L89:
[03440]                   	;----- cgstack
[03441] 0f0e: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03442] 0f11: 00 06       	          dw  6  ;--- offset
[03443] 0f13: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03444]                   	;----- cgexit
[03445] 0f16: e2          	          sex   r2            ; make sure X = SP
[03446] 0f17: d4 00 00    	          call  escheck       ; check for expression stack creep
[03447] 0f1a: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[03448]                   
[03449] 0f1f: d5          	          rtn	  			 	     ; return to caller
[03450]                   	;----- cgpublic
[03451] 0f20:             	              public Cqcmp
[03452]                   Cqcmp:	;---- cgentry
[03453] 0f20: e2          	          sex   r2   				 ; make sure X = SP
[03454] 0f21: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[03455] 0f25: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[03456]                   	;----- begin stmt ------
[03457]                   	;----- begin return
[03458]                   	;----- cgldlw
[03459] 0f29: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03460] 0f2c: 00 00       	          dw  0  ;--- offset
[03461]                   	;----- cgindw
[03462] 0f2e: d4 00 00    	 				call deref16
[03463]                   	;----- cgldlw
[03464] 0f31: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03465] 0f34: 00 02       	          dw  2  ;--- offset
[03466]                   	;----- cgindw
[03467] 0f36: d4 00 00    	 				call deref16
[03468]                   	;----- queue_cmp
[03469]                   	;----- genbrfalse
[03470]                   	;----- genbranch
[03471]                   	;----- cgbrlt
[03472]                   	;----- cglt
[03473] 0f39: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03474]                   
[03475]                   	;----- cgbrcond
[03476] 0f3c: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03477] 0f3f: 9a          	 				 ghi   ra            ; get MSB from result
[03478] 0f40: 52          	 				 str   r2            ; save in M(X)
[03479] 0f41: 8a          	 				 glo   ra            ; get LSB from result
[03480] 0f42: f1          	 				 or                  ; D = MSB | LSB
[03481] 0f43: ca 0f 49    	lbnz	L194
[03482] 0f46: c0 0f 51    	lbr	L191
[03483]                   
[03484]                   L194:
[03485]                   	;----- cglit
[03486] 0f49: d4 00 00    	 				call epush16
[03487] 0f4c: ff ff       	 				  dw -1
[03488]                   	;---- queue lbr L192
[03489]                   	;----- cgjump
[03490] 0f4e: c0 0f 7e    	 				  lbr	L192
[03491]                   
[03492]                   L191:
[03493]                   	;----- cgldlw
[03494] 0f51: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03495] 0f54: 00 00       	          dw  0  ;--- offset
[03496]                   	;----- cgindw
[03497] 0f56: d4 00 00    	 				call deref16
[03498]                   	;----- cgldlw
[03499] 0f59: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03500] 0f5c: 00 02       	          dw  2  ;--- offset
[03501]                   	;----- cgindw
[03502] 0f5e: d4 00 00    	 				call deref16
[03503]                   	;----- queue_cmp
[03504]                   	;----- genbrfalse
[03505]                   	;----- genbranch
[03506]                   	;----- cgbrgt
[03507]                   	;----- cggt
[03508] 0f61: d4 00 00    	          call  gt16				   ; compare TOS > SOS on Expression Stack
[03509]                   
[03510]                   	;----- cgbrcond
[03511] 0f64: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03512] 0f67: 9a          	 				 ghi   ra            ; get MSB from result
[03513] 0f68: 52          	 				 str   r2            ; save in M(X)
[03514] 0f69: 8a          	 				 glo   ra            ; get LSB from result
[03515] 0f6a: f1          	 				 or                  ; D = MSB | LSB
[03516] 0f6b: ca 0f 71    	lbnz	L195
[03517] 0f6e: c0 0f 79    	lbr	L193
[03518]                   
[03519]                   L195:
[03520]                   	;----- cglit
[03521] 0f71: d4 00 00    	 				call epush16
[03522] 0f74: 00 01       	 				  dw 1
[03523]                   	;---- queue lbr L192
[03524]                   	;----- cgjump
[03525] 0f76: c0 0f 7e    	 				  lbr	L192
[03526]                   
[03527]                   L193:
[03528]                   	;----- cglit
[03529] 0f79: d4 00 00    	 				call epush16
[03530] 0f7c: 00 00       	 				  dw 0
[03531]                   
[03532]                   L192:
[03533]                   	;----- cgpopd
[03534] 0f7e: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03535]                   	;---- queue lbr L190
[03536]                   	;----- end return
[03537]                   	;----- end stmt ------
[03538]                   	;---- lbr L190 falls through
[03539]                   
[03540]                   L190:
[03541]                   	;----- cgexit
[03542] 0f81: e2          	          sex   r2            ; make sure X = SP
[03543] 0f82: d4 00 00    	          call  escheck       ; check for expression stack creep
[03544] 0f85: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[03545]                   
[03546] 0f8a: d5          	          rtn	  			 	     ; return to caller
[03547]                   	;----- cgpublic
[03548] 0f8b:             	              public Ctest_sort
[03549]                   Ctest_sort:	;---- cgentry
[03550] 0f8b: e2          	          sex   r2   				 ; make sure X = SP
[03551] 0f8c: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[03552] 0f90: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[03553]                   	;----- cgstack
[03554] 0f94: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03555] 0f97: ff fc       	          dw  -4  ;--- offset
[03556] 0f99: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03557]                   	;----- begin stmt ------
[03558]                   	;---- queue lbr L198
[03559]                   	;----- cgjump
[03560] 0f9c: c0 0f a5    	 				  lbr	L198
[03561]                   
[03562]                   L197:
[03563] 0f9f: 71 73 6f 72   db 'qsort'    ;----- cgdefs
              74 
[03564] 0fa4: 00          	db	$00    ;----- cgdefb
[03565]                   
[03566]                   L198:
[03567]                   	;----- cgldlab
[03568] 0fa5: d4 00 00    	 				call epush16
[03569] 0fa8: 0f 9f       	 				  dw  L197
[03570]                   	;----- cgcall
[03571] 0faa: d4 00 e8    	          call  Cpr
[03572]                   	;----- cgstack
[03573] 0fad: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03574] 0fb0: 00 02       	          dw  2  ;--- offset
[03575] 0fb2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03576]                   	;---- queue dpush
[03577]                   	;----- push + pop data not required, data remains unchanged in RA
[03578]                   	;----- end stmt ------
[03579]                   	;----- begin stmt ------
[03580]                   	;----- begin for
[03581]                   	;----- cglit
[03582] 0fb5: d4 00 00    	 				call epush16
[03583] 0fb8: 00 00       	 				  dw 0
[03584]                   	;----- cgstorlw
[03585] 0fba: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03586] 0fbd: ff fe       	          dw  -2  ;--- offset
[03587]                   	;----- cgpopd
[03588] 0fbf: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03589]                   
[03590]                   L199:
[03591]                   	;----- cgldlw
[03592] 0fc2: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03593] 0fc5: ff fe       	          dw  -2  ;--- offset
[03594]                   	;----- cglit
[03595] 0fc7: d4 00 00    	 				call epush16
[03596] 0fca: 00 20       	 				  dw 32
[03597]                   	;----- queue_cmp
[03598]                   	;----- genbrfalse
[03599]                   	;----- genbranch
[03600]                   	;----- cgbrlt
[03601]                   	;----- cglt
[03602] 0fcc: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03603]                   
[03604]                   	;----- cgbrcond
[03605] 0fcf: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03606] 0fd2: 9a          	 				 ghi   ra            ; get MSB from result
[03607] 0fd3: 52          	 				 str   r2            ; save in M(X)
[03608] 0fd4: 8a          	 				 glo   ra            ; get LSB from result
[03609] 0fd5: f1          	 				 or                  ; D = MSB | LSB
[03610] 0fd6: ca 0f dc    	lbnz	L203
[03611] 0fd9: c0 10 1b    	lbr	L201
[03612]                   
[03613]                   L203:
[03614]                   	;---- queue lbr L200
[03615]                   	;----- cgjump
[03616] 0fdc: c0 0f ef    	 				  lbr	L200
[03617]                   
[03618]                   L202:
[03619]                   	;----- cgldlw
[03620] 0fdf: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03621] 0fe2: ff fe       	          dw  -2  ;--- offset
[03622]                   	;----- cginclw
[03623] 0fe4: d4 00 00    	          call  linc16       ; increment local variable
[03624] 0fe7: ff fe       	          dw  -2  ;--- offset
[03625]                   	;----- cgpopd
[03626] 0fe9: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03627]                   	;---- queue lbr L199
[03628]                   	;----- cgjump
[03629] 0fec: c0 0f c2    	 				  lbr	L199
[03630]                   
[03631]                   L200:
[03632]                   	;----- begin stmt ------
[03633]                   	;----- cgldga
[03634] 0fef: d4 00 00    	 				call epush16
[03635] 0ff2: 00 56       	 				  dw Cnum
[03636]                   	;----- cgldlw
[03637] 0ff4: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03638] 0ff7: ff fe       	          dw  -2  ;--- offset
[03639]                   	;----- cgscale
[03640] 0ff9: d4 00 00    	 				call scltos2
[03641]                   	;----- cgadd
[03642] 0ffc: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[03643]                   
[03644]                   	;----- cglit
[03645] 0fff: d4 00 00    	 				call epush16
[03646] 1002: 00 20       	 				  dw 32
[03647]                   	;----- cgldlw
[03648] 1004: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03649] 1007: ff fe       	          dw  -2  ;--- offset
[03650]                   	;----- cgsub
[03651] 1009: d4 00 00    	          call  sub16				 ; subtract TOS from SOS on Expression Stack
[03652]                   
[03653]                   	;----- cgpopptr
[03654] 100c: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[03655] 100f: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[03656]                   	;----- cgstoriw
[03657] 1012: d4 00 00    	          call  pstor16       ; store value from ES in pointer variable
[03658]                   	;----- cgpopd
[03659] 1015: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03660]                   	;----- end stmt ------
[03661]                   	;---- queue lbr L202
[03662]                   	;----- cgjump
[03663] 1018: c0 0f df    	 				  lbr	L202
[03664]                   
[03665]                   L201:
[03666]                   	;----- end for
[03667]                   	;----- end stmt ------
[03668]                   	;----- begin stmt ------
[03669]                   	;----- cgldga
[03670] 101b: d4 00 00    	 				call epush16
[03671] 101e: 0f 20       	 				  dw Cqcmp
[03672]                   	;----- cglit
[03673] 1020: d4 00 00    	 				call epush16
[03674] 1023: 00 02       	 				  dw 2
[03675]                   	;----- cglit
[03676] 1025: d4 00 00    	 				call epush16
[03677] 1028: 00 20       	 				  dw 32
[03678]                   	;----- cgldga
[03679] 102a: d4 00 00    	 				call epush16
[03680] 102d: 00 56       	 				  dw Cnum
[03681]                   	;----- cgcall
[03682] 102f: d4 00 00    	          call  Cqsort
[03683]                   	;----- cgstack
[03684] 1032: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03685] 1035: 00 08       	          dw  8  ;--- offset
[03686] 1037: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03687]                   	;---- queue dpush
[03688]                   	;----- push + pop data not required, data remains unchanged in RA
[03689]                   	;----- end stmt ------
[03690]                   	;----- begin stmt ------
[03691]                   	;----- begin for
[03692]                   	;----- cglit
[03693] 103a: d4 00 00    	 				call epush16
[03694] 103d: 00 00       	 				  dw 0
[03695]                   	;----- cgstorlw
[03696] 103f: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03697] 1042: ff fe       	          dw  -2  ;--- offset
[03698]                   	;----- cgstorlw
[03699] 1044: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03700] 1047: ff fc       	          dw  -4  ;--- offset
[03701]                   	;----- cgpopd
[03702] 1049: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03703]                   
[03704]                   L204:
[03705]                   	;----- cgldlw
[03706] 104c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03707] 104f: ff fe       	          dw  -2  ;--- offset
[03708]                   	;----- cglit
[03709] 1051: d4 00 00    	 				call epush16
[03710] 1054: 00 20       	 				  dw 32
[03711]                   	;----- queue_cmp
[03712]                   	;----- genbrfalse
[03713]                   	;----- genbranch
[03714]                   	;----- cgbrlt
[03715]                   	;----- cglt
[03716] 1056: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03717]                   
[03718]                   	;----- cgbrcond
[03719] 1059: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03720] 105c: 9a          	 				 ghi   ra            ; get MSB from result
[03721] 105d: 52          	 				 str   r2            ; save in M(X)
[03722] 105e: 8a          	 				 glo   ra            ; get LSB from result
[03723] 105f: f1          	 				 or                  ; D = MSB | LSB
[03724] 1060: ca 10 66    	lbnz	L208
[03725] 1063: c0 10 dd    	lbr	L206
[03726]                   
[03727]                   L208:
[03728]                   	;---- queue lbr L205
[03729]                   	;----- cgjump
[03730] 1066: c0 10 79    	 				  lbr	L205
[03731]                   
[03732]                   L207:
[03733]                   	;----- cgldlw
[03734] 1069: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03735] 106c: ff fe       	          dw  -2  ;--- offset
[03736]                   	;----- cginclw
[03737] 106e: d4 00 00    	          call  linc16       ; increment local variable
[03738] 1071: ff fe       	          dw  -2  ;--- offset
[03739]                   	;----- cgpopd
[03740] 1073: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03741]                   	;---- queue lbr L204
[03742]                   	;----- cgjump
[03743] 1076: c0 10 4c    	 				  lbr	L204
[03744]                   
[03745]                   L205:
[03746]                   	;----- begin stmt ------
[03747]                   	;----- begin stmt ------
[03748]                   	;----- begin if
[03749]                   	;----- cgldga
[03750] 1079: d4 00 00    	 				call epush16
[03751] 107c: 00 56       	 				  dw Cnum
[03752]                   	;----- cgldlw
[03753] 107e: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03754] 1081: ff fe       	          dw  -2  ;--- offset
[03755]                   	;----- cgscale
[03756] 1083: d4 00 00    	 				call scltos2
[03757]                   	;----- cgadd
[03758] 1086: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[03759]                   
[03760]                   	;----- cgindw
[03761] 1089: d4 00 00    	 				call deref16
[03762]                   	;----- cgldlw
[03763] 108c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03764] 108f: ff fc       	          dw  -4  ;--- offset
[03765]                   	;----- queue_cmp
[03766]                   	;----- genbrfalse
[03767]                   	;----- genbranch
[03768]                   	;----- cgbrlt
[03769]                   	;----- cglt
[03770] 1091: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[03771]                   
[03772]                   	;----- cgbrcond
[03773] 1094: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03774] 1097: 9a          	 				 ghi   ra            ; get MSB from result
[03775] 1098: 52          	 				 str   r2            ; save in M(X)
[03776] 1099: 8a          	 				 glo   ra            ; get LSB from result
[03777] 109a: f1          	 				 or                  ; D = MSB | LSB
[03778] 109b: ca 10 a1    	lbnz	L210
[03779] 109e: c0 10 bf    	lbr	L209
[03780]                   
[03781]                   L210:
[03782]                   	;----- begin stmt ------
[03783]                   	;----- begin stmt ------
[03784]                   	;---- queue lbr L212
[03785]                   	;----- cgjump
[03786] 10a1: c0 10 ac    	 				  lbr	L212
[03787]                   
[03788]                   L211:
[03789] 10a4: 71 73 6f 72   db 'qsort-1'    ;----- cgdefs
              74 2d 31 
[03790] 10ab: 00          	db	$00    ;----- cgdefb
[03791]                   
[03792]                   L212:
[03793]                   	;----- cgldlab
[03794] 10ac: d4 00 00    	 				call epush16
[03795] 10af: 10 a4       	 				  dw  L211
[03796]                   	;----- cgcall
[03797] 10b1: d4 00 98    	          call  Cfail
[03798]                   	;----- cgstack
[03799] 10b4: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03800] 10b7: 00 02       	          dw  2  ;--- offset
[03801] 10b9: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03802]                   	;---- queue dpush
[03803]                   	;----- push + pop data not required, data remains unchanged in RA
[03804]                   	;----- end stmt ------
[03805]                   	;----- begin stmt ------
[03806]                   	;----- begin break
[03807]                   	;---- queue lbr L206
[03808]                   	;----- end break
[03809]                   	;----- end stmt ------
[03810]                   	;----- end stmt ------
[03811]                   	;----- cgjump
[03812] 10bc: c0 10 dd    	 				  lbr	L206
[03813]                   
[03814]                   L209:
[03815]                   	;----- end if
[03816]                   	;----- end stmt ------
[03817]                   	;----- begin stmt ------
[03818]                   	;----- cgldga
[03819] 10bf: d4 00 00    	 				call epush16
[03820] 10c2: 00 56       	 				  dw Cnum
[03821]                   	;----- cgldlw
[03822] 10c4: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03823] 10c7: ff fe       	          dw  -2  ;--- offset
[03824]                   	;----- cgscale
[03825] 10c9: d4 00 00    	 				call scltos2
[03826]                   	;----- cgadd
[03827] 10cc: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[03828]                   
[03829]                   	;----- cgindw
[03830] 10cf: d4 00 00    	 				call deref16
[03831]                   	;----- cgstorlw
[03832] 10d2: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03833] 10d5: ff fc       	          dw  -4  ;--- offset
[03834]                   	;----- cgpopd
[03835] 10d7: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03836]                   	;----- end stmt ------
[03837]                   	;----- end stmt ------
[03838]                   	;---- queue lbr L207
[03839]                   	;----- cgjump
[03840] 10da: c0 10 69    	 				  lbr	L207
[03841]                   
[03842]                   L206:
[03843]                   	;----- end for
[03844]                   	;----- end stmt ------
[03845]                   
[03846]                   L196:
[03847]                   	;----- cgstack
[03848] 10dd: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03849] 10e0: 00 04       	          dw  4  ;--- offset
[03850] 10e2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03851]                   	;----- cgexit
[03852] 10e5: e2          	          sex   r2            ; make sure X = SP
[03853] 10e6: d4 00 00    	          call  escheck       ; check for expression stack creep
[03854] 10e9: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[03855]                   
[03856] 10ee: d5          	          rtn	  			 	     ; return to caller
[03857] 10ef: 02 00       Ctest_array:	db	$02, $00  ;----- cgdefw LSB first, MSB second
[03858] 10f1: 03 00       	db	$03, $00  ;----- cgdefw LSB first, MSB second
[03859] 10f3: 05 00       	db	$05, $00  ;----- cgdefw LSB first, MSB second
[03860] 10f5: 07 00       	db	$07, $00  ;----- cgdefw LSB first, MSB second
[03861] 10f7: 0b 00       	db	$0b, $00  ;----- cgdefw LSB first, MSB second
[03862] 10f9: 0d 00       	db	$0d, $00  ;----- cgdefw LSB first, MSB second
[03863] 10fb: 11 00       	db	$11, $00  ;----- cgdefw LSB first, MSB second
[03864] 10fd: 13 00       	db	$13, $00  ;----- cgdefw LSB first, MSB second
[03865] 10ff: 17 00       	db	$17, $00  ;----- cgdefw LSB first, MSB second
[03866] 1101: 1b 00       	db	$1b, $00  ;----- cgdefw LSB first, MSB second
[03867]                   	;----- cgpublic
[03868] 1103:             	              public Ctest_array
[03869]                   	;----- cgpublic
[03870] 1103:             	              public Ctest_search
[03871]                   Ctest_search:	;---- cgentry
[03872] 1103: e2          	          sex   r2   				 ; make sure X = SP
[03873] 1104: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[03874] 1108: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[03875]                   	;----- cgstack
[03876] 110c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03877] 110f: ff fc       	          dw  -4  ;--- offset
[03878] 1111: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03879]                   	;----- begin stmt ------
[03880]                   	;---- queue lbr L215
[03881]                   	;----- cgjump
[03882] 1114: c0 11 1f    	 				  lbr	L215
[03883]                   
[03884]                   L214:
[03885] 1117: 62 73 65 61   db 'bsearch'    ;----- cgdefs
              72 63 68 
[03886] 111e: 00          	db	$00    ;----- cgdefb
[03887]                   
[03888]                   L215:
[03889]                   	;----- cgldlab
[03890] 111f: d4 00 00    	 				call epush16
[03891] 1122: 11 17       	 				  dw  L214
[03892]                   	;----- cgcall
[03893] 1124: d4 00 e8    	          call  Cpr
[03894]                   	;----- cgstack
[03895] 1127: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03896] 112a: 00 02       	          dw  2  ;--- offset
[03897] 112c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03898]                   	;---- queue dpush
[03899]                   	;----- push + pop data not required, data remains unchanged in RA
[03900]                   	;----- end stmt ------
[03901]                   	;----- begin stmt ------
[03902]                   	;----- cglit
[03903] 112f: d4 00 00    	 				call epush16
[03904] 1132: 00 0d       	 				  dw 13
[03905]                   	;----- cgstorlw
[03906] 1134: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03907] 1137: ff fe       	          dw  -2  ;--- offset
[03908]                   	;----- cgpopd
[03909] 1139: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[03910]                   	;----- end stmt ------
[03911]                   	;----- begin stmt ------
[03912]                   	;----- begin if
[03913]                   	;----- cgldga
[03914] 113c: d4 00 00    	 				call epush16
[03915] 113f: 0f 20       	 				  dw Cqcmp
[03916]                   	;----- cglit
[03917] 1141: d4 00 00    	 				call epush16
[03918] 1144: 00 02       	 				  dw 2
[03919]                   	;----- cglit
[03920] 1146: d4 00 00    	 				call epush16
[03921] 1149: 00 0a       	 				  dw 10
[03922]                   	;----- cgldga
[03923] 114b: d4 00 00    	 				call epush16
[03924] 114e: 10 ef       	 				  dw Ctest_array
[03925]                   	;----- cgldla
[03926] 1150: d4 00 00    	          call  laddr16       ; push address of local variable on ES
[03927] 1153: ff fe       	          dw  -2  ;--- offset
[03928]                   	;----- cgcall
[03929] 1155: d4 00 00    	          call  Cbsearch
[03930]                   	;----- cgstack
[03931] 1158: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03932] 115b: 00 0a       	          dw  10  ;--- offset
[03933] 115d: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03934]                   	;---- queue dpush
[03935]                   	;------ commit push
[03936]                   	;----- cgpushd
[03937] 1160: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[03938]                   	;----- cgstorlw
[03939] 1163: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[03940] 1166: ff fc       	          dw  -4  ;--- offset
[03941]                   	;----- cglit
[03942] 1168: d4 00 00    	 				call epush16
[03943] 116b: 00 00       	 				  dw 0
[03944]                   	;----- queue_cmp
[03945]                   	;----- genbrfalse
[03946]                   	;----- genbranch
[03947]                   	;----- cgbreq
[03948]                   	;----- cgeq
[03949] 116d: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[03950]                   
[03951]                   	;----- cgbrcond
[03952] 1170: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[03953] 1173: 9a          	 				 ghi   ra            ; get MSB from result
[03954] 1174: 52          	 				 str   r2            ; save in M(X)
[03955] 1175: 8a          	 				 glo   ra            ; get LSB from result
[03956] 1176: f1          	 				 or                  ; D = MSB | LSB
[03957] 1177: ca 11 7d    	lbnz	L217
[03958] 117a: c0 11 9a    	lbr	L216
[03959]                   
[03960]                   L217:
[03961]                   	;----- begin stmt ------
[03962]                   	;---- queue lbr L219
[03963]                   	;----- cgjump
[03964] 117d: c0 11 8a    	 				  lbr	L219
[03965]                   
[03966]                   L218:
[03967] 1180: 62 73 65 61   db 'bsearch-1'    ;----- cgdefs
              72 63 68 2d 
              31 
[03968] 1189: 00          	db	$00    ;----- cgdefb
[03969]                   
[03970]                   L219:
[03971]                   	;----- cgldlab
[03972] 118a: d4 00 00    	 				call epush16
[03973] 118d: 11 80       	 				  dw  L218
[03974]                   	;----- cgcall
[03975] 118f: d4 00 98    	          call  Cfail
[03976]                   	;----- cgstack
[03977] 1192: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[03978] 1195: 00 02       	          dw  2  ;--- offset
[03979] 1197: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[03980]                   	;---- queue dpush
[03981]                   	;----- push + pop data not required, data remains unchanged in RA
[03982]                   	;----- end stmt ------
[03983]                   
[03984]                   L216:
[03985]                   	;----- end if
[03986]                   	;----- end stmt ------
[03987]                   	;----- begin stmt ------
[03988]                   	;----- begin if
[03989]                   	;----- cgldlw
[03990] 119a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[03991] 119d: ff fc       	          dw  -4  ;--- offset
[03992]                   	;----- cgindw
[03993] 119f: d4 00 00    	 				call deref16
[03994]                   	;----- cglit
[03995] 11a2: d4 00 00    	 				call epush16
[03996] 11a5: 00 0d       	 				  dw 13
[03997]                   	;----- queue_cmp
[03998]                   	;----- genbrfalse
[03999]                   	;----- genbranch
[04000]                   	;----- cgbrne
[04001]                   	;----- cgne
[04002] 11a7: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[04003]                   
[04004]                   	;----- cgbrcond
[04005] 11aa: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[04006] 11ad: 9a          	 				 ghi   ra            ; get MSB from result
[04007] 11ae: 52          	 				 str   r2            ; save in M(X)
[04008] 11af: 8a          	 				 glo   ra            ; get LSB from result
[04009] 11b0: f1          	 				 or                  ; D = MSB | LSB
[04010] 11b1: ca 11 b7    	lbnz	L221
[04011] 11b4: c0 11 d4    	lbr	L220
[04012]                   
[04013]                   L221:
[04014]                   	;----- begin stmt ------
[04015]                   	;---- queue lbr L223
[04016]                   	;----- cgjump
[04017] 11b7: c0 11 c4    	 				  lbr	L223
[04018]                   
[04019]                   L222:
[04020] 11ba: 62 73 65 61   db 'bsearch-2'    ;----- cgdefs
              72 63 68 2d 
              32 
[04021] 11c3: 00          	db	$00    ;----- cgdefb
[04022]                   
[04023]                   L223:
[04024]                   	;----- cgldlab
[04025] 11c4: d4 00 00    	 				call epush16
[04026] 11c7: 11 ba       	 				  dw  L222
[04027]                   	;----- cgcall
[04028] 11c9: d4 00 98    	          call  Cfail
[04029]                   	;----- cgstack
[04030] 11cc: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[04031] 11cf: 00 02       	          dw  2  ;--- offset
[04032] 11d1: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[04033]                   	;---- queue dpush
[04034]                   	;----- push + pop data not required, data remains unchanged in RA
[04035]                   	;----- end stmt ------
[04036]                   
[04037]                   L220:
[04038]                   	;----- end if
[04039]                   	;----- end stmt ------
[04040]                   	;----- begin stmt ------
[04041]                   	;----- cglit
[04042] 11d4: d4 00 00    	 				call epush16
[04043] 11d7: 00 0f       	 				  dw 15
[04044]                   	;----- cgstorlw
[04045] 11d9: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[04046] 11dc: ff fe       	          dw  -2  ;--- offset
[04047]                   	;----- cgpopd
[04048] 11de: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[04049]                   	;----- end stmt ------
[04050]                   	;----- begin stmt ------
[04051]                   	;----- begin if
[04052]                   	;----- cgldga
[04053] 11e1: d4 00 00    	 				call epush16
[04054] 11e4: 0f 20       	 				  dw Cqcmp
[04055]                   	;----- cglit
[04056] 11e6: d4 00 00    	 				call epush16
[04057] 11e9: 00 02       	 				  dw 2
[04058]                   	;----- cglit
[04059] 11eb: d4 00 00    	 				call epush16
[04060] 11ee: 00 0a       	 				  dw 10
[04061]                   	;----- cgldga
[04062] 11f0: d4 00 00    	 				call epush16
[04063] 11f3: 10 ef       	 				  dw Ctest_array
[04064]                   	;----- cgldla
[04065] 11f5: d4 00 00    	          call  laddr16       ; push address of local variable on ES
[04066] 11f8: ff fe       	          dw  -2  ;--- offset
[04067]                   	;----- cgcall
[04068] 11fa: d4 00 00    	          call  Cbsearch
[04069]                   	;----- cgstack
[04070] 11fd: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[04071] 1200: 00 0a       	          dw  10  ;--- offset
[04072] 1202: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[04073]                   	;---- queue dpush
[04074]                   	;------ commit push
[04075]                   	;----- cgpushd
[04076] 1205: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[04077]                   	;----- cglit
[04078] 1208: d4 00 00    	 				call epush16
[04079] 120b: 00 00       	 				  dw 0
[04080]                   	;----- queue_cmp
[04081]                   	;----- genbrfalse
[04082]                   	;----- genbranch
[04083]                   	;----- cgbrne
[04084]                   	;----- cgne
[04085] 120d: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[04086]                   
[04087]                   	;----- cgbrcond
[04088] 1210: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[04089] 1213: 9a          	 				 ghi   ra            ; get MSB from result
[04090] 1214: 52          	 				 str   r2            ; save in M(X)
[04091] 1215: 8a          	 				 glo   ra            ; get LSB from result
[04092] 1216: f1          	 				 or                  ; D = MSB | LSB
[04093] 1217: ca 12 1d    	lbnz	L225
[04094] 121a: c0 12 3a    	lbr	L224
[04095]                   
[04096]                   L225:
[04097]                   	;----- begin stmt ------
[04098]                   	;---- queue lbr L227
[04099]                   	;----- cgjump
[04100] 121d: c0 12 2a    	 				  lbr	L227
[04101]                   
[04102]                   L226:
[04103] 1220: 62 73 65 61   db 'bsearch-3'    ;----- cgdefs
              72 63 68 2d 
              33 
[04104] 1229: 00          	db	$00    ;----- cgdefb
[04105]                   
[04106]                   L227:
[04107]                   	;----- cgldlab
[04108] 122a: d4 00 00    	 				call epush16
[04109] 122d: 12 20       	 				  dw  L226
[04110]                   	;----- cgcall
[04111] 122f: d4 00 98    	          call  Cfail
[04112]                   	;----- cgstack
[04113] 1232: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[04114] 1235: 00 02       	          dw  2  ;--- offset
[04115] 1237: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[04116]                   	;---- queue dpush
[04117]                   	;----- push + pop data not required, data remains unchanged in RA
[04118]                   	;----- end stmt ------
[04119]                   
[04120]                   L224:
[04121]                   	;----- end if
[04122]                   	;----- end stmt ------
[04123]                   
[04124]                   L213:
[04125]                   	;----- cgstack
[04126] 123a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[04127] 123d: 00 04       	          dw  4  ;--- offset
[04128] 123f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[04129]                   	;----- cgexit
[04130] 1242: e2          	          sex   r2            ; make sure X = SP
[04131] 1243: d4 00 00    	          call  escheck       ; check for expression stack creep
[04132] 1246: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[04133]                   
[04134] 124b: d5          	          rtn	  			 	     ; return to caller
[04135]                   	;----- cgpublic
[04136] 124c:             	              public Cmain
[04137]                   Cmain:
[04138]                     ;----- cgsetup
[04141]                   #endif
[04142]                   	;---- cgentry
[04143] 124c: e2          	          sex   r2   				 ; make sure X = SP
[04144] 124d: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[04145] 1251: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[04146]                   	;----- begin stmt ------
[04147]                   	;----- cgcall
[04148] 1255: d4 01 17    	          call  Ctest_memfn
[04149]                   	;---- queue dpush
[04150]                   	;----- push + pop data not required, data remains unchanged in RA
[04151]                   	;----- end stmt ------
[04152]                   	;----- begin stmt ------
[04153]                   	;----- cgcall
[04154] 1258: d4 08 a0    	          call  Ctest_dmem
[04155]                   	;---- queue dpush
[04156]                   	;----- push + pop data not required, data remains unchanged in RA
[04157]                   	;----- end stmt ------
[04158]                   	;----- begin stmt ------
[04159]                   	;----- cgcall
[04160] 125b: d4 0f 8b    	          call  Ctest_sort
[04161]                   	;---- queue dpush
[04162]                   	;----- push + pop data not required, data remains unchanged in RA
[04163]                   	;----- end stmt ------
[04164]                   	;----- begin stmt ------
[04165]                   	;----- cgcall
[04166] 125e: d4 11 03    	          call  Ctest_search
[04167]                   	;---- queue dpush
[04168]                   	;----- push + pop data not required, data remains unchanged in RA
[04169]                   	;----- end stmt ------
[04170]                   	;----- begin stmt ------
[04171]                   	;----- begin return
[04172]                   	;----- cgldgw
[04173] 1261: d4 00 00    	 				call vpush16
[04174] 1264: 00 96       	 				  dw Cresult
[04175]                   	;----- cgpopd
[04176] 1266: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[04177]                   	;---- queue lbr L228
[04178]                   	;----- end return
[04179]                   	;----- end stmt ------
[04180]                   	;---- lbr L228 falls through
[04181]                   
[04182]                   L228:
[04183]                   	;----- cgexit
[04184] 1269: e2          	          sex   r2            ; make sure X = SP
[04185] 126a: d4 00 00    	          call  escheck       ; check for expression stack creep
[04186] 126d: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[04187]                   
[04188] 1272: d5          	          rtn	  			 	     ; return to caller
[04189]                   	;---- cgpostlude
[04190] 1273:             	             endp
