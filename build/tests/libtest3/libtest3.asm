; -------------------------------------------------------------------
; This file generated by ElfC, based on SubC
; SubC Copyright 2012-2025 by Nils Holm
; -------------------------------------------------------------------
#include include/ops_c.inc
#include include/bios.inc
#include include/kernel.inc
#include include/elfc.inc

	           proc libtest3

            extrn C_init

            extrn C_fdinit

            extrn C_fdtable

            extrn C_fildes

            extrn Cabort

            extrn Cabs

            extrn Catexit      

            extrn Cexit            

            extrn Cmalloc

            extrn Ccalloc 

            extrn Crealloc

            extrn Cfree  

            extrn Catoi 

            extrn Citoa           

            extrn Citox

            extrn Citou           

            extrn Cdiv 

            extrn Cbsearch              

            extrn Cqsort

            extrn Crand

            extrn Csrand

            extrn Ccreat

            extrn Copen

            extrn Cclose

            extrn Cread

            extrn Cwrite

            extrn Clseek

            extrn Cunlink

            extrn Crename

            extrn Cmin

            extrn Cmax

            extrn Cstdin

            extrn Cstdout

            extrn Cstderr

            extrn Cputs

            extrn Cputstr

            extrn Cgets

            extrn Cputch

            extrn Cgetch

            extrn Cputchar

            extrn Cgetchar

            extrn Cfdopen

            extrn Cfclose

            extrn Cfopen

            extrn Cferror

            extrn Cfeof

            extrn Cclearerr

            extrn Cfgetc

            extrn Cfputc

            extrn Cfgets

            extrn Cfputs

            extrn Cungetc

            extrn Cfread

            extrn Cfwrite

            extrn Cfflush

            extrn Cfprintf

            extrn Ckprintf

            extrn Cprintf

            extrn Csprintf

            extrn Cvfprintf

            extrn Cvprintf

            extrn Cvsprintf

            extrn Cfscanf

            extrn Cscanf

            extrn Csscanf

            extrn Cfgetpos

            extrn Cfsetpos

            extrn Cfseek

            extrn Cftell

            extrn Cperror

            extrn Crewind

            extrn Cremove

            extrn Ctmpnam

            extrn Ctmpfile

            extrn Cfileno

.link .library string.lib

            extrn Cmemchr

            extrn Cmemcmp

            extrn Cmemcpy

            extrn Cmemmove

            extrn Cmemset

            extrn Cstrcat

            extrn Cstrchr

            extrn Cstrcmp

            extrn Cstrcpy

            extrn Cstrcspn

            extrn Cstrdup

            extrn Cstrerror

            extrn Cstrlen

            extrn Cstrncat

            extrn Cstrncmp

            extrn Cstrncpy

            extrn Cstrlcpy

            extrn Cstrpbrk

            extrn Cstrrchr

            extrn Cstrspn

            extrn Cstrstr

            extrn Cstrtok

.link .library ctype.lib

.link .requires Cctype

            extrn  Cisalnum 

            extrn  Cisalpha

            extrn  Ciscntrl

            extrn  Cisdigit

            extrn  Cisgraph

            extrn  Cislower

            extrn  Cisprint

            extrn  Cispunct

            extrn  Cisspace

            extrn  Cisupper

            extrn  Cisxdigit

            extrn  Ctolower

            extrn  Ctoupper
	;----- cgpublic
	              public CErrors
CErrors:	db	$00, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Cv1
Cv1:    ds 64    ;----- cggbss
	;----- cgpublic
	              public Cresult
Cresult:	db	$00, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Cfail
Cfail:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;---- queue lbr L3
	;----- cgjump
	 				  lbr	L3

L2:
  db '%s failed', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L3:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L2
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CErrors
	;----- cgincgw
	 				 call vinc16       ; increment global variable
	 				  dw CErrors
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cresult
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------

L1:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Cpr
Cpr:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;---- queue lbr L6
	;----- cgjump
	 				  lbr	L6

L5:
  db '%s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L6:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L5
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L4:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Cxstrchr
Cxstrchr:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;----- begin if
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  2  ;--- offset
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbreq
	;----- cgeq
	          call  eq16				   ; compare TOS == SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L9
	lbr	L8

L9:
	;----- begin stmt ------
	;----- begin return
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L7
	;----- end return
	;----- end stmt ------
	;----- cgjump
	 				  lbr	L7

L8:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin return
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  2  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgcall
	          call  Cstrchr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;---- queue lbr L7
	;----- end return
	;----- end stmt ------
	;---- lbr L7 falls through

L7:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Ctest_str
Ctest_str:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  -2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- begin stmt ------
	;---- queue lbr L12
	;----- cgjump
	 				  lbr	L12

L11:
  db 'strlen'    ;----- cgdefs
	db	$00    ;----- cgdefb

L12:
	;----- cgldlab
	 				call epush16
	 				  dw  L11
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L14
	;----- cgjump
	 				  lbr	L14

L13:
  db 0    ;----- cgdefs
	db	$00    ;----- cgdefb

L14:
	;----- cgldlab
	 				call epush16
	 				  dw  L13
	;----- cgcall
	          call  Cstrlen
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L16
	lbr	L15

L16:
	;----- begin stmt ------
	;---- queue lbr L18
	;----- cgjump
	 				  lbr	L18

L17:
  db 'strlen-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L18:
	;----- cgldlab
	 				call epush16
	 				  dw  L17
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L15:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L20
	;----- cgjump
	 				  lbr	L20

L19:
  db '0123456789abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L20:
	;----- cgldlab
	 				call epush16
	 				  dw  L19
	;----- cgcall
	          call  Cstrlen
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 16
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L22
	lbr	L21

L22:
	;----- begin stmt ------
	;---- queue lbr L24
	;----- cgjump
	 				  lbr	L24

L23:
  db 'strlen-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L24:
	;----- cgldlab
	 				call epush16
	 				  dw  L23
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L21:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L26
	;----- cgjump
	 				  lbr	L26

L25:
  db 'strcmp'    ;----- cgdefs
	db	$00    ;----- cgdefb

L26:
	;----- cgldlab
	 				call epush16
	 				  dw  L25
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L28
	;----- cgjump
	 				  lbr	L28

L27:
  db 0    ;----- cgdefs
	db	$00    ;----- cgdefb

L28:
	;---- queue lbr L30
	;----- cgjump
	 				  lbr	L30

L29:
  db 0    ;----- cgdefs
	db	$00    ;----- cgdefb

L30:
	;----- cgldlab
	 				call epush16
	 				  dw  L29
	;----- cgldlab
	 				call epush16
	 				  dw  L27
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L31           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L33
	;----- cgjump
	 				  lbr	L33

L32:
  db 'strcmp-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L33:
	;----- cgldlab
	 				call epush16
	 				  dw  L32
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L31:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L35
	;----- cgjump
	 				  lbr	L35

L34:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L35:
	;---- queue lbr L37
	;----- cgjump
	 				  lbr	L37

L36:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L37:
	;----- cgldlab
	 				call epush16
	 				  dw  L36
	;----- cgldlab
	 				call epush16
	 				  dw  L34
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L38           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L40
	;----- cgjump
	 				  lbr	L40

L39:
  db 'strcmp-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L40:
	;----- cgldlab
	 				call epush16
	 				  dw  L39
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L38:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L42
	;----- cgjump
	 				  lbr	L42

L41:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L42:
	;---- queue lbr L44
	;----- cgjump
	 				  lbr	L44

L43:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L44:
	;----- cgldlab
	 				call epush16
	 				  dw  L43
	;----- cgldlab
	 				call epush16
	 				  dw  L41
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw -103
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L46
	lbr	L45

L46:
	;----- begin stmt ------
	;---- queue lbr L48
	;----- cgjump
	 				  lbr	L48

L47:
  db 'strcmp-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L48:
	;----- cgldlab
	 				call epush16
	 				  dw  L47
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L45:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L50
	;----- cgjump
	 				  lbr	L50

L49:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L50:
	;---- queue lbr L52
	;----- cgjump
	 				  lbr	L52

L51:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L52:
	;----- cgldlab
	 				call epush16
	 				  dw  L51
	;----- cgldlab
	 				call epush16
	 				  dw  L49
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 103
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L54
	lbr	L53

L54:
	;----- begin stmt ------
	;---- queue lbr L56
	;----- cgjump
	 				  lbr	L56

L55:
  db 'strcmp-4'    ;----- cgdefs
	db	$00    ;----- cgdefb

L56:
	;----- cgldlab
	 				call epush16
	 				  dw  L55
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L53:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L58
	;----- cgjump
	 				  lbr	L58

L57:
  db 'abcdef0'    ;----- cgdefs
	db	$00    ;----- cgdefb

L58:
	;---- queue lbr L60
	;----- cgjump
	 				  lbr	L60

L59:
  db 'abcdef3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L60:
	;----- cgldlab
	 				call epush16
	 				  dw  L59
	;----- cgldlab
	 				call epush16
	 				  dw  L57
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw -3
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L62
	lbr	L61

L62:
	;----- begin stmt ------
	;---- queue lbr L64
	;----- cgjump
	 				  lbr	L64

L63:
  db 'strcmp-5'    ;----- cgdefs
	db	$00    ;----- cgdefb

L64:
	;----- cgldlab
	 				call epush16
	 				  dw  L63
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L61:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L66
	;----- cgjump
	 				  lbr	L66

L65:
  db 'strcpy'    ;----- cgdefs
	db	$00    ;----- cgdefb

L66:
	;----- cgldlab
	 				call epush16
	 				  dw  L65
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L68
	;----- cgjump
	 				  lbr	L68

L67:
  db '0123456789ABCDEF'    ;----- cgdefs
	db	$00    ;----- cgdefb

L68:
	;----- cgldlab
	 				call epush16
	 				  dw  L67
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L70
	;----- cgjump
	 				  lbr	L70

L69:
  db '0123456789ABCDEF'    ;----- cgdefs
	db	$00    ;----- cgdefb

L70:
	;----- cgldlab
	 				call epush16
	 				  dw  L69
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L71           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L73
	;----- cgjump
	 				  lbr	L73

L72:
  db 'strcpy-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L73:
	;----- cgldlab
	 				call epush16
	 				  dw  L72
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L71:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L75
	;----- cgjump
	 				  lbr	L75

L74:
  db 'ABCDEF'    ;----- cgdefs
	db	$00    ;----- cgdefb

L75:
	;----- cgldlab
	 				call epush16
	 				  dw  L74
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L77
	;----- cgjump
	 				  lbr	L77

L76:
  db 'ABCDEF'    ;----- cgdefs
	db	$00    ;----- cgdefb

L77:
	;----- cgldlab
	 				call epush16
	 				  dw  L76
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L78           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L80
	;----- cgjump
	 				  lbr	L80

L79:
  db 'strcpy-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L80:
	;----- cgldlab
	 				call epush16
	 				  dw  L79
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L78:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cglit
	 				call epush16
	 				  dw 7
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindb
	 				call deref8
	;----- cglit
	 				call epush16
	 				  dw 55
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L82
	lbr	L81

L82:
	;----- begin stmt ------
	;---- queue lbr L84
	;----- cgjump
	 				  lbr	L84

L83:
  db 'strcpy-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L84:
	;----- cgldlab
	 				call epush16
	 				  dw  L83
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L81:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L86
	;----- cgjump
	 				  lbr	L86

L85:
  db 'strcat'    ;----- cgdefs
	db	$00    ;----- cgdefb

L86:
	;----- cgldlab
	 				call epush16
	 				  dw  L85
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L88
	;----- cgjump
	 				  lbr	L88

L87:
  db 'abcXXXXX'    ;----- cgdefs
	db	$00    ;----- cgdefb

L88:
	;----- cgldlab
	 				call epush16
	 				  dw  L87
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cglit
	 				call epush16
	 				  dw 3
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgpopptr
	          call  swap16				 ; swap TOS and SOS on Expression Stack
	          call  dpop16   		 ; get pointer from expression stack
	;----- cgstorib
	          call  pstor8       ; store value from ES in pointer variable
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L90
	;----- cgjump
	 				  lbr	L90

L89:
  db 'DEF'    ;----- cgdefs
	db	$00    ;----- cgdefb

L90:
	;----- cgldlab
	 				call epush16
	 				  dw  L89
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcat
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L92
	;----- cgjump
	 				  lbr	L92

L91:
  db 'abcDEF'    ;----- cgdefs
	db	$00    ;----- cgdefb

L92:
	;----- cgldlab
	 				call epush16
	 				  dw  L91
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L93           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L95
	;----- cgjump
	 				  lbr	L95

L94:
  db 'strcat-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L95:
	;----- cgldlab
	 				call epush16
	 				  dw  L94
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L93:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cglit
	 				call epush16
	 				  dw 7
	;----- cgadd
	          call  add16				 ; add TOS and SOS on Expression Stack

	;----- cgindb
	 				call deref8
	;----- cglit
	 				call epush16
	 				  dw 88
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L97
	lbr	L96

L97:
	;----- begin stmt ------
	;---- queue lbr L99
	;----- cgjump
	 				  lbr	L99

L98:
  db 'strcat-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L99:
	;----- cgldlab
	 				call epush16
	 				  dw  L98
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L96:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L101
	;----- cgjump
	 				  lbr	L101

L100:
  db 'strncmp'    ;----- cgdefs
	db	$00    ;----- cgdefb

L101:
	;----- cgldlab
	 				call epush16
	 				  dw  L100
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L103
	;----- cgjump
	 				  lbr	L103

L102:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L103:
	;---- queue lbr L105
	;----- cgjump
	 				  lbr	L105

L104:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L105:
	;----- cglit
	 				call epush16
	 				  dw 6
	;----- cgldlab
	 				call epush16
	 				  dw  L104
	;----- cgldlab
	 				call epush16
	 				  dw  L102
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L106           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L108
	;----- cgjump
	 				  lbr	L108

L107:
  db 'strncmp-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L108:
	;----- cgldlab
	 				call epush16
	 				  dw  L107
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L106:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L110
	;----- cgjump
	 				  lbr	L110

L109:
  db 'abcdxx'    ;----- cgdefs
	db	$00    ;----- cgdefb

L110:
	;---- queue lbr L112
	;----- cgjump
	 				  lbr	L112

L111:
  db 'abcdyy'    ;----- cgdefs
	db	$00    ;----- cgdefb

L112:
	;----- cglit
	 				call epush16
	 				  dw 4
	;----- cgldlab
	 				call epush16
	 				  dw  L111
	;----- cgldlab
	 				call epush16
	 				  dw  L109
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L113           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L115
	;----- cgjump
	 				  lbr	L115

L114:
  db 'strncmp-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L115:
	;----- cgldlab
	 				call epush16
	 				  dw  L114
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L113:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L117
	;----- cgjump
	 				  lbr	L117

L116:
  db 'abcdx0'    ;----- cgdefs
	db	$00    ;----- cgdefb

L117:
	;---- queue lbr L119
	;----- cgjump
	 				  lbr	L119

L118:
  db 'abcdy9'    ;----- cgdefs
	db	$00    ;----- cgdefb

L119:
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- cgldlab
	 				call epush16
	 				  dw  L118
	;----- cgldlab
	 				call epush16
	 				  dw  L116
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw -1
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L121
	lbr	L120

L121:
	;----- begin stmt ------
	;---- queue lbr L123
	;----- cgjump
	 				  lbr	L123

L122:
  db 'strncmp-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L123:
	;----- cgldlab
	 				call epush16
	 				  dw  L122
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L120:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L125
	;----- cgjump
	 				  lbr	L125

L124:
  db 'abcdy0'    ;----- cgdefs
	db	$00    ;----- cgdefb

L125:
	;---- queue lbr L127
	;----- cgjump
	 				  lbr	L127

L126:
  db 'abcdx9'    ;----- cgdefs
	db	$00    ;----- cgdefb

L127:
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- cgldlab
	 				call epush16
	 				  dw  L126
	;----- cgldlab
	 				call epush16
	 				  dw  L124
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L129
	lbr	L128

L129:
	;----- begin stmt ------
	;---- queue lbr L131
	;----- cgjump
	 				  lbr	L131

L130:
  db 'strncmp-4'    ;----- cgdefs
	db	$00    ;----- cgdefb

L131:
	;----- cgldlab
	 				call epush16
	 				  dw  L130
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L128:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L133
	;----- cgjump
	 				  lbr	L133

L132:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L133:
	;---- queue lbr L135
	;----- cgjump
	 				  lbr	L135

L134:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L135:
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgldlab
	 				call epush16
	 				  dw  L134
	;----- cgldlab
	 				call epush16
	 				  dw  L132
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L136           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L138
	;----- cgjump
	 				  lbr	L138

L137:
  db 'strncmp-5'    ;----- cgdefs
	db	$00    ;----- cgdefb

L138:
	;----- cgldlab
	 				call epush16
	 				  dw  L137
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L136:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L140
	;----- cgjump
	 				  lbr	L140

L139:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L140:
	;---- queue lbr L142
	;----- cgjump
	 				  lbr	L142

L141:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L142:
	;----- cglit
	 				call epush16
	 				  dw 7
	;----- cgldlab
	 				call epush16
	 				  dw  L141
	;----- cgldlab
	 				call epush16
	 				  dw  L139
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 103
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L144
	lbr	L143

L144:
	;----- begin stmt ------
	;---- queue lbr L146
	;----- cgjump
	 				  lbr	L146

L145:
  db 'strncmp-6'    ;----- cgdefs
	db	$00    ;----- cgdefb

L146:
	;----- cgldlab
	 				call epush16
	 				  dw  L145
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L143:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L148
	;----- cgjump
	 				  lbr	L148

L147:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L148:
	;---- queue lbr L150
	;----- cgjump
	 				  lbr	L150

L149:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L150:
	;----- cglit
	 				call epush16
	 				  dw 7
	;----- cgldlab
	 				call epush16
	 				  dw  L149
	;----- cgldlab
	 				call epush16
	 				  dw  L147
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw -103
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L152
	lbr	L151

L152:
	;----- begin stmt ------
	;---- queue lbr L154
	;----- cgjump
	 				  lbr	L154

L153:
  db 'strncmp-7'    ;----- cgdefs
	db	$00    ;----- cgdefb

L154:
	;----- cgldlab
	 				call epush16
	 				  dw  L153
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L151:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L156
	;----- cgjump
	 				  lbr	L156

L155:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L156:
	;---- queue lbr L158
	;----- cgjump
	 				  lbr	L158

L157:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L158:
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgldlab
	 				call epush16
	 				  dw  L157
	;----- cgldlab
	 				call epush16
	 				  dw  L155
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 103
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L160
	lbr	L159

L160:
	;----- begin stmt ------
	;---- queue lbr L162
	;----- cgjump
	 				  lbr	L162

L161:
  db 'strncmp-8'    ;----- cgdefs
	db	$00    ;----- cgdefb

L162:
	;----- cgldlab
	 				call epush16
	 				  dw  L161
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L159:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L164
	;----- cgjump
	 				  lbr	L164

L163:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L164:
	;---- queue lbr L166
	;----- cgjump
	 				  lbr	L166

L165:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L166:
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgldlab
	 				call epush16
	 				  dw  L165
	;----- cgldlab
	 				call epush16
	 				  dw  L163
	;----- cgcall
	          call  Cstrncmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw -103
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L168
	lbr	L167

L168:
	;----- begin stmt ------
	;---- queue lbr L170
	;----- cgjump
	 				  lbr	L170

L169:
  db 'strncmp-9'    ;----- cgdefs
	db	$00    ;----- cgdefb

L170:
	;----- cgldlab
	 				call epush16
	 				  dw  L169
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L167:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L172
	;----- cgjump
	 				  lbr	L172

L171:
  db 'strncpy'    ;----- cgdefs
	db	$00    ;----- cgdefb

L172:
	;----- cgldlab
	 				call epush16
	 				  dw  L171
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L174
	;----- cgjump
	 				  lbr	L174

L173:
  db '0123456789'    ;----- cgdefs
	db	$00    ;----- cgdefb

L174:
	;----- cgldlab
	 				call epush16
	 				  dw  L173
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L176
	;----- cgjump
	 				  lbr	L176

L175:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L176:
	;----- cglit
	 				call epush16
	 				  dw 6
	;----- cgldlab
	 				call epush16
	 				  dw  L175
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrncpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L178
	;----- cgjump
	 				  lbr	L178

L177:
  db 'abcdef6789'    ;----- cgdefs
	db	$00    ;----- cgdefb

L178:
	;----- cgldlab
	 				call epush16
	 				  dw  L177
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L179           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L181
	;----- cgjump
	 				  lbr	L181

L180:
  db 'strncpy-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L181:
	;----- cgldlab
	 				call epush16
	 				  dw  L180
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L179:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L183
	;----- cgjump
	 				  lbr	L183

L182:
  db '0123456789'    ;----- cgdefs
	db	$00    ;----- cgdefb

L183:
	;----- cgldlab
	 				call epush16
	 				  dw  L182
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L185
	;----- cgjump
	 				  lbr	L185

L184:
  db '0123'    ;----- cgdefs
	db	$00    ;----- cgdefb

L185:
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- cgldlab
	 				call epush16
	 				  dw  L184
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrncpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L187
	;----- cgjump
	 				  lbr	L187

L186:
  db '0123', 0, '56789'    ;----- cgdefs
	db	$00    ;----- cgdefb

L187:
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgldlab
	 				call epush16
	 				  dw  L186
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cmemcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L188           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L190
	;----- cgjump
	 				  lbr	L190

L189:
  db 'strncpy-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L190:
	;----- cgldlab
	 				call epush16
	 				  dw  L189
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L188:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L192
	;----- cgjump
	 				  lbr	L192

L191:
  db '0123'    ;----- cgdefs
	db	$00    ;----- cgdefb

L192:
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgldlab
	 				call epush16
	 				  dw  L191
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrncpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L194
	;----- cgjump
	 				  lbr	L194

L193:
  db '0123', 0, 0, 0, 0, 0, 0    ;----- cgdefs
	db	$00    ;----- cgdefb

L194:
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgldlab
	 				call epush16
	 				  dw  L193
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cmemcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L195           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L197
	;----- cgjump
	 				  lbr	L197

L196:
  db 'strncpy-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L197:
	;----- cgldlab
	 				call epush16
	 				  dw  L196
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L195:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L199
	;----- cgjump
	 				  lbr	L199

L198:
  db 'strncat'    ;----- cgdefs
	db	$00    ;----- cgdefb

L199:
	;----- cgldlab
	 				call epush16
	 				  dw  L198
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L201
	;----- cgjump
	 				  lbr	L201

L200:
  db '012345'    ;----- cgdefs
	db	$00    ;----- cgdefb

L201:
	;----- cgldlab
	 				call epush16
	 				  dw  L200
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L203
	;----- cgjump
	 				  lbr	L203

L202:
  db '6789'    ;----- cgdefs
	db	$00    ;----- cgdefb

L203:
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- cgldlab
	 				call epush16
	 				  dw  L202
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrncat
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L205
	;----- cgjump
	 				  lbr	L205

L204:
  db '0123456789'    ;----- cgdefs
	db	$00    ;----- cgdefb

L205:
	;----- cgldlab
	 				call epush16
	 				  dw  L204
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L206           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L208
	;----- cgjump
	 				  lbr	L208

L207:
  db 'strncat-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L208:
	;----- cgldlab
	 				call epush16
	 				  dw  L207
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L206:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L210
	;----- cgjump
	 				  lbr	L210

L209:
  db 'abcdef0000'    ;----- cgdefs
	db	$00    ;----- cgdefb

L210:
	;----- cglit
	 				call epush16
	 				  dw 6
	;----- cgldlab
	 				call epush16
	 				  dw  L209
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrncat
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L212
	;----- cgjump
	 				  lbr	L212

L211:
  db '0123456789abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L212:
	;----- cgldlab
	 				call epush16
	 				  dw  L211
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L213           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L215
	;----- cgjump
	 				  lbr	L215

L214:
  db 'strncat-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L215:
	;----- cgldlab
	 				call epush16
	 				  dw  L214
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L213:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L217
	;----- cgjump
	 				  lbr	L217

L216:
  db 'strspn'    ;----- cgdefs
	db	$00    ;----- cgdefb

L217:
	;----- cgldlab
	 				call epush16
	 				  dw  L216
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L219
	;----- cgjump
	 				  lbr	L219

L218:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L219:
	;---- queue lbr L221
	;----- cgjump
	 				  lbr	L221

L220:
  db 'abc'    ;----- cgdefs
	db	$00    ;----- cgdefb

L221:
	;----- cgldlab
	 				call epush16
	 				  dw  L220
	;----- cgldlab
	 				call epush16
	 				  dw  L218
	;----- cgcall
	          call  Cstrspn
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 3
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L223
	lbr	L222

L223:
	;----- begin stmt ------
	;---- queue lbr L225
	;----- cgjump
	 				  lbr	L225

L224:
  db 'strspn-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L225:
	;----- cgldlab
	 				call epush16
	 				  dw  L224
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L222:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L227
	;----- cgjump
	 				  lbr	L227

L226:
  db 'abcabcabcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L227:
	;---- queue lbr L229
	;----- cgjump
	 				  lbr	L229

L228:
  db 'abc'    ;----- cgdefs
	db	$00    ;----- cgdefb

L229:
	;----- cgldlab
	 				call epush16
	 				  dw  L228
	;----- cgldlab
	 				call epush16
	 				  dw  L226
	;----- cgcall
	          call  Cstrspn
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 9
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L231
	lbr	L230

L231:
	;----- begin stmt ------
	;---- queue lbr L233
	;----- cgjump
	 				  lbr	L233

L232:
  db 'strspn-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L233:
	;----- cgldlab
	 				call epush16
	 				  dw  L232
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L230:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L235
	;----- cgjump
	 				  lbr	L235

L234:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L235:
	;---- queue lbr L237
	;----- cgjump
	 				  lbr	L237

L236:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L237:
	;----- cgldlab
	 				call epush16
	 				  dw  L236
	;----- cgldlab
	 				call epush16
	 				  dw  L234
	;----- cgcall
	          call  Cstrspn
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L239
	lbr	L238

L239:
	;----- begin stmt ------
	;---- queue lbr L241
	;----- cgjump
	 				  lbr	L241

L240:
  db 'strspn-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L241:
	;----- cgldlab
	 				call epush16
	 				  dw  L240
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L238:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L243
	;----- cgjump
	 				  lbr	L243

L242:
  db 'strcspn'    ;----- cgdefs
	db	$00    ;----- cgdefb

L243:
	;----- cgldlab
	 				call epush16
	 				  dw  L242
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L245
	;----- cgjump
	 				  lbr	L245

L244:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L245:
	;---- queue lbr L247
	;----- cgjump
	 				  lbr	L247

L246:
  db 'def'    ;----- cgdefs
	db	$00    ;----- cgdefb

L247:
	;----- cgldlab
	 				call epush16
	 				  dw  L246
	;----- cgldlab
	 				call epush16
	 				  dw  L244
	;----- cgcall
	          call  Cstrcspn
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 3
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L249
	lbr	L248

L249:
	;----- begin stmt ------
	;---- queue lbr L251
	;----- cgjump
	 				  lbr	L251

L250:
  db 'strcspn-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L251:
	;----- cgldlab
	 				call epush16
	 				  dw  L250
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L248:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L253
	;----- cgjump
	 				  lbr	L253

L252:
  db 'abcabcabcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L253:
	;---- queue lbr L255
	;----- cgjump
	 				  lbr	L255

L254:
  db 'def'    ;----- cgdefs
	db	$00    ;----- cgdefb

L255:
	;----- cgldlab
	 				call epush16
	 				  dw  L254
	;----- cgldlab
	 				call epush16
	 				  dw  L252
	;----- cgcall
	          call  Cstrcspn
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 9
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L257
	lbr	L256

L257:
	;----- begin stmt ------
	;---- queue lbr L259
	;----- cgjump
	 				  lbr	L259

L258:
  db 'strcspn-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L259:
	;----- cgldlab
	 				call epush16
	 				  dw  L258
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L256:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L261
	;----- cgjump
	 				  lbr	L261

L260:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L261:
	;---- queue lbr L263
	;----- cgjump
	 				  lbr	L263

L262:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L263:
	;----- cgldlab
	 				call epush16
	 				  dw  L262
	;----- cgldlab
	 				call epush16
	 				  dw  L260
	;----- cgcall
	          call  Cstrcspn
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 7
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L265
	lbr	L264

L265:
	;----- begin stmt ------
	;---- queue lbr L267
	;----- cgjump
	 				  lbr	L267

L266:
  db 'strcspn-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L267:
	;----- cgldlab
	 				call epush16
	 				  dw  L266
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L264:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L269
	;----- cgjump
	 				  lbr	L269

L268:
  db 'abcdefg'    ;----- cgdefs
	db	$00    ;----- cgdefb

L269:
	;---- queue lbr L271
	;----- cgjump
	 				  lbr	L271

L270:
  db 'xyz'    ;----- cgdefs
	db	$00    ;----- cgdefb

L271:
	;----- cgldlab
	 				call epush16
	 				  dw  L270
	;----- cgldlab
	 				call epush16
	 				  dw  L268
	;----- cgcall
	          call  Cstrcspn
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 7
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L273
	lbr	L272

L273:
	;----- begin stmt ------
	;---- queue lbr L275
	;----- cgjump
	 				  lbr	L275

L274:
  db 'strcspn-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L275:
	;----- cgldlab
	 				call epush16
	 				  dw  L274
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L272:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L277
	;----- cgjump
	 				  lbr	L277

L276:
  db 'strpbrk'    ;----- cgdefs
	db	$00    ;----- cgdefb

L277:
	;----- cgldlab
	 				call epush16
	 				  dw  L276
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L279
	;----- cgjump
	 				  lbr	L279

L278:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L279:
	;---- queue lbr L281
	;----- cgjump
	 				  lbr	L281

L280:
  db 'def'    ;----- cgdefs
	db	$00    ;----- cgdefb

L281:
	;---- queue lbr L283
	;----- cgjump
	 				  lbr	L283

L282:
  db 'def'    ;----- cgdefs
	db	$00    ;----- cgdefb

L283:
	;----- cgldlab
	 				call epush16
	 				  dw  L282
	;----- cgldlab
	 				call epush16
	 				  dw  L280
	;----- cgldlab
	 				call epush16
	 				  dw  L278
	;----- cgcall
	          call  Cstrpbrk
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L284           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L286
	;----- cgjump
	 				  lbr	L286

L285:
  db 'strpbrk-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L286:
	;----- cgldlab
	 				call epush16
	 				  dw  L285
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L284:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L288
	;----- cgjump
	 				  lbr	L288

L287:
  db 'abcabcabcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L288:
	;---- queue lbr L290
	;----- cgjump
	 				  lbr	L290

L289:
  db 'def'    ;----- cgdefs
	db	$00    ;----- cgdefb

L290:
	;---- queue lbr L292
	;----- cgjump
	 				  lbr	L292

L291:
  db 'def'    ;----- cgdefs
	db	$00    ;----- cgdefb

L292:
	;----- cgldlab
	 				call epush16
	 				  dw  L291
	;----- cgldlab
	 				call epush16
	 				  dw  L289
	;----- cgldlab
	 				call epush16
	 				  dw  L287
	;----- cgcall
	          call  Cstrpbrk
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L293           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L295
	;----- cgjump
	 				  lbr	L295

L294:
  db 'strpbrk-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L295:
	;----- cgldlab
	 				call epush16
	 				  dw  L294
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L293:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L297
	;----- cgjump
	 				  lbr	L297

L296:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L297:
	;---- queue lbr L299
	;----- cgjump
	 				  lbr	L299

L298:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L299:
	;----- cgldlab
	 				call epush16
	 				  dw  L298
	;----- cgldlab
	 				call epush16
	 				  dw  L296
	;----- cgcall
	          call  Cstrpbrk
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L301
	lbr	L300

L301:
	;----- begin stmt ------
	;---- queue lbr L303
	;----- cgjump
	 				  lbr	L303

L302:
  db 'strpbrk-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L303:
	;----- cgldlab
	 				call epush16
	 				  dw  L302
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L300:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L305
	;----- cgjump
	 				  lbr	L305

L304:
  db 'abcdef'    ;----- cgdefs
	db	$00    ;----- cgdefb

L305:
	;---- queue lbr L307
	;----- cgjump
	 				  lbr	L307

L306:
  db 'xyz'    ;----- cgdefs
	db	$00    ;----- cgdefb

L307:
	;----- cgldlab
	 				call epush16
	 				  dw  L306
	;----- cgldlab
	 				call epush16
	 				  dw  L304
	;----- cgcall
	          call  Cstrpbrk
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L309
	lbr	L308

L309:
	;----- begin stmt ------
	;---- queue lbr L311
	;----- cgjump
	 				  lbr	L311

L310:
  db 'strpbrk-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L311:
	;----- cgldlab
	 				call epush16
	 				  dw  L310
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L308:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L313
	;----- cgjump
	 				  lbr	L313

L312:
  db 'strtok'    ;----- cgdefs
	db	$00    ;----- cgdefb

L313:
	;----- cgldlab
	 				call epush16
	 				  dw  L312
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L315
	;----- cgjump
	 				  lbr	L315

L314:
  db '+-*'    ;----- cgdefs
	db	$00    ;----- cgdefb

L315:
	;----- cgldlab
	 				call epush16
	 				  dw  L314
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L317
	;----- cgjump
	 				  lbr	L317

L316:
  db 'foo++bar---baz*goo'    ;----- cgdefs
	db	$00    ;----- cgdefb

L317:
	;----- cgldlab
	 				call epush16
	 				  dw  L316
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrcpy
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L319
	;----- cgjump
	 				  lbr	L319

L318:
  db 'foo'    ;----- cgdefs
	db	$00    ;----- cgdefb

L319:
	;----- cgldlab
	 				call epush16
	 				  dw  L318
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgldga
	 				call epush16
	 				  dw Cv1
	;----- cgcall
	          call  Cstrtok
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L320           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L322
	;----- cgjump
	 				  lbr	L322

L321:
  db 'strtok-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L322:
	;----- cgldlab
	 				call epush16
	 				  dw  L321
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L320:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L324
	;----- cgjump
	 				  lbr	L324

L323:
  db 'bar'    ;----- cgdefs
	db	$00    ;----- cgdefb

L324:
	;----- cgldlab
	 				call epush16
	 				  dw  L323
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgcall
	          call  Cstrtok
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L325           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L327
	;----- cgjump
	 				  lbr	L327

L326:
  db 'strtok-2'    ;----- cgdefs
	db	$00    ;----- cgdefb

L327:
	;----- cgldlab
	 				call epush16
	 				  dw  L326
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L325:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L329
	;----- cgjump
	 				  lbr	L329

L328:
  db 'baz'    ;----- cgdefs
	db	$00    ;----- cgdefb

L329:
	;----- cgldlab
	 				call epush16
	 				  dw  L328
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgcall
	          call  Cstrtok
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L330           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L332
	;----- cgjump
	 				  lbr	L332

L331:
  db 'strtok-3'    ;----- cgdefs
	db	$00    ;----- cgdefb

L332:
	;----- cgldlab
	 				call epush16
	 				  dw  L331
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L330:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L334
	;----- cgjump
	 				  lbr	L334

L333:
  db 'goo'    ;----- cgdefs
	db	$00    ;----- cgdefb

L334:
	;----- cgldlab
	 				call epush16
	 				  dw  L333
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgcall
	          call  Cstrtok
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgcall
	          call  Cstrcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L335           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L337
	;----- cgjump
	 				  lbr	L337

L336:
  db 'strtok-4'    ;----- cgdefs
	db	$00    ;----- cgdefb

L337:
	;----- cgldlab
	 				call epush16
	 				  dw  L336
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L335:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgcall
	          call  Cstrtok
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L339
	lbr	L338

L339:
	;----- begin stmt ------
	;---- queue lbr L341
	;----- cgjump
	 				  lbr	L341

L340:
  db 'strtok-5'    ;----- cgdefs
	db	$00    ;----- cgdefb

L341:
	;----- cgldlab
	 				call epush16
	 				  dw  L340
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L338:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgcall
	          call  Cstrtok
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrne
	;----- cgne
	          call  ne16				   ; compare TOS != SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L343
	lbr	L342

L343:
	;----- begin stmt ------
	;---- queue lbr L345
	;----- cgjump
	 				  lbr	L345

L344:
  db 'strtok-6'    ;----- cgdefs
	db	$00    ;----- cgdefb

L345:
	;----- cgldlab
	 				call epush16
	 				  dw  L344
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L342:
	;----- end if
	;----- end stmt ------

L10:
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Cmain
Cmain:
  ;----- cgsetup
#ifdef STGROM
      load   r1, $F000  ; set up handler for STG Breakpoint
#endif
	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;----- cgcall
	          call  Ctest_str
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin return
	;----- cgldgw
	 				call vpush16
	 				  dw Cresult
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L346
	;----- end return
	;----- end stmt ------
	;---- lbr L346 falls through

L346:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;---- cgpostlude
	             endp
