; -------------------------------------------------------------------
; This file generated by ElfC, based on SubC
; SubC Copyright 2012-2025 by Nils Holm
; -------------------------------------------------------------------
#include include/ops_c.inc
#include include/bios.inc
#include include/kernel.inc
#include include/elfc.inc

	           proc filetest4

#define STGROM

            extrn C_init

            extrn C_fdinit

            extrn C_fdtable

            extrn C_fildes

            extrn Cabort

            extrn Cabs

            extrn Catexit      

            extrn Cexit            

            extrn Cmalloc

            extrn Ccalloc 

            extrn Crealloc

            extrn Cfree  

            extrn Catoi 

            extrn Citoa           

            extrn Citox

            extrn Citou           

            extrn Cdiv 

            extrn Cbsearch              

            extrn Cqsort

            extrn Crand

            extrn Csrand

            extrn Ccreat

            extrn Copen

            extrn Cclose

            extrn Cread

            extrn Cwrite

            extrn Clseek

            extrn Cunlink

            extrn Crename

            extrn Cmin

            extrn Cmax

            extrn Cstdin

            extrn Cstdout

            extrn Cstderr

            extrn Cputs

            extrn Cputstr

            extrn Cgets

            extrn Cputch

            extrn Cgetch

            extrn Cputchar

            extrn Cgetchar

            extrn Cfdopen

            extrn Cfclose

            extrn Cfopen

            extrn Cferror

            extrn Cfeof

            extrn Cclearerr

            extrn Cfgetc

            extrn Cfputc

            extrn Cfgets

            extrn Cfputs

            extrn Cungetc

            extrn Cfread

            extrn Cfwrite

            extrn Cfflush

            extrn Cfprintf

            extrn Ckprintf

            extrn Cprintf

            extrn Csprintf

            extrn Cvfprintf

            extrn Cvprintf

            extrn Cvsprintf

            extrn Cfscanf

            extrn Cscanf

            extrn Csscanf

            extrn Cfgetpos

            extrn Cfsetpos

            extrn Cfseek

            extrn Cftell

            extrn Cperror

            extrn Crewind

            extrn Cremove

            extrn Ctmpnam

            extrn Ctmpfile

            extrn Cfileno

.link .library string.lib

            extrn Cmemchr

            extrn Cmemcmp

            extrn Cmemcpy

            extrn Cmemmove

            extrn Cmemset

            extrn Cstrcat

            extrn Cstrchr

            extrn Cstrcmp

            extrn Cstrcpy

            extrn Cstrcspn

            extrn Cstrdup

            extrn Cstrerror

            extrn Cstrlen

            extrn Cstrncat

            extrn Cstrncmp

            extrn Cstrncpy

            extrn Cstrlcpy

            extrn Cstrpbrk

            extrn Cstrrchr

            extrn Cstrspn

            extrn Cstrstr

            extrn Cstrtok
	;----- cgpublic
	              public CErrors
CErrors:	db	$00, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Cresult
Cresult:	db	$00, $00  ;----- cgdefw LSB first, MSB second
	;----- cgpublic
	              public Cs1
Cs1:    ds 80    ;----- cggbss
	;----- cgpublic
	              public Cs2
Cs2:    ds 80    ;----- cggbss
Cstr1:  db '0---|----1----|----2----|----3----|----4----|----5', 10    ;----- cgdefs
	db	$00    ;----- cgdefb
	;----- cgpublic
	              public Cstr1
Cstr2:  db 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC', 10    ;----- cgdefs
	db	$00    ;----- cgdefb
	;----- cgpublic
	              public Cstr2
Cstr3:  db 'DDDDDDDDDDDDDDDDDDDDDDDD'    ;----- cgdefs
	db	$00    ;----- cgdefb
	;----- cgpublic
	              public Cstr3
Cstr4:  db 'EEEEEEEEEEEEEEEEEEEEEEEE'    ;----- cgdefs
	db	$00    ;----- cgdefb
	;----- cgpublic
	              public Cstr4
Cstr5:  db '%%%%%%%%%%%%%%%%%%%%'    ;----- cgdefs
	db	$00    ;----- cgdefb
	;----- cgpublic
	              public Cstr5
	;----- cgpublic
	              public Cfail
Cfail:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;---- queue lbr L3
	;----- cgjump
	 				  lbr	L3

L2:
  db '%s failed', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L3:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L2
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CErrors
	;----- cgincgw
	 				 call vinc16       ; increment global variable
	 				  dw CErrors
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 1
	;----- cgstorgw
	 				 call vstor16       ; store value from ES in global variable
	 				  dw Cresult
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------

L1:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Cpr
Cpr:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;---- queue lbr L6
	;----- cgjump
	 				  lbr	L6

L5:
  db '%s', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L6:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  0  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L5
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L4:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Ctest_sio4
Ctest_sio4:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  -10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -8  ;--- offset
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -6  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L9
	;----- cgjump
	 				  lbr	L9

L8:
  db 'fprintf'    ;----- cgdefs
	db	$00    ;----- cgdefb

L9:
	;----- cgldlab
	 				call epush16
	 				  dw  L8
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L11
	;----- cgjump
	 				  lbr	L11

L10:
  db 'fprintf.out'    ;----- cgdefs
	db	$00    ;----- cgdefb

L11:
	;---- queue lbr L13
	;----- cgjump
	 				  lbr	L13

L12:
  db 'w'    ;----- cgdefs
	db	$00    ;----- cgdefb

L13:
	;----- cgldlab
	 				call epush16
	 				  dw  L12
	;----- cgldlab
	 				call epush16
	 				  dw  L10
	;----- cgcall
	          call  Cfopen
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -4  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbreq
	;----- cgeq
	          call  eq16				   ; compare TOS == SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L15
	lbr	L14

L15:
	;----- begin stmt ------
	;----- begin stmt ------
	;---- queue lbr L17
	;----- cgjump
	 				  lbr	L17

L16:
  db 'fopen-1'    ;----- cgdefs
	db	$00    ;----- cgdefb

L17:
	;----- cgldlab
	 				call epush16
	 				  dw  L16
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin return
	;---- queue lbr L7
	;----- end return
	;----- end stmt ------
	;----- end stmt ------
	;----- cgjump
	 				  lbr	L7

L14:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L19
	;----- cgjump
	 				  lbr	L19

L18:
  db 'Writing test file....', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L19:
	;----- cgldlab
	 				call epush16
	 				  dw  L18
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldga
	 				call epush16
	 				  dw Cstr1
	;----- cgcall
	          call  Cfputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L20:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 50
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L24
	lbr	L22

L24:
	;---- queue lbr L21
	;----- cgjump
	 				  lbr	L21

L23:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L20
	;----- cgjump
	 				  lbr	L20

L21:
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 65
	;----- cgcall
	          call  Cfputc
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L23
	;----- cgjump
	 				  lbr	L23

L22:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgcall
	          call  Cfputc
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L25:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 50
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L29
	lbr	L27

L29:
	;---- queue lbr L26
	;----- cgjump
	 				  lbr	L26

L28:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L25
	;----- cgjump
	 				  lbr	L25

L26:
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 66
	;----- cgcall
	          call  Cfputc
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L28
	;----- cgjump
	 				  lbr	L28

L27:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 10
	;----- cgcall
	          call  Cfputc
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L31
	;----- cgjump
	 				  lbr	L31

L30:
  db '%s'    ;----- cgdefs
	db	$00    ;----- cgdefb

L31:
	;----- cgldga
	 				call epush16
	 				  dw Cstr2
	;----- cgldlab
	 				call epush16
	 				  dw  L30
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L33
	;----- cgjump
	 				  lbr	L33

L32:
  db '|%48s|', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L33:
	;----- cgldga
	 				call epush16
	 				  dw Cstr3
	;----- cgldlab
	 				call epush16
	 				  dw  L32
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L35
	;----- cgjump
	 				  lbr	L35

L34:
  db '|%-48s|', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L35:
	;----- cgldga
	 				call epush16
	 				  dw Cstr4
	;----- cgldlab
	 				call epush16
	 				  dw  L34
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L36:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L40
	lbr	L38

L40:
	;---- queue lbr L37
	;----- cgjump
	 				  lbr	L37

L39:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L36
	;----- cgjump
	 				  lbr	L36

L37:
	;----- begin stmt ------
	;---- queue lbr L42
	;----- cgjump
	 				  lbr	L42

L41:
  db '%c%c%c%c%c%c%c%c%c%c'    ;----- cgdefs
	db	$00    ;----- cgdefb

L42:
	;----- cglit
	 				call epush16
	 				  dw 48
	;----- cglit
	 				call epush16
	 				  dw 57
	;----- cglit
	 				call epush16
	 				  dw 56
	;----- cglit
	 				call epush16
	 				  dw 55
	;----- cglit
	 				call epush16
	 				  dw 54
	;----- cglit
	 				call epush16
	 				  dw 53
	;----- cglit
	 				call epush16
	 				  dw 52
	;----- cglit
	 				call epush16
	 				  dw 51
	;----- cglit
	 				call epush16
	 				  dw 50
	;----- cglit
	 				call epush16
	 				  dw 49
	;----- cgldlab
	 				call epush16
	 				  dw  L41
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  24  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L39
	;----- cgjump
	 				  lbr	L39

L38:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L44
	;----- cgjump
	 				  lbr	L44

L43:
  db 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L44:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L43
	;----- cgcall
	          call  Cfputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L46
	;----- cgjump
	 				  lbr	L46

L45:
  db '%50d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L46:
	;----- cglit
	 				call epush16
	 				  dw -12345
	;----- cgldlab
	 				call epush16
	 				  dw  L45
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L48
	;----- cgjump
	 				  lbr	L48

L47:
  db '%-49d|', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L48:
	;----- cglit
	 				call epush16
	 				  dw -12345
	;----- cgldlab
	 				call epush16
	 				  dw  L47
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L50
	;----- cgjump
	 				  lbr	L50

L49:
  db '%050d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L50:
	;----- cglit
	 				call epush16
	 				  dw 12345
	;----- cgldlab
	 				call epush16
	 				  dw  L49
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L52
	;----- cgjump
	 				  lbr	L52

L51:
  db '0x%x %15s%d%16s 0%o', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L52:
	;---- queue lbr L54
	;----- cgjump
	 				  lbr	L54

L53:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L54:
	;---- queue lbr L56
	;----- cgjump
	 				  lbr	L56

L55:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L56:
	;----- cglit
	 				call epush16
	 				  dw 31693
	;----- cgldlab
	 				call epush16
	 				  dw  L55
	;----- cglit
	 				call epush16
	 				  dw 31693
	;----- cgldlab
	 				call epush16
	 				  dw  L53
	;----- cglit
	 				call epush16
	 				  dw 31693
	;----- cgldlab
	 				call epush16
	 				  dw  L51
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  14  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L57:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L61
	lbr	L59

L61:
	;---- queue lbr L58
	;----- cgjump
	 				  lbr	L58

L60:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -10  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -10  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L57
	;----- cgjump
	 				  lbr	L57

L58:
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw Cstr5
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L60
	;----- cgjump
	 				  lbr	L60

L59:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L63
	;----- cgjump
	 				  lbr	L63

L62:
  db 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L63:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L62
	;----- cgcall
	          call  Cfputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgldga
	 				call epush16
	 				  dw Cstr1
	;----- cgcall
	          call  Cfputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfclose
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L65
	;----- cgjump
	 				  lbr	L65

L64:
  db 'stdio.ok'    ;----- cgdefs
	db	$00    ;----- cgdefb

L65:
	;---- queue lbr L67
	;----- cgjump
	 				  lbr	L67

L66:
  db 'r'    ;----- cgdefs
	db	$00    ;----- cgdefb

L67:
	;----- cgldlab
	 				call epush16
	 				  dw  L66
	;----- cgldlab
	 				call epush16
	 				  dw  L64
	;----- cgcall
	          call  Cfopen
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -4  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbreq
	;----- cgeq
	          call  eq16				   ; compare TOS == SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L69
	lbr	L68

L69:
	;----- begin stmt ------
	;----- begin stmt ------
	;---- queue lbr L71
	;----- cgjump
	 				  lbr	L71

L70:
  db 'missing file: stdio.ok', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L71:
	;----- cgldgw
	 				call vpush16
	 				  dw Cstdout
	;----- cgldlab
	 				call epush16
	 				  dw  L70
	;----- cgcall
	          call  Cfputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CErrors
	;----- cgincgw
	 				 call vinc16       ; increment global variable
	 				  dw CErrors
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- end stmt ------
	;---- queue lbr L72
	;----- cgjump
	 				  lbr	L72

L68:
	;----- begin stmt ------
	;----- begin if
	;---- queue lbr L74
	;----- cgjump
	 				  lbr	L74

L73:
  db 'fprintf.out'    ;----- cgdefs
	db	$00    ;----- cgdefb

L74:
	;---- queue lbr L76
	;----- cgjump
	 				  lbr	L76

L75:
  db 'r'    ;----- cgdefs
	db	$00    ;----- cgdefb

L76:
	;----- cgldlab
	 				call epush16
	 				  dw  L75
	;----- cgldlab
	 				call epush16
	 				  dw  L73
	;----- cgcall
	          call  Cfopen
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbreq
	;----- cgeq
	          call  eq16				   ; compare TOS == SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L78
	lbr	L77

L78:
	;----- begin stmt ------
	;----- begin stmt ------
	;---- queue lbr L80
	;----- cgjump
	 				  lbr	L80

L79:
  db 'could not open test file: fprintf.out', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L80:
	;----- cgldgw
	 				call vpush16
	 				  dw Cstdout
	;----- cgldlab
	 				call epush16
	 				  dw  L79
	;----- cgcall
	          call  Cfputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw CErrors
	;----- cgincgw
	 				 call vinc16       ; increment global variable
	 				  dw CErrors
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- end stmt ------
	;---- queue lbr L81
	;----- cgjump
	 				  lbr	L81

L77:
	;----- begin stmt ------
	;----- begin stmt ------
	;---- queue lbr L83
	;----- cgjump
	 				  lbr	L83

L82:
  db 'comparing lines'    ;----- cgdefs
	db	$00    ;----- cgdefb

L83:
	;----- cgldlab
	 				call epush16
	 				  dw  L82
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 80
	;----- cgldga
	 				call epush16
	 				  dw Cs1
	;----- cgcall
	          call  Cfgets
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for

L84:
	;---- queue lbr L85
	;----- cgjump
	 				  lbr	L85

L87:
	;---- queue lbr L84
	;----- cgjump
	 				  lbr	L84

L85:
	;----- begin stmt ------
	;----- begin stmt ------
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -8  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -8  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 80
	;----- cgldga
	 				call epush16
	 				  dw Cs2
	;----- cgcall
	          call  Cfgets
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgcall
	          call  Cfeof
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L88           ; check for branch
	;----- begin stmt ------
	;----- begin break
	;---- queue lbr L86
	;----- end break
	;----- end stmt ------
	;----- cgjump
	 				  lbr	L86

L88:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfeof
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L89           ; check for branch
	;----- begin stmt ------
	;----- begin break
	;---- queue lbr L86
	;----- end break
	;----- end stmt ------
	;----- cgjump
	 				  lbr	L86

L89:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cglit
	 				call epush16
	 				  dw 50
	;----- cgldga
	 				call epush16
	 				  dw Cs2
	;----- cgldga
	 				call epush16
	 				  dw Cs1
	;----- cgcall
	          call  Cmemcmp
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- genbrfalse
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L90           ; check for branch
	;----- begin stmt ------
	;----- begin stmt ------
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -6  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -6  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L92
	;----- cgjump
	 				  lbr	L92

L91:
  db '%2d Error', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L92:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -8  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L91
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- end stmt ------
	;---- queue lbr L93
	;----- cgjump
	 				  lbr	L93

L90:
	;----- begin stmt ------
	;----- begin stmt ------
	;---- queue lbr L95
	;----- cgjump
	 				  lbr	L95

L94:
  db '%2d: %s'    ;----- cgdefs
	db	$00    ;----- cgdefb

L95:
	;----- cgldga
	 				call epush16
	 				  dw Cs1
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -8  ;--- offset
	;----- cgldlab
	 				call epush16
	 				  dw  L94
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- end stmt ------

L93:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 80
	;----- cgldga
	 				call epush16
	 				  dw Cs1
	;----- cgcall
	          call  Cfgets
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  6  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- end stmt ------
	;---- queue lbr L87
	;----- cgjump
	 				  lbr	L87

L86:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgcall
	          call  Cfeof
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- queue_bool
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- commit_bool
	;----- commit_bool Q_bool = 1
	;----- cglognot
	          call  not16				 ; logical not TOS on Expression Stack

	;----- gensctrue
	;----- cgbrtrue
	;----- cgbr
	 				 call  dget16        ; test result on expression stack for short circuit
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbnz	L96           ; check for branch
	 				 call  dpop16        ; remove short circuited value from expression stack
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfeof
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- queue_bool
	;------ commit push
	;----- cgpushd
	          call  dpush16   		 ; put result on expression stack
	;----- commit_bool
	;----- commit_bool Q_bool = 1
	;----- cglognot
	          call  not16				 ; logical not TOS on Expression Stack


L96:
	;----- queue_bool
	;----- genbrfalse
	;----- genlogbr
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L97           ; check for branch
	;----- begin stmt ------
	;----- begin stmt ------
	;---- queue lbr L99
	;----- cgjump
	 				  lbr	L99

L98:
  db 'files have different sizes'    ;----- cgdefs
	db	$00    ;----- cgdefb

L99:
	;----- cgldlab
	 				call epush16
	 				  dw  L98
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -6  ;--- offset
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -6  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;----- end stmt ------
	;----- end stmt ------

L97:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cgcall
	          call  Cfclose
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- end stmt ------

L81:
	;----- end if
	;----- end stmt ------

L72:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -4  ;--- offset
	;----- cgcall
	          call  Cfclose
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -6  ;--- offset
	;----- genbrfalse
	;----- cgbrfalse
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbz	L100           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L102
	;----- cgjump
	 				  lbr	L102

L101:
  db 'fprintf'    ;----- cgdefs
	db	$00    ;----- cgdefb

L102:
	;----- cgldlab
	 				call epush16
	 				  dw  L101
	;----- cgcall
	          call  Cfail
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L100:
	;----- end if
	;----- end stmt ------

L7:
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  10  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Ctest_printf
Ctest_printf:	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  -2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- begin stmt ------
	;---- queue lbr L105
	;----- cgjump
	 				  lbr	L105

L104:
  db 'printf'    ;----- cgdefs
	db	$00    ;----- cgdefb

L105:
	;----- cgldlab
	 				call epush16
	 				  dw  L104
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw Cstr1
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L106:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 50
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L110
	lbr	L108

L110:
	;---- queue lbr L107
	;----- cgjump
	 				  lbr	L107

L109:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L106
	;----- cgjump
	 				  lbr	L106

L107:
	;----- begin stmt ------
	;----- cgldgw
	 				call vpush16
	 				  dw Cstdout
	;----- cglit
	 				call epush16
	 				  dw 65
	;----- cgcall
	          call  Cfputc
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L109
	;----- cgjump
	 				  lbr	L109

L108:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L112
	;----- cgjump
	 				  lbr	L112

L111:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L112:
	;----- cgldlab
	 				call epush16
	 				  dw  L111
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L113:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 50
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L117
	lbr	L115

L117:
	;---- queue lbr L114
	;----- cgjump
	 				  lbr	L114

L116:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L113
	;----- cgjump
	 				  lbr	L113

L114:
	;----- begin stmt ------
	;----- cglit
	 				call epush16
	 				  dw 66
	;----- cgcall
	          call  Cputchar
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L116
	;----- cgjump
	 				  lbr	L116

L115:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L119
	;----- cgjump
	 				  lbr	L119

L118:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L119:
	;----- cgldlab
	 				call epush16
	 				  dw  L118
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw Cstr2
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L121
	;----- cgjump
	 				  lbr	L121

L120:
  db '|%48s|', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L121:
	;----- cgldga
	 				call epush16
	 				  dw Cstr3
	;----- cgldlab
	 				call epush16
	 				  dw  L120
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L123
	;----- cgjump
	 				  lbr	L123

L122:
  db '|%-48s|', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L123:
	;----- cgldga
	 				call epush16
	 				  dw Cstr4
	;----- cgldlab
	 				call epush16
	 				  dw  L122
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L124:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L128
	lbr	L126

L128:
	;---- queue lbr L125
	;----- cgjump
	 				  lbr	L125

L127:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L124
	;----- cgjump
	 				  lbr	L124

L125:
	;----- begin stmt ------
	;---- queue lbr L130
	;----- cgjump
	 				  lbr	L130

L129:
  db '%c%c%c%c%c%c%c%c%c%c'    ;----- cgdefs
	db	$00    ;----- cgdefb

L130:
	;----- cglit
	 				call epush16
	 				  dw 48
	;----- cglit
	 				call epush16
	 				  dw 57
	;----- cglit
	 				call epush16
	 				  dw 56
	;----- cglit
	 				call epush16
	 				  dw 55
	;----- cglit
	 				call epush16
	 				  dw 54
	;----- cglit
	 				call epush16
	 				  dw 53
	;----- cglit
	 				call epush16
	 				  dw 52
	;----- cglit
	 				call epush16
	 				  dw 51
	;----- cglit
	 				call epush16
	 				  dw 50
	;----- cglit
	 				call epush16
	 				  dw 49
	;----- cgldlab
	 				call epush16
	 				  dw  L129
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  22  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L127
	;----- cgjump
	 				  lbr	L127

L126:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L132
	;----- cgjump
	 				  lbr	L132

L131:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L132:
	;----- cgldlab
	 				call epush16
	 				  dw  L131
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L134
	;----- cgjump
	 				  lbr	L134

L133:
  db '%50d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L134:
	;----- cglit
	 				call epush16
	 				  dw -12345
	;----- cgldlab
	 				call epush16
	 				  dw  L133
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L136
	;----- cgjump
	 				  lbr	L136

L135:
  db '%-49d|', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L136:
	;----- cglit
	 				call epush16
	 				  dw -12345
	;----- cgldlab
	 				call epush16
	 				  dw  L135
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L138
	;----- cgjump
	 				  lbr	L138

L137:
  db '%050d', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L138:
	;----- cglit
	 				call epush16
	 				  dw 12345
	;----- cgldlab
	 				call epush16
	 				  dw  L137
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  4  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L140
	;----- cgjump
	 				  lbr	L140

L139:
  db '0x%x %15s%d%16s 0%o', 10    ;----- cgdefs
	db	$00    ;----- cgdefb

L140:
	;---- queue lbr L142
	;----- cgjump
	 				  lbr	L142

L141:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L142:
	;---- queue lbr L144
	;----- cgjump
	 				  lbr	L144

L143:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L144:
	;----- cglit
	 				call epush16
	 				  dw 31693
	;----- cgldlab
	 				call epush16
	 				  dw  L143
	;----- cglit
	 				call epush16
	 				  dw 31693
	;----- cgldlab
	 				call epush16
	 				  dw  L141
	;----- cglit
	 				call epush16
	 				  dw 31693
	;----- cgldlab
	 				call epush16
	 				  dw  L139
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  12  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin for
	;----- cglit
	 				call epush16
	 				  dw 0
	;----- cgstorlw
	          call  lstor16      ; store value from ES in local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack

L145:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cglit
	 				call epush16
	 				  dw 5
	;----- queue_cmp
	;----- genbrfalse
	;----- genbranch
	;----- cgbrlt
	;----- cglt
	          call  lt16				   ; compare TOS < SOS on Expression Stack

	;----- cgbrcond
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	lbnz	L149
	lbr	L147

L149:
	;---- queue lbr L146
	;----- cgjump
	 				  lbr	L146

L148:
	;----- cgldlw
	          call  lpush16       ; push value of local variable on ES
	          dw  -2  ;--- offset
	;----- cginclw
	          call  linc16       ; increment local variable
	          dw  -2  ;--- offset
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L145
	;----- cgjump
	 				  lbr	L145

L146:
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw Cstr5
	;----- cgcall
	          call  Cprintf
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;---- queue lbr L148
	;----- cgjump
	 				  lbr	L148

L147:
	;----- end for
	;----- end stmt ------
	;----- begin stmt ------
	;---- queue lbr L151
	;----- cgjump
	 				  lbr	L151

L150:
  db     ;----- cgdefs
	db	$00    ;----- cgdefb

L151:
	;----- cgldlab
	 				call epush16
	 				  dw  L150
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgldga
	 				call epush16
	 				  dw Cstr1
	;----- cgcall
	          call  Cputs
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L103:
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;----- cgpublic
	              public Cmain
Cmain:
  ;----- cgsetup
#ifdef STGROM
      load   r1, $F000  ; set up handler for STG Breakpoint
#endif
	;---- cgentry
	          sex   r2   				 ; make sure X = SP
	          push  rb				 		 ; save current BP (base pointer)
	          copy  r7, rb			 	 ; set BP to current ES location
	;----- begin stmt ------
	;----- cgcall
	          call  Ctest_printf
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- cgcall
	          call  Ctest_sio4
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin if
	;----- cgldgw
	 				call vpush16
	 				  dw CErrors
	;----- queue_bool
	;----- genbrfalse
	;----- genlogbr
	;----- cgbrtrue
	;----- cgbr
	 				 call  dpop16        ; get result from expression stack
	 				 ghi   ra            ; get MSB from result
	 				 str   r2            ; save in M(X)
	 				 glo   ra            ; get LSB from result
	 				 or                  ; D = MSB | LSB
	 				 lbnz	L153           ; check for branch
	;----- begin stmt ------
	;---- queue lbr L155
	;----- cgjump
	 				  lbr	L155

L154:
  db 'okay'    ;----- cgdefs
	db	$00    ;----- cgdefb

L155:
	;----- cgldlab
	 				call epush16
	 				  dw  L154
	;----- cgcall
	          call  Cpr
	;----- cgstack
	          call  esmove				 ; move pointer for Expression Stack
	          dw  2  ;--- offset
	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
	;---- queue dpush
	;----- push + pop data not required, data remains unchanged in RA
	;----- end stmt ------

L153:
	;----- end if
	;----- end stmt ------
	;----- begin stmt ------
	;----- begin return
	;----- cgldgw
	 				call vpush16
	 				  dw Cresult
	;----- cgpopd
	          call  dpop16   		 ; get result from expression stack
	;---- queue lbr L152
	;----- end return
	;----- end stmt ------
	;---- lbr L152 falls through

L152:
	;----- cgexit
	          sex   r2            ; make sure X = SP
	          call  escheck       ; check for expression stack creep
	          pop   rb				 		 ; restore BP (base pointer)

	          rtn	  			 	     ; return to caller
	;---- cgpostlude
	             endp
