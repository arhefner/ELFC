[00001]                   ; -------------------------------------------------------------------
[00002]                   ; This file generated by ElfC, based on SubC
[00003]                   ; SubC Copyright 2012-2025 by Nils Holm
[00004]                   ; -------------------------------------------------------------------
<00000>                   #include include/ops_c.inc
<00001>                   .op "PUSH","N","9$1 73 8$1 73"
<00002>                   .op "POP","N","60 72 A$1 F0 B$1"
<00003>                   .op "MOV","NR","9$2 B$1 8$2 A$1"
<00004>                   .op "MOV","NW","F8 H2 B$1 F8 L2 A$1"
<00005>                   .op "CALL","W","D4 H1 L1"
<00006>                   .op "RTN","","D5"
<00007>                   .op "CLC","","FC 00"
<00008>                   .op "STC","","FF 00"
<00009>                   .op "COPY","NR","8$1 A$2 9$1 B$2"
<00010>                   .op "LOAD","NW","F8 L2 A$1 F8 H2 B$1"
<00011>                   .op "RETURN","","D5"
<00012>                   .op "MATCH","NW","8$1 FF L2 52 9$1 7F H2 F1"
<00013>                   .op "BRKPT","","79 D1"
<00000>                   #include include/bios.inc
<00001>                   ; *******************************************************************
<00002>                   ; *** This software is copyright 2006 by Michael H Riley          ***
<00003>                   ; *** You have permission to use, modify, copy, and distribute    ***
<00004>                   ; *** this software so long as this copyright notice is retained. ***
<00005>                   ; *** This software may not be used in commercial applications    ***
<00006>                   ; *** without express written permission from the author.         ***
<00007>                   ; *******************************************************************
<00008>                   
<00011>                   #endif
<00012>                   
<00013>                   ; Define address for standard BIOS vectors
<00014>                   #ifndef BIOS
<00015>                   #define BIOS 0ff00h
<00016>                   #endif
<00017>                   
<00018>                   ; Define address for extended BIOS vectors
<00019>                   #ifndef EBIOS
<00020>                   #define EBIOS 0f800h
<00021>                   #endif
<00022>                   
<00023>                   #ifndef _TASM_
<00024> 0000:             scall:      equ  r4                    ; register for SCALL
<00025> 0000:             sret:       equ  r5                    ; register for SRET
<00026>                   
<00027> 0000:             call:       equ  0ffe0h                ; depricated
<00028> 0000:             ret:        equ  0fff1h                ; depricated
<00029>                   #endif
<00030>                   
<00031> 0000:             f_boot:     equ  (BIOS+00h)            ; boot from ide device
<00032> 0000:             f_type:     equ  (BIOS+03h)            ; type 1 character to console
<00033> 0000:             f_read:     equ  (BIOS+06h)            ; read 1 character from console
<00034> 0000:             f_msg:      equ  (BIOS+09h)            ; type asciiz string to console
<00035> 0000:             f_typex:    equ  (BIOS+0ch)            ; depricated, just returns now
<00036> 0000:             f_input:    equ  (BIOS+0fh)            ; read asciiz from console
<00037> 0000:             f_strcmp:   equ  (BIOS+12h)            ; compare 2 strings
<00038> 0000:             f_ltrim:    equ  (BIOS+15h)            ; trim leading spaces
<00039> 0000:             f_strcpy:   equ  (BIOS+18h)            ; copy an asciiz string
<00040> 0000:             f_memcpy:   equ  (BIOS+1bh)            ; copy memory
<00041> 0000:             f_wrtsec:   equ  (BIOS+1eh)            ; write floppy sector (depricated)
<00042> 0000:             f_rdsec:    equ  (BIOS+21h)            ; read floppy sector (depricated)
<00043> 0000:             f_seek0:    equ  (BIOS+24h)            ; floppy seek to track 0 (depricated)
<00044> 0000:             f_seek:     equ  (BIOS+27h)            ; floopy track seek (depricated)
<00045> 0000:             f_drive:    equ  (BIOS+2ah)            ; select floppy drive (depricated)
<00046> 0000:             f_setbd:    equ  (BIOS+2dh)            ; set console baud rate
<00047> 0000:             f_mul16:    equ  (BIOS+30h)            ; 16-bit multiply
<00048> 0000:             f_div16:    equ  (BIOS+33h)            ; 16-bit division
<00049> 0000:             f_idereset: equ  (BIOS+36h)            ; reset ide device
<00050> 0000:             f_idewrite: equ  (BIOS+39h)            ; write ide sector
<00051> 0000:             f_ideread:  equ  (BIOS+3ch)            ; read ide sector
<00052> 0000:             f_initcall: equ  (BIOS+3fh)            ; initialize R4 and R5
<00053> 0000:             f_bootide:  equ  (BIOS+42h)            ; boot from ide device
<00054> 0000:             f_hexin:    equ  (BIOS+45h)            ; convert ascii number to hex
<00055> 0000:             f_hexout2:  equ  (BIOS+48h)            ; convert hex to 2-digit ascii
<00056> 0000:             f_hexout4:  equ  (BIOS+4bh)            ; convert hex to 4-digit ascii
<00057> 0000:             f_tty:      equ  (BIOS+4eh)            ; type character to console
<00058> 0000:             f_mover:    equ  (BIOS+51h)            ; program relocator
<00059> 0000:             f_minimon:  equ  (BIOS+54h)            ; mini monitor
<00060> 0000:             f_freemem:  equ  (BIOS+57h)            ; determine memory size
<00061> 0000:             F_isnum:    equ  (BIOS+5ah)            ; determine if D is numeric
<00062> 0000:             f_atoi:     equ  (BIOS+5dh)            ; convert ascii to integer
<00063> 0000:             f_uintout:  equ  (BIOS+60h)            ; convert unsigned integer to ascii
<00064> 0000:             f_intout:   equ  (BIOS+63h)            ; convert signed integer to ascii
<00065> 0000:             f_inmsg:    equ  (BIOS+66h)            ; type in-line message
<00066> 0000:             f_inputl:   equ  (BIOS+69h)            ; read limited line from console
<00067> 0000:             f_brktest:  equ  (BIOS+6ch)            ; check for serial break
<00068> 0000:             f_findtkn:  equ  (BIOS+6fh)            ; find token in a token table
<00069> 0000:             f_isalpha:  equ  (BIOS+72h)            ; determine if D is alphabetic
<00070> 0000:             f_ishex:    equ  (BIOS+75h)            ; determine if D is hexadecimal
<00071> 0000:             f_isalnum:  equ  (BIOS+78h)            ; determine if D is alpha or numeric
<00072> 0000:             f_idnum:    equ  (BIOS+7bh)            ; determine type of ascii number
<00073> 0000:             f_isterm:   equ  (BIOS+7eh)            ; determine if D is a termination char
<00074> 0000:             f_getdev:   equ  (BIOS+81h)            ; get supported devices
<00075>                   
<00076> 0000:             f_version:  equ  (BIOS+0f9h)           ; 3 bytes holding bios version number
<00077>                   
<00078>                   ; "Extended" BIOS vectors
<00079>                   
<00080> 0000:             f_bread:    equ  (EBIOS+00h)        ; read from onboard serial port
<00081> 0000:             f_btype:    equ  (EBIOS+03h)        ; write to onboard serial port
<00082> 0000:             f_btest:    equ  (EBIOS+06h)        ; test onboard serial port
<00083> 0000:             f_utype:    equ  (EBIOS+09h)        ; write to disk board UART
<00084> 0000:             f_uread:    equ  (EBIOS+0ch)        ; read from disk board UART
<00085> 0000:             f_utest:    equ  (EBIOS+0fh)        ; test disk board UART
<00086> 0000:             f_usetbd:   equ  (EBIOS+12h)        ; set disk board UART baud rate and format
<00087> 0000:             f_gettod:   equ  (EBIOS+15h)        ; read time of day clock
<00088> 0000:             f_settod:   equ  (EBIOS+18h)        ; set time of day clock
<00089> 0000:             f_rdnvr:    equ  (EBIOS+1bh)        ; read non volatile RAM
<00090> 0000:             f_wrnvr:    equ  (EBIOS+1eh)        ; write non volatile RAM
<00091> 0000:             f_idesize:  equ  (EBIOS+21h)        ; return size of attached IDE drive(s)
<00092> 0000:             f_ideid:    equ  (EBIOS+24h)        ; return device data for IDE drive(s)
<00093> 0000:             f_tmtoas:   equ  (EBIOS+2ah)        ; time to ASCII string
<00094> 0000:             f_dttoas:   equ  (EBIOS+27h)        ; date to ASCII string
<00095> 0000:             f_rtctest:  equ  (EBIOS+2dh)        ; test size and presence of RTC/NVR
<00096> 0000:             f_astodt:   equ  (EBIOS+30h)        ; convert ASCII string to date
<00097> 0000:             f_astotm:   equ  (EBIOS+33h)        ; convert ASCII string to time
<00000>                   #include include/kernel.inc
<00001> 0000:             O_CLDBOOT:    equ    0300h             ; jump to cold boot routine
<00002> 0000:             O_WRMBOOT:    equ    0303h             ; jump to warm boot routine
<00003> 0000:             O_OPEN:       equ    0306h             ; open a file
<00004> 0000:             O_READ:       equ    0309h             ; read from file
<00005> 0000:             O_WRITE:      equ    030ch             ; write to file
<00006> 0000:             O_SEEK:       equ    030fh             ; seek to file position
<00007> 0000:             O_CLOSE:      equ    0312h             ; close file
<00008> 0000:             O_OPENDIR:    equ    0315h             ; open dir as a file
<00009> 0000:             O_DELETE:     equ    0318h             ; delete a file
<00010> 0000:             O_RENAME:     equ    031bh             ; rename a file
<00011> 0000:             O_EXEC:       equ    031eh             ; execute an external program
<00012> 0000:             O_MKDIR:      equ    0321h             ; make directory
<00013> 0000:             O_CHDIR:      equ    0324h             ; change directory
<00014> 0000:             O_RMDIR:      equ    0327h             ; remove directory
<00015> 0000:             O_RDLUMP:     equ    032Ah             ; read LAT entry
<00016> 0000:             O_RDLUMP32:   equ    040fh             ; read 32-bit LAT entry
<00017> 0000:             O_WRLUMP:     equ    032Dh             ; write LAT entry
<00018> 0000:             O_WRLUMP32:   equ    0421h             ; write LAT entry
<00019> 0000:             O_TYPE:       equ    0330h             ; passthrough for console output
<00020> 0000:             O_MSG:        equ    0333h             ; passthrough for console output
<00021> 0000:             O_READKEY:    equ    0336h             ; passthrough for console input
<00022> 0000:             O_INPUT:      equ    0339h             ; passthrough for console input
<00023> 0000:             O_PRTSTAT:    equ    033ch             ; printer status
<00024> 0000:             O_PRINT:      equ    033fh             ; output to printer
<00025> 0000:             O_EXECBIN:    equ    0342h             ; execute from default directory
<00026> 0000:             O_SETDEF:     equ    0345h             ; set/get default directory
<00027> 0000:             O_KINIT:      equ    0348h             ; reserved - do not use!!!
<00028> 0000:             O_INMSG:      equ    034bh             ; passthrough for console output
<00029> 0000:             O_GETDEV:     equ    034eh             ; passthrough to f_getdef
<00030> 0000:             O_GETTOD:     equ    0351h             ; passthrough to f_gettod
<00031> 0000:             O_SETTOD:     equ    0354h             ; passthrough to f_settod
<00032> 0000:             O_INPUTL:     equ    0357h             ; passthrough to f_inputl
<00033> 0000:             O_BOOT:       equ    035ah             ; passthrough to f_boot
<00034> 0000:             O_SETBD:      equ    0360h             ; passthrough to f_setbd
<00035> 0000:             O_INITCALL:   equ    0363h             ; passthrough to f_initcall
<00036> 0000:             O_BRKTEST:    equ    0366h             ; passthrough to f_brktest
<00037> 0000:             O_DEVCTRL:    equ    0369h             ; Hook for device control drivers
<00038> 0000:             O_ALLOC:      equ    036ch             ; passthrough to alloc
<00039> 0000:             O_DEALLOC:    equ    036fh             ; passthrough to dealloc
<00040> 0000:             O_TERMCTRL:   equ    0372h             ; Hook for terminal control drivers
<00041> 0000:             O_NBREAD:     equ    0375h             ; passthrough to f_nbread
<00042> 0000:             O_MEMBTRL:    equ    0378h             ; Hook for memory control drivers
<00043> 0000:             O_LMPTOSEC:   equ    0409h             ; convert lump to sector
<00044> 0000:             O_SECTOLMP:   equ    040ch             ; convert sector to lump
<00045> 0000:             O_DIRENT:     equ    037Bh             ; get dirent for a file
<00046> 0000:             O_RELSEC:     equ    0418h             ; find relative sector
<00047> 0000:             O_TRUNC:      equ    046ah             ; Truncate file
<00048> 0000:             O_VIDEO:      equ    0456h             ; video driver hook
<00049> 0000:             D_IDERESET:   equ    0444h             ; passthrough to f_idereset
<00050> 0000:             D_IDEREAD:    equ    0447h             ; passthrough to f_ideread
<00051> 0000:             D_IDEWRITE:   equ    044Ah             ; passthrough to f_idewrite
<00052> 0000:             D_REAPHEAP:   equ    044Dh             ; calls heap reaper to clean non-permanent heap blocks
<00053> 0000:             D_SAVESYS:    equ    0459h             ; save system sector
<00054> 0000:             D_DELCHAIN:   equ    0453h             ; delete an AU chain
<00055> 0000:             D_ALLOCAU:    equ    045eh             ; allocate an AU
<00056> 0000:             D_FREEDIRENT: equ    046dh             ; allocate a DIRENT
<00057> 0000:             I_SERVE:      equ    03f6h             ; address of interrupt chain head
<00058> 0000:             V_IVEC:       equ    03fdh             ; interrupt head
<00059> 0000:             V_DVEC:       equ    036ah             ; device head
<00060> 0000:             K_SYS_DTA:    equ    0100h             ; system sector DTA
<00061> 0000:             K_VER:        equ    0400h             ; kernel version number
<00062> 0000:             K_BUILD:      equ    0403h             ; kernel build number
<00063> 0000:             K_BMONTH:     equ    0405h             ; kernel build month
<00064> 0000:             K_BDAY:       equ    0406h             ; kernel build day
<00065> 0000:             K_BYEAR:      equ    0407h             ; kernel build month
<00066> 0000:             K_LASTSEC:    equ    042bh             ; sector currently in sys DTA
<00067> 0000:             K_CWD_LUMP:   equ    0436h             ; lump for current directory
<00068> 0000:             K_EXEC_AU:    equ    043Eh             ; executable starting AU
<00069> 0000:             K_HIMEM:      equ    0442h             ; high memory pointer
<00070> 0000:             K_LOWMEM:     equ    0465h             ; lowest memory heap can use
<00071> 0000:             K_RETVAL:     equ    0467h             ; D on program exit
<00072> 0000:             K_HEAP:       equ    0468h             ; heap pointer
<00073> 0000:             K_CLKFREQ:    equ    0470h             ; system clock frequency
<00074> 0000:             K_MONTH:      equ    0475h             ; date/time
<00075> 0000:             K_DAY:        equ    0476h
<00076> 0000:             K_YEAR:       equ    0477h
<00077> 0000:             K_HOUR:       equ    0478h
<00078> 0000:             K_MINUTE:     equ    0479h
<00079> 0000:             K_SECOND:     equ    047ah
<00080> 0000:             K_SECDEN:     equ    047bh
<00081> 0000:             K_SECNUM:     equ    047dh
<00082>                   
<00083>                   
<00000>                   #include include/elfc.inc
<00001>                   ;-------------------------------------------------------------------------------
<00002>                   ; elfc - a library for basic c language functions
<00003>                   ;-------------------------------------------------------------------------------
<00004> 0000:                       extrn   epush16
<00005> 0000:                       extrn   epush8
<00006> 0000:                       extrn   dpop16
<00007> 0000:                       extrn   abs16
<00008> 0000:                       extrn   add16
<00009> 0000:                       extrn   and16
<00010> 0000:                       extrn   atoi16
<00011> 0000:                       extrn   div16
<00012> 0000:                       extrn   eq16
<00013> 0000:                     	extrn   false16
<00014> 0000:                     	extrn   gt16
<00015> 0000:                     	extrn   gte16
<00016> 0000:                     	extrn   itoa16
<00017> 0000:                     	extrn   lfsrshift
<00018> 0000:                     	extrn   lt16
<00019> 0000:                     	extrn   lte16
<00020> 0000:                     	extrn   mdnorm16
<00021> 0000:                     	extrn   mod16
<00022> 0000:                     	extrn   mul16
<00023> 0000:                     	extrn   ne16
<00024> 0000:                     	extrn   neg16
<00025> 0000:                     	extrn   or16
<00026> 0000:                     	extrn   rnd16
<00027> 0000:                     	extrn   sgn16
<00028> 0000:                     	extrn   sub16
<00029> 0000:                     	extrn   tobcd16
<00030> 0000:                     	extrn   true16
<00031> 0000:                     	extrn   xor16
<00032> 0000:                       extrn   not16
<00033> 0000:                       extrn   bool16
<00034> 0000:                       extrn   inv16
<00035> 0000:                       extrn   shl16
<00036> 0000:                       extrn   shr16
<00037> 0000:                       extrn   vpush16
<00038> 0000:                       extrn   vpop16
<00039> 0000:                       extrn   vpush8
<00040> 0000:                       extrn   dpush16
<00041> 0000:                       extrn   dpush8
<00042> 0000:                       extrn   esmove
<00043> 0000:                       extrn   linit16
<00044> 0000:                       extrn   lstor16
<00045> 0000:                       extrn   lstor8
<00046> 0000:                       extrn   vstor16
<00047> 0000:                       extrn   vstor8
<00048> 0000:                       extrn   swap16
<00049> 0000:                       extrn   dget16
<00050> 0000:                       extrn   lpush16
<00051> 0000:                       extrn   lpush8
<00052> 0000:                       extrn   deref16
<00053> 0000:                       extrn   deref8
<00054> 0000:                       extrn   laddr16
<00055> 0000:                       extrn   pstor16
<00056> 0000:                       extrn   pstor8
<00057> 0000:                       extrn   scltos2
<00058> 0000:                       extrn   sclsos2
<00059> 0000:                       extrn   unscl2
<00060> 0000:                       extrn   vinc16
<00061> 0000:                       extrn   vdec16
<00062> 0000:                       extrn   vinc8
<00063> 0000:                       extrn   vdec8
<00064> 0000:                       extrn   linc16
<00065> 0000:                       extrn   ldec16
<00066> 0000:                       extrn   linc8
<00067> 0000:                       extrn   ldec8
<00068> 0000:                       extrn   lpinc16
<00069> 0000:                       extrn   lpdec16
<00070> 0000:                       extrn   vpinc16
<00071> 0000:                       extrn   vpdec16
<00072> 0000:                       extrn   psave
<00073> 0000:                       extrn   pinc16
<00074> 0000:                       extrn   pdec16
<00075> 0000:                       extrn   pinc8
<00076> 0000:                       extrn   pdec8
<00077> 0000:                       extrn   pincptr
<00078> 0000:                       extrn   pdecptr
<00079> 0000:                       extrn   escheck
<00080> 0000:                       extrn   ugt16
<00081> 0000:                     	extrn   uge16
<00082> 0000:                       extrn   ult16
<00083> 0000:                     	extrn   ule16
<00084> 0000:                       extrn   scltos4
<00085> 0000:                       extrn   sclsos4
<00086> 0000:                       extrn   unscl4
<00087> 0000:                       extrn   lget16
<00088> 0000:                       extrn   lget8
<00089> 0000:                       extrn   lset16
<00090>                   
<00091>                   ;-------------------------------------------------------------------------------
<00092>                   ; crt0 - Elf/OS c start-up library
<00093>                   ;-------------------------------------------------------------------------------
<00094> 0000:                       extrn   auto_err
[00009]                   
[00010] 0000:             	           proc filetest3
[00011]                   
[00012]                   #define STGROM
[00013]                   
[00014] 0000:                         extrn C_init
[00015]                   
[00016] 0000:                         extrn C_fdinit
[00017]                   
[00018] 0000:                         extrn C_fdtable
[00019]                   
[00020] 0000:                         extrn C_fildes
[00021]                   
[00022] 0000:                         extrn Cabort
[00023]                   
[00024] 0000:                         extrn Cabs
[00025]                   
[00026] 0000:                         extrn Catexit
[00027]                   
[00028] 0000:                         extrn Cexit
[00029]                   
[00030] 0000:                         extrn Cmalloc
[00031]                   
[00032] 0000:                         extrn Ccalloc
[00033]                   
[00034] 0000:                         extrn Crealloc
[00035]                   
[00036] 0000:                         extrn Cfree
[00037]                   
[00038] 0000:                         extrn Catoi
[00039]                   
[00040] 0000:                         extrn Citoa
[00041]                   
[00042] 0000:                         extrn Citox
[00043]                   
[00044] 0000:                         extrn Citou
[00045]                   
[00046] 0000:                         extrn Cdiv
[00047]                   
[00048] 0000:                         extrn Cbsearch
[00049]                   
[00050] 0000:                         extrn Cqsort
[00051]                   
[00052] 0000:                         extrn Crand
[00053]                   
[00054] 0000:                         extrn Csrand
[00055]                   
[00056] 0000:                         extrn Ccreat
[00057]                   
[00058] 0000:                         extrn Copen
[00059]                   
[00060] 0000:                         extrn Cclose
[00061]                   
[00062] 0000:                         extrn Cread
[00063]                   
[00064] 0000:                         extrn Cwrite
[00065]                   
[00066] 0000:                         extrn Clseek
[00067]                   
[00068] 0000:                         extrn Cunlink
[00069]                   
[00070] 0000:                         extrn Crename
[00071]                   
[00072] 0000:                         extrn Cmin
[00073]                   
[00074] 0000:                         extrn Cmax
[00075]                   
[00076] 0000:                         extrn Cstdin
[00077]                   
[00078] 0000:                         extrn Cstdout
[00079]                   
[00080] 0000:                         extrn Cstderr
[00081]                   
[00082] 0000:                         extrn Cputs
[00083]                   
[00084] 0000:                         extrn Cputstr
[00085]                   
[00086] 0000:                         extrn Cgets
[00087]                   
[00088] 0000:                         extrn Cputch
[00089]                   
[00090] 0000:                         extrn Cgetch
[00091]                   
[00092] 0000:                         extrn Cputchar
[00093]                   
[00094] 0000:                         extrn Cgetchar
[00095]                   
[00096] 0000:                         extrn Cfdopen
[00097]                   
[00098] 0000:                         extrn Cfclose
[00099]                   
[00100] 0000:                         extrn Cfopen
[00101]                   
[00102] 0000:                         extrn Cferror
[00103]                   
[00104] 0000:                         extrn Cfeof
[00105]                   
[00106] 0000:                         extrn Cclearerr
[00107]                   
[00108] 0000:                         extrn Cfgetc
[00109]                   
[00110] 0000:                         extrn Cfputc
[00111]                   
[00112] 0000:                         extrn Cfgets
[00113]                   
[00114] 0000:                         extrn Cfputs
[00115]                   
[00116] 0000:                         extrn Cungetc
[00117]                   
[00118] 0000:                         extrn Cfread
[00119]                   
[00120] 0000:                         extrn Cfwrite
[00121]                   
[00122] 0000:                         extrn Cfflush
[00123]                   
[00124] 0000:                         extrn Cfprintf
[00125]                   
[00126] 0000:                         extrn Ckprintf
[00127]                   
[00128] 0000:                         extrn Cprintf
[00129]                   
[00130] 0000:                         extrn Csprintf
[00131]                   
[00132] 0000:                         extrn Cvfprintf
[00133]                   
[00134] 0000:                         extrn Cvprintf
[00135]                   
[00136] 0000:                         extrn Cvsprintf
[00137]                   
[00138] 0000:                         extrn Cfscanf
[00139]                   
[00140] 0000:                         extrn Cscanf
[00141]                   
[00142] 0000:                         extrn Csscanf
[00143]                   
[00144] 0000:                         extrn Cfgetpos
[00145]                   
[00146] 0000:                         extrn Cfsetpos
[00147]                   
[00148] 0000:                         extrn Cfseek
[00149]                   
[00150] 0000:                         extrn Cftell
[00151]                   
[00152] 0000:                         extrn Cperror
[00153]                   
[00154] 0000:                         extrn Crewind
[00155]                   
[00156] 0000:                         extrn Cremove
[00157]                   
[00158] 0000:                         extrn Ctmpnam
[00159]                   
[00160] 0000:                         extrn Ctmpfile
[00161]                   
[00162] 0000:                         extrn Cfileno
[00163]                   
[00164]                   .link .library string.lib
[00165]                   
[00166] 0000:                         extrn Cmemchr
[00167]                   
[00168] 0000:                         extrn Cmemcmp
[00169]                   
[00170] 0000:                         extrn Cmemcpy
[00171]                   
[00172] 0000:                         extrn Cmemmove
[00173]                   
[00174] 0000:                         extrn Cmemset
[00175]                   
[00176] 0000:                         extrn Cstrcat
[00177]                   
[00178] 0000:                         extrn Cstrchr
[00179]                   
[00180] 0000:                         extrn Cstrcmp
[00181]                   
[00182] 0000:                         extrn Cstrcpy
[00183]                   
[00184] 0000:                         extrn Cstrcspn
[00185]                   
[00186] 0000:                         extrn Cstrdup
[00187]                   
[00188] 0000:                         extrn Cstrerror
[00189]                   
[00190] 0000:                         extrn Cstrlen
[00191]                   
[00192] 0000:                         extrn Cstrncat
[00193]                   
[00194] 0000:                         extrn Cstrncmp
[00195]                   
[00196] 0000:                         extrn Cstrncpy
[00197]                   
[00198] 0000:                         extrn Cstrlcpy
[00199]                   
[00200] 0000:                         extrn Cstrpbrk
[00201]                   
[00202] 0000:                         extrn Cstrrchr
[00203]                   
[00204] 0000:                         extrn Cstrspn
[00205]                   
[00206] 0000:                         extrn Cstrstr
[00207]                   
[00208] 0000:                         extrn Cstrtok
[00209]                   	;----- cgpublic
[00210] 0000:             	              public CErrors
[00211] 0000: 00 00       CErrors:	db	$00, $00  ;----- cgdefw LSB first, MSB second
[00212]                   	;----- cgpublic
[00213] 0002:             	              public Cresult
[00214] 0002: 00 00       Cresult:	db	$00, $00  ;----- cgdefw LSB first, MSB second
[00215]                   	;----- cgpublic
[00216] 0004:             	              public Cs1
[00217] 0004:             Cs1:    ds 80    ;----- cggbss
[00218]                   	;----- cgpublic
[00219] 0054:             	              public Cs2
[00220] 0054:             Cs2:    ds 80    ;----- cggbss
[00221]                   	;----- cgpublic
[00222] 00a4:             	              public Cfail
[00223]                   Cfail:	;---- cgentry
[00224] 00a4: e2          	          sex   r2   				 ; make sure X = SP
[00225] 00a5: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00226] 00a9: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00227]                   	;----- begin stmt ------
[00228]                   	;---- queue lbr L3
[00229]                   	;----- cgjump
[00230] 00ad: c0 00 bb    	 				  lbr	L3
[00231]                   
[00232]                   L2:
[00233] 00b0: 25 73 20 66   db '%s failed', 10    ;----- cgdefs
              61 69 6c 65 
              64 0a 
[00234] 00ba: 00          	db	$00    ;----- cgdefb
[00235]                   
[00236]                   L3:
[00237]                   	;----- cgldlw
[00238] 00bb: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00239] 00be: 00 00       	          dw  0  ;--- offset
[00240]                   	;----- cgldlab
[00241] 00c0: d4 00 00    	 				call epush16
[00242] 00c3: 00 b0       	 				  dw  L2
[00243]                   	;----- cgcall
[00244] 00c5: d4 00 00    	          call  Cprintf
[00245]                   	;----- cgstack
[00246] 00c8: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00247] 00cb: 00 04       	          dw  4  ;--- offset
[00248] 00cd: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00249]                   	;---- queue dpush
[00250]                   	;----- push + pop data not required, data remains unchanged in RA
[00251]                   	;----- end stmt ------
[00252]                   	;----- begin stmt ------
[00253]                   	;----- cgldgw
[00254] 00d0: d4 00 00    	 				call vpush16
[00255] 00d3: 00 00       	 				  dw CErrors
[00256]                   	;----- cgincgw
[00257] 00d5: d4 00 00    	 				 call vinc16       ; increment global variable
[00258] 00d8: 00 00       	 				  dw CErrors
[00259]                   	;----- cgpopd
[00260] 00da: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00261]                   	;----- end stmt ------
[00262]                   	;----- begin stmt ------
[00263]                   	;----- cglit
[00264] 00dd: d4 00 00    	 				call epush16
[00265] 00e0: 00 01       	 				  dw 1
[00266]                   	;----- cgstorgw
[00267] 00e2: d4 00 00    	 				 call vstor16       ; store value from ES in global variable
[00268] 00e5: 00 02       	 				  dw Cresult
[00269]                   	;----- cgpopd
[00270] 00e7: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00271]                   	;----- end stmt ------
[00272]                   
[00273]                   L1:
[00274]                   	;----- cgexit
[00275] 00ea: e2          	          sex   r2            ; make sure X = SP
[00276] 00eb: d4 00 00    	          call  escheck       ; check for expression stack creep
[00277] 00ee: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00278]                   
[00279] 00f3: d5          	          rtn	  			 	     ; return to caller
[00280]                   	;----- cgpublic
[00281] 00f4:             	              public Cpr
[00282]                   Cpr:	;---- cgentry
[00283] 00f4: e2          	          sex   r2   				 ; make sure X = SP
[00284] 00f5: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00285] 00f9: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00286]                   	;----- begin stmt ------
[00287]                   	;---- queue lbr L6
[00288]                   	;----- cgjump
[00289] 00fd: c0 01 04    	 				  lbr	L6
[00290]                   
[00291]                   L5:
[00292] 0100: 25 73 0a      db '%s', 10    ;----- cgdefs
[00293] 0103: 00          	db	$00    ;----- cgdefb
[00294]                   
[00295]                   L6:
[00296]                   	;----- cgldlw
[00297] 0104: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00298] 0107: 00 00       	          dw  0  ;--- offset
[00299]                   	;----- cgldlab
[00300] 0109: d4 00 00    	 				call epush16
[00301] 010c: 01 00       	 				  dw  L5
[00302]                   	;----- cgcall
[00303] 010e: d4 00 00    	          call  Cprintf
[00304]                   	;----- cgstack
[00305] 0111: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00306] 0114: 00 04       	          dw  4  ;--- offset
[00307] 0116: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00308]                   	;---- queue dpush
[00309]                   	;----- push + pop data not required, data remains unchanged in RA
[00310]                   	;----- end stmt ------
[00311]                   
[00312]                   L4:
[00313]                   	;----- cgexit
[00314] 0119: e2          	          sex   r2            ; make sure X = SP
[00315] 011a: d4 00 00    	          call  escheck       ; check for expression stack creep
[00316] 011d: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00317]                   
[00318] 0122: d5          	          rtn	  			 	     ; return to caller
[00319] 0123:             L7:    ds 256    ;----- cglbss
[00320]                   	;----- cgpublic
[00321] 0223:             	              public Ctest_sio3
[00322]                   Ctest_sio3:	;---- cgentry
[00323] 0223: e2          	          sex   r2   				 ; make sure X = SP
[00324] 0224: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00325] 0228: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00326]                   	;----- cgstack
[00327] 022c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00328] 022f: ff fa       	          dw  -6  ;--- offset
[00329] 0231: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00330]                   	;----- begin stmt ------
[00331]                   	;----- begin if
[00332]                   	;---- queue lbr L10
[00333]                   	;----- cgjump
[00334] 0234: c0 02 42    	 				  lbr	L10
[00335]                   
[00336]                   L9:
[00337] 0237: 66 74 65 73   db 'ftest5.tmp'    ;----- cgdefs
              74 35 2e 74 
              6d 70 
[00338] 0241: 00          	db	$00    ;----- cgdefb
[00339]                   
[00340]                   L10:
[00341]                   	;---- queue lbr L12
[00342]                   	;----- cgjump
[00343] 0242: c0 02 48    	 				  lbr	L12
[00344]                   
[00345]                   L11:
[00346] 0245: 77 2b         db 'w+'    ;----- cgdefs
[00347] 0247: 00          	db	$00    ;----- cgdefb
[00348]                   
[00349]                   L12:
[00350]                   	;----- cgldlab
[00351] 0248: d4 00 00    	 				call epush16
[00352] 024b: 02 45       	 				  dw  L11
[00353]                   	;----- cgldlab
[00354] 024d: d4 00 00    	 				call epush16
[00355] 0250: 02 37       	 				  dw  L9
[00356]                   	;----- cgcall
[00357] 0252: d4 00 00    	          call  Cfopen
[00358]                   	;----- cgstack
[00359] 0255: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00360] 0258: 00 04       	          dw  4  ;--- offset
[00361] 025a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00362]                   	;---- queue dpush
[00363]                   	;------ commit push
[00364]                   	;----- cgpushd
[00365] 025d: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00366]                   	;----- cgstorlw
[00367] 0260: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00368] 0263: ff fe       	          dw  -2  ;--- offset
[00369]                   	;----- cglit
[00370] 0265: d4 00 00    	 				call epush16
[00371] 0268: 00 00       	 				  dw 0
[00372]                   	;----- queue_cmp
[00373]                   	;----- genbrfalse
[00374]                   	;----- genbranch
[00375]                   	;----- cgbreq
[00376]                   	;----- cgeq
[00377] 026a: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[00378]                   
[00379]                   	;----- cgbrcond
[00380] 026d: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00381] 0270: 9a          	 				 ghi   ra            ; get MSB from result
[00382] 0271: 52          	 				 str   r2            ; save in M(X)
[00383] 0272: 8a          	 				 glo   ra            ; get LSB from result
[00384] 0273: f1          	 				 or                  ; D = MSB | LSB
[00385] 0274: ca 02 7a    	lbnz	L14
[00386] 0277: c0 02 98    	lbr	L13
[00387]                   
[00388]                   L14:
[00389]                   	;----- begin stmt ------
[00390]                   	;----- begin stmt ------
[00391]                   	;---- queue lbr L16
[00392]                   	;----- cgjump
[00393] 027a: c0 02 85    	 				  lbr	L16
[00394]                   
[00395]                   L15:
[00396] 027d: 66 6f 70 65   db 'fopen-1'    ;----- cgdefs
              6e 2d 31 
[00397] 0284: 00          	db	$00    ;----- cgdefb
[00398]                   
[00399]                   L16:
[00400]                   	;----- cgldlab
[00401] 0285: d4 00 00    	 				call epush16
[00402] 0288: 02 7d       	 				  dw  L15
[00403]                   	;----- cgcall
[00404] 028a: d4 00 a4    	          call  Cfail
[00405]                   	;----- cgstack
[00406] 028d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00407] 0290: 00 02       	          dw  2  ;--- offset
[00408] 0292: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00409]                   	;---- queue dpush
[00410]                   	;----- push + pop data not required, data remains unchanged in RA
[00411]                   	;----- end stmt ------
[00412]                   	;----- begin stmt ------
[00413]                   	;----- begin return
[00414]                   	;---- queue lbr L8
[00415]                   	;----- end return
[00416]                   	;----- end stmt ------
[00417]                   	;----- end stmt ------
[00418]                   	;----- cgjump
[00419] 0295: c0 0b 6c    	 				  lbr	L8
[00420]                   
[00421]                   L13:
[00422]                   	;----- end if
[00423]                   	;----- end stmt ------
[00424]                   	;----- begin stmt ------
[00425]                   	;---- queue lbr L18
[00426]                   	;----- cgjump
[00427] 0298: c0 02 a2    	 				  lbr	L18
[00428]                   
[00429]                   L17:
[00430] 029b: 66 77 72 69   db 'fwrite'    ;----- cgdefs
              74 65 
[00431] 02a1: 00          	db	$00    ;----- cgdefb
[00432]                   
[00433]                   L18:
[00434]                   	;----- cgldlab
[00435] 02a2: d4 00 00    	 				call epush16
[00436] 02a5: 02 9b       	 				  dw  L17
[00437]                   	;----- cgcall
[00438] 02a7: d4 00 f4    	          call  Cpr
[00439]                   	;----- cgstack
[00440] 02aa: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00441] 02ad: 00 02       	          dw  2  ;--- offset
[00442] 02af: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00443]                   	;---- queue dpush
[00444]                   	;----- push + pop data not required, data remains unchanged in RA
[00445]                   	;----- end stmt ------
[00446]                   	;----- begin stmt ------
[00447]                   	;----- begin for
[00448]                   	;----- cglit
[00449] 02b2: d4 00 00    	 				call epush16
[00450] 02b5: 00 1f       	 				  dw 31
[00451]                   	;----- cgstorlw
[00452] 02b7: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00453] 02ba: ff fc       	          dw  -4  ;--- offset
[00454]                   	;----- cgpopd
[00455] 02bc: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00456]                   
[00457]                   L19:
[00458]                   	;----- cgldlw
[00459] 02bf: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00460] 02c2: ff fc       	          dw  -4  ;--- offset
[00461]                   	;----- cglit
[00462] 02c4: d4 00 00    	 				call epush16
[00463] 02c7: 00 83       	 				  dw 131
[00464]                   	;----- queue_cmp
[00465]                   	;----- genbrfalse
[00466]                   	;----- genbranch
[00467]                   	;----- cgbrle
[00468]                   	;----- cgle
[00469] 02c9: d4 00 00    	          call  lte16				 ; compare TOS <= SOS on Expression Stack
[00470]                   
[00471]                   	;----- cgbrcond
[00472] 02cc: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00473] 02cf: 9a          	 				 ghi   ra            ; get MSB from result
[00474] 02d0: 52          	 				 str   r2            ; save in M(X)
[00475] 02d1: 8a          	 				 glo   ra            ; get LSB from result
[00476] 02d2: f1          	 				 or                  ; D = MSB | LSB
[00477] 02d3: ca 02 d9    	lbnz	L23
[00478] 02d6: c0 03 64    	lbr	L21
[00479]                   
[00480]                   L23:
[00481]                   	;---- queue lbr L20
[00482]                   	;----- cgjump
[00483] 02d9: c0 02 f4    	 				  lbr	L20
[00484]                   
[00485]                   L22:
[00486]                   	;----- cglit
[00487] 02dc: d4 00 00    	 				call epush16
[00488] 02df: 00 1f       	 				  dw 31
[00489]                   	;----- cgldlw
[00490] 02e1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00491] 02e4: ff fc       	          dw  -4  ;--- offset
[00492]                   	;----- cgadd
[00493] 02e6: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[00494]                   
[00495]                   	;----- cgstorlw
[00496] 02e9: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00497] 02ec: ff fc       	          dw  -4  ;--- offset
[00498]                   	;----- cgpopd
[00499] 02ee: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00500]                   	;---- queue lbr L19
[00501]                   	;----- cgjump
[00502] 02f1: c0 02 bf    	 				  lbr	L19
[00503]                   
[00504]                   L20:
[00505]                   	;----- begin stmt ------
[00506]                   	;----- begin stmt ------
[00507]                   	;----- cgldlw
[00508] 02f4: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00509] 02f7: ff fc       	          dw  -4  ;--- offset
[00510]                   	;----- cgldlw
[00511] 02f9: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00512] 02fc: ff fc       	          dw  -4  ;--- offset
[00513]                   	;----- cgldsa
[00514] 02fe: d4 00 00    	 				call epush16
[00515] 0301: 01 23       	 				   dw L7
[00516]                   	;----- cgcall
[00517] 0303: d4 00 00    	          call  Cmemset
[00518]                   	;----- cgstack
[00519] 0306: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00520] 0309: 00 06       	          dw  6  ;--- offset
[00521] 030b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00522]                   	;---- queue dpush
[00523]                   	;----- push + pop data not required, data remains unchanged in RA
[00524]                   	;----- end stmt ------
[00525]                   	;----- begin stmt ------
[00526]                   	;----- begin if
[00527]                   	;----- cgldlw
[00528] 030e: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00529] 0311: ff fe       	          dw  -2  ;--- offset
[00530]                   	;----- cgldlw
[00531] 0313: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00532] 0316: ff fc       	          dw  -4  ;--- offset
[00533]                   	;----- cglit
[00534] 0318: d4 00 00    	 				call epush16
[00535] 031b: 00 01       	 				  dw 1
[00536]                   	;----- cgldsa
[00537] 031d: d4 00 00    	 				call epush16
[00538] 0320: 01 23       	 				   dw L7
[00539]                   	;----- cgcall
[00540] 0322: d4 00 00    	          call  Cfwrite
[00541]                   	;----- cgstack
[00542] 0325: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00543] 0328: 00 08       	          dw  8  ;--- offset
[00544] 032a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00545]                   	;---- queue dpush
[00546]                   	;----- cgldlw
[00547] 032d: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00548] 0330: ff fc       	          dw  -4  ;--- offset
[00549]                   	;------ commit push
[00550]                   	;----- cgpushd
[00551] 0332: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00552]                   	;----- queue_cmp
[00553]                   	;----- genbrfalse
[00554]                   	;----- genbranch
[00555]                   	;----- cgbrne
[00556]                   	;----- cgne
[00557] 0335: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00558]                   
[00559]                   	;----- cgbrcond
[00560] 0338: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00561] 033b: 9a          	 				 ghi   ra            ; get MSB from result
[00562] 033c: 52          	 				 str   r2            ; save in M(X)
[00563] 033d: 8a          	 				 glo   ra            ; get LSB from result
[00564] 033e: f1          	 				 or                  ; D = MSB | LSB
[00565] 033f: ca 03 45    	lbnz	L25
[00566] 0342: c0 03 61    	lbr	L24
[00567]                   
[00568]                   L25:
[00569]                   	;----- begin stmt ------
[00570]                   	;---- queue lbr L27
[00571]                   	;----- cgjump
[00572] 0345: c0 03 51    	 				  lbr	L27
[00573]                   
[00574]                   L26:
[00575] 0348: 66 77 72 69   db 'fwrite-1'    ;----- cgdefs
              74 65 2d 31 
[00576] 0350: 00          	db	$00    ;----- cgdefb
[00577]                   
[00578]                   L27:
[00579]                   	;----- cgldlab
[00580] 0351: d4 00 00    	 				call epush16
[00581] 0354: 03 48       	 				  dw  L26
[00582]                   	;----- cgcall
[00583] 0356: d4 00 a4    	          call  Cfail
[00584]                   	;----- cgstack
[00585] 0359: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00586] 035c: 00 02       	          dw  2  ;--- offset
[00587] 035e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00588]                   	;---- queue dpush
[00589]                   	;----- push + pop data not required, data remains unchanged in RA
[00590]                   	;----- end stmt ------
[00591]                   
[00592]                   L24:
[00593]                   	;----- end if
[00594]                   	;----- end stmt ------
[00595]                   	;----- end stmt ------
[00596]                   	;---- queue lbr L22
[00597]                   	;----- cgjump
[00598] 0361: c0 02 dc    	 				  lbr	L22
[00599]                   
[00600]                   L21:
[00601]                   	;----- end for
[00602]                   	;----- end stmt ------
[00603]                   	;----- begin stmt ------
[00604]                   	;----- cgldlw
[00605] 0364: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00606] 0367: ff fe       	          dw  -2  ;--- offset
[00607]                   	;----- cgcall
[00608] 0369: d4 00 00    	          call  Crewind
[00609]                   	;----- cgstack
[00610] 036c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00611] 036f: 00 02       	          dw  2  ;--- offset
[00612] 0371: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00613]                   	;---- queue dpush
[00614]                   	;----- push + pop data not required, data remains unchanged in RA
[00615]                   	;----- end stmt ------
[00616]                   	;----- begin stmt ------
[00617]                   	;---- queue lbr L29
[00618]                   	;----- cgjump
[00619] 0374: c0 03 7d    	 				  lbr	L29
[00620]                   
[00621]                   L28:
[00622] 0377: 66 72 65 61   db 'fread'    ;----- cgdefs
              64 
[00623] 037c: 00          	db	$00    ;----- cgdefb
[00624]                   
[00625]                   L29:
[00626]                   	;----- cgldlab
[00627] 037d: d4 00 00    	 				call epush16
[00628] 0380: 03 77       	 				  dw  L28
[00629]                   	;----- cgcall
[00630] 0382: d4 00 f4    	          call  Cpr
[00631]                   	;----- cgstack
[00632] 0385: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00633] 0388: 00 02       	          dw  2  ;--- offset
[00634] 038a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00635]                   	;---- queue dpush
[00636]                   	;----- push + pop data not required, data remains unchanged in RA
[00637]                   	;----- end stmt ------
[00638]                   	;----- begin stmt ------
[00639]                   	;----- begin for
[00640]                   	;----- cglit
[00641] 038d: d4 00 00    	 				call epush16
[00642] 0390: 00 1f       	 				  dw 31
[00643]                   	;----- cgstorlw
[00644] 0392: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00645] 0395: ff fc       	          dw  -4  ;--- offset
[00646]                   	;----- cgpopd
[00647] 0397: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00648]                   
[00649]                   L30:
[00650]                   	;----- cgldlw
[00651] 039a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00652] 039d: ff fc       	          dw  -4  ;--- offset
[00653]                   	;----- cglit
[00654] 039f: d4 00 00    	 				call epush16
[00655] 03a2: 00 83       	 				  dw 131
[00656]                   	;----- queue_cmp
[00657]                   	;----- genbrfalse
[00658]                   	;----- genbranch
[00659]                   	;----- cgbrle
[00660]                   	;----- cgle
[00661] 03a4: d4 00 00    	          call  lte16				 ; compare TOS <= SOS on Expression Stack
[00662]                   
[00663]                   	;----- cgbrcond
[00664] 03a7: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00665] 03aa: 9a          	 				 ghi   ra            ; get MSB from result
[00666] 03ab: 52          	 				 str   r2            ; save in M(X)
[00667] 03ac: 8a          	 				 glo   ra            ; get LSB from result
[00668] 03ad: f1          	 				 or                  ; D = MSB | LSB
[00669] 03ae: ca 03 b4    	lbnz	L34
[00670] 03b1: c0 04 e3    	lbr	L32
[00671]                   
[00672]                   L34:
[00673]                   	;---- queue lbr L31
[00674]                   	;----- cgjump
[00675] 03b4: c0 03 cf    	 				  lbr	L31
[00676]                   
[00677]                   L33:
[00678]                   	;----- cglit
[00679] 03b7: d4 00 00    	 				call epush16
[00680] 03ba: 00 1f       	 				  dw 31
[00681]                   	;----- cgldlw
[00682] 03bc: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00683] 03bf: ff fc       	          dw  -4  ;--- offset
[00684]                   	;----- cgadd
[00685] 03c1: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[00686]                   
[00687]                   	;----- cgstorlw
[00688] 03c4: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00689] 03c7: ff fc       	          dw  -4  ;--- offset
[00690]                   	;----- cgpopd
[00691] 03c9: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00692]                   	;---- queue lbr L30
[00693]                   	;----- cgjump
[00694] 03cc: c0 03 9a    	 				  lbr	L30
[00695]                   
[00696]                   L31:
[00697]                   	;----- begin stmt ------
[00698]                   	;----- begin stmt ------
[00699]                   	;----- cgldlw
[00700] 03cf: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00701] 03d2: ff fc       	          dw  -4  ;--- offset
[00702]                   	;----- cgldlw
[00703] 03d4: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00704] 03d7: ff fc       	          dw  -4  ;--- offset
[00705]                   	;----- cgldsa
[00706] 03d9: d4 00 00    	 				call epush16
[00707] 03dc: 01 23       	 				   dw L7
[00708]                   	;----- cgcall
[00709] 03de: d4 00 00    	          call  Cmemset
[00710]                   	;----- cgstack
[00711] 03e1: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00712] 03e4: 00 06       	          dw  6  ;--- offset
[00713] 03e6: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00714]                   	;---- queue dpush
[00715]                   	;----- push + pop data not required, data remains unchanged in RA
[00716]                   	;----- end stmt ------
[00717]                   	;----- begin stmt ------
[00718]                   	;----- begin if
[00719]                   	;----- cgldlw
[00720] 03e9: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00721] 03ec: ff fe       	          dw  -2  ;--- offset
[00722]                   	;----- cgldlw
[00723] 03ee: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00724] 03f1: ff fc       	          dw  -4  ;--- offset
[00725]                   	;----- cglit
[00726] 03f3: d4 00 00    	 				call epush16
[00727] 03f6: 00 01       	 				  dw 1
[00728]                   	;----- cgldsa
[00729] 03f8: d4 00 00    	 				call epush16
[00730] 03fb: 01 23       	 				   dw L7
[00731]                   	;----- cgcall
[00732] 03fd: d4 00 00    	          call  Cfread
[00733]                   	;----- cgstack
[00734] 0400: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00735] 0403: 00 08       	          dw  8  ;--- offset
[00736] 0405: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00737]                   	;---- queue dpush
[00738]                   	;----- cgldlw
[00739] 0408: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00740] 040b: ff fc       	          dw  -4  ;--- offset
[00741]                   	;------ commit push
[00742]                   	;----- cgpushd
[00743] 040d: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00744]                   	;----- queue_cmp
[00745]                   	;----- genbrfalse
[00746]                   	;----- genbranch
[00747]                   	;----- cgbrne
[00748]                   	;----- cgne
[00749] 0410: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00750]                   
[00751]                   	;----- cgbrcond
[00752] 0413: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00753] 0416: 9a          	 				 ghi   ra            ; get MSB from result
[00754] 0417: 52          	 				 str   r2            ; save in M(X)
[00755] 0418: 8a          	 				 glo   ra            ; get LSB from result
[00756] 0419: f1          	 				 or                  ; D = MSB | LSB
[00757] 041a: ca 04 20    	lbnz	L36
[00758] 041d: c0 04 3b    	lbr	L35
[00759]                   
[00760]                   L36:
[00761]                   	;----- begin stmt ------
[00762]                   	;---- queue lbr L38
[00763]                   	;----- cgjump
[00764] 0420: c0 04 2b    	 				  lbr	L38
[00765]                   
[00766]                   L37:
[00767] 0423: 66 72 65 61   db 'fread-1'    ;----- cgdefs
              64 2d 31 
[00768] 042a: 00          	db	$00    ;----- cgdefb
[00769]                   
[00770]                   L38:
[00771]                   	;----- cgldlab
[00772] 042b: d4 00 00    	 				call epush16
[00773] 042e: 04 23       	 				  dw  L37
[00774]                   	;----- cgcall
[00775] 0430: d4 00 a4    	          call  Cfail
[00776]                   	;----- cgstack
[00777] 0433: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00778] 0436: 00 02       	          dw  2  ;--- offset
[00779] 0438: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00780]                   	;---- queue dpush
[00781]                   	;----- push + pop data not required, data remains unchanged in RA
[00782]                   	;----- end stmt ------
[00783]                   
[00784]                   L35:
[00785]                   	;----- end if
[00786]                   	;----- end stmt ------
[00787]                   	;----- begin stmt ------
[00788]                   	;----- begin for
[00789]                   	;----- cglit
[00790] 043b: d4 00 00    	 				call epush16
[00791] 043e: 00 00       	 				  dw 0
[00792]                   	;----- cgstorlw
[00793] 0440: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00794] 0443: ff fa       	          dw  -6  ;--- offset
[00795]                   	;----- cgpopd
[00796] 0445: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00797]                   
[00798]                   L39:
[00799]                   	;----- cgldlw
[00800] 0448: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00801] 044b: ff fa       	          dw  -6  ;--- offset
[00802]                   	;----- cgldlw
[00803] 044d: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00804] 0450: ff fc       	          dw  -4  ;--- offset
[00805]                   	;----- queue_cmp
[00806]                   	;----- genbrfalse
[00807]                   	;----- genbranch
[00808]                   	;----- cgbrlt
[00809]                   	;----- cglt
[00810] 0452: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[00811]                   
[00812]                   	;----- cgbrcond
[00813] 0455: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00814] 0458: 9a          	 				 ghi   ra            ; get MSB from result
[00815] 0459: 52          	 				 str   r2            ; save in M(X)
[00816] 045a: 8a          	 				 glo   ra            ; get LSB from result
[00817] 045b: f1          	 				 or                  ; D = MSB | LSB
[00818] 045c: ca 04 62    	lbnz	L43
[00819] 045f: c0 04 a8    	lbr	L41
[00820]                   
[00821]                   L43:
[00822]                   	;---- queue lbr L40
[00823]                   	;----- cgjump
[00824] 0462: c0 04 75    	 				  lbr	L40
[00825]                   
[00826]                   L42:
[00827]                   	;----- cgldlw
[00828] 0465: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00829] 0468: ff fa       	          dw  -6  ;--- offset
[00830]                   	;----- cginclw
[00831] 046a: d4 00 00    	          call  linc16       ; increment local variable
[00832] 046d: ff fa       	          dw  -6  ;--- offset
[00833]                   	;----- cgpopd
[00834] 046f: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00835]                   	;---- queue lbr L39
[00836]                   	;----- cgjump
[00837] 0472: c0 04 48    	 				  lbr	L39
[00838]                   
[00839]                   L40:
[00840]                   	;----- begin stmt ------
[00841]                   	;----- begin stmt ------
[00842]                   	;----- begin if
[00843]                   	;----- cgldsa
[00844] 0475: d4 00 00    	 				call epush16
[00845] 0478: 01 23       	 				   dw L7
[00846]                   	;----- cgldlw
[00847] 047a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00848] 047d: ff fa       	          dw  -6  ;--- offset
[00849]                   	;----- cgadd
[00850] 047f: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[00851]                   
[00852]                   	;----- cgindb
[00853] 0482: d4 00 00    	 				call deref8
[00854]                   	;----- cgldlw
[00855] 0485: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00856] 0488: ff fc       	          dw  -4  ;--- offset
[00857]                   	;----- cglit
[00858] 048a: d4 00 00    	 				call epush16
[00859] 048d: 01 00       	 				  dw 256
[00860]                   	;----- cgmod
[00861] 048f: d4 00 00    	          call  mod16				 ; SOS modulo TOS on Expression Stack
[00862]                   
[00863]                   	;----- queue_cmp
[00864]                   	;----- genbrfalse
[00865]                   	;----- genbranch
[00866]                   	;----- cgbrne
[00867]                   	;----- cgne
[00868] 0492: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00869]                   
[00870]                   	;----- cgbrcond
[00871] 0495: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00872] 0498: 9a          	 				 ghi   ra            ; get MSB from result
[00873] 0499: 52          	 				 str   r2            ; save in M(X)
[00874] 049a: 8a          	 				 glo   ra            ; get LSB from result
[00875] 049b: f1          	 				 or                  ; D = MSB | LSB
[00876] 049c: ca 04 a2    	lbnz	L45
[00877] 049f: c0 04 a5    	lbr	L44
[00878]                   
[00879]                   L45:
[00880]                   	;----- begin stmt ------
[00881]                   	;----- begin break
[00882]                   	;---- queue lbr L41
[00883]                   	;----- end break
[00884]                   	;----- end stmt ------
[00885]                   	;----- cgjump
[00886] 04a2: c0 04 a8    	 				  lbr	L41
[00887]                   
[00888]                   L44:
[00889]                   	;----- end if
[00890]                   	;----- end stmt ------
[00891]                   	;----- end stmt ------
[00892]                   	;---- queue lbr L42
[00893]                   	;----- cgjump
[00894] 04a5: c0 04 65    	 				  lbr	L42
[00895]                   
[00896]                   L41:
[00897]                   	;----- end for
[00898]                   	;----- end stmt ------
[00899]                   	;----- begin stmt ------
[00900]                   	;----- begin if
[00901]                   	;----- cgldlw
[00902] 04a8: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00903] 04ab: ff fa       	          dw  -6  ;--- offset
[00904]                   	;----- cgldlw
[00905] 04ad: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00906] 04b0: ff fc       	          dw  -4  ;--- offset
[00907]                   	;----- queue_cmp
[00908]                   	;----- genbrfalse
[00909]                   	;----- genbranch
[00910]                   	;----- cgbrlt
[00911]                   	;----- cglt
[00912] 04b2: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[00913]                   
[00914]                   	;----- cgbrcond
[00915] 04b5: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00916] 04b8: 9a          	 				 ghi   ra            ; get MSB from result
[00917] 04b9: 52          	 				 str   r2            ; save in M(X)
[00918] 04ba: 8a          	 				 glo   ra            ; get LSB from result
[00919] 04bb: f1          	 				 or                  ; D = MSB | LSB
[00920] 04bc: ca 04 c2    	lbnz	L47
[00921] 04bf: c0 04 e0    	lbr	L46
[00922]                   
[00923]                   L47:
[00924]                   	;----- begin stmt ------
[00925]                   	;----- begin stmt ------
[00926]                   	;---- queue lbr L49
[00927]                   	;----- cgjump
[00928] 04c2: c0 04 cd    	 				  lbr	L49
[00929]                   
[00930]                   L48:
[00931] 04c5: 66 72 65 61   db 'fread-2'    ;----- cgdefs
              64 2d 32 
[00932] 04cc: 00          	db	$00    ;----- cgdefb
[00933]                   
[00934]                   L49:
[00935]                   	;----- cgldlab
[00936] 04cd: d4 00 00    	 				call epush16
[00937] 04d0: 04 c5       	 				  dw  L48
[00938]                   	;----- cgcall
[00939] 04d2: d4 00 a4    	          call  Cfail
[00940]                   	;----- cgstack
[00941] 04d5: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00942] 04d8: 00 02       	          dw  2  ;--- offset
[00943] 04da: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00944]                   	;---- queue dpush
[00945]                   	;----- push + pop data not required, data remains unchanged in RA
[00946]                   	;----- end stmt ------
[00947]                   	;----- begin stmt ------
[00948]                   	;----- begin break
[00949]                   	;---- queue lbr L32
[00950]                   	;----- end break
[00951]                   	;----- end stmt ------
[00952]                   	;----- end stmt ------
[00953]                   	;----- cgjump
[00954] 04dd: c0 04 e3    	 				  lbr	L32
[00955]                   
[00956]                   L46:
[00957]                   	;----- end if
[00958]                   	;----- end stmt ------
[00959]                   	;----- end stmt ------
[00960]                   	;---- queue lbr L33
[00961]                   	;----- cgjump
[00962] 04e0: c0 03 b7    	 				  lbr	L33
[00963]                   
[00964]                   L32:
[00965]                   	;----- end for
[00966]                   	;----- end stmt ------
[00967]                   	;----- begin stmt ------
[00968]                   	;---- queue lbr L51
[00969]                   	;----- cgjump
[00970] 04e3: c0 04 ed    	 				  lbr	L51
[00971]                   
[00972]                   L50:
[00973] 04e6: 66 63 6c 6f   db 'fclose'    ;----- cgdefs
              73 65 
[00974] 04ec: 00          	db	$00    ;----- cgdefb
[00975]                   
[00976]                   L51:
[00977]                   	;----- cgldlab
[00978] 04ed: d4 00 00    	 				call epush16
[00979] 04f0: 04 e6       	 				  dw  L50
[00980]                   	;----- cgcall
[00981] 04f2: d4 00 f4    	          call  Cpr
[00982]                   	;----- cgstack
[00983] 04f5: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00984] 04f8: 00 02       	          dw  2  ;--- offset
[00985] 04fa: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00986]                   	;---- queue dpush
[00987]                   	;----- push + pop data not required, data remains unchanged in RA
[00988]                   	;----- end stmt ------
[00989]                   	;----- begin stmt ------
[00990]                   	;----- begin if
[00991]                   	;----- cgldlw
[00992] 04fd: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00993] 0500: ff fe       	          dw  -2  ;--- offset
[00994]                   	;----- cgcall
[00995] 0502: d4 00 00    	          call  Cfclose
[00996]                   	;----- cgstack
[00997] 0505: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00998] 0508: 00 02       	          dw  2  ;--- offset
[00999] 050a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01000]                   	;---- queue dpush
[01001]                   	;----- genbrfalse
[01002]                   	;------ commit push
[01003]                   	;----- cgpushd
[01004] 050d: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01005]                   	;----- cgbrfalse
[01006]                   	;----- cgbr
[01007] 0510: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01008] 0513: 9a          	 				 ghi   ra            ; get MSB from result
[01009] 0514: 52          	 				 str   r2            ; save in M(X)
[01010] 0515: 8a          	 				 glo   ra            ; get LSB from result
[01011] 0516: f1          	 				 or                  ; D = MSB | LSB
[01012] 0517: c2 05 36    	 				 lbz	L52           ; check for branch
[01013]                   	;----- begin stmt ------
[01014]                   	;---- queue lbr L54
[01015]                   	;----- cgjump
[01016] 051a: c0 05 26    	 				  lbr	L54
[01017]                   
[01018]                   L53:
[01019] 051d: 66 63 6c 6f   db 'fclose-1'    ;----- cgdefs
              73 65 2d 31 
[01020] 0525: 00          	db	$00    ;----- cgdefb
[01021]                   
[01022]                   L54:
[01023]                   	;----- cgldlab
[01024] 0526: d4 00 00    	 				call epush16
[01025] 0529: 05 1d       	 				  dw  L53
[01026]                   	;----- cgcall
[01027] 052b: d4 00 a4    	          call  Cfail
[01028]                   	;----- cgstack
[01029] 052e: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01030] 0531: 00 02       	          dw  2  ;--- offset
[01031] 0533: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01032]                   	;---- queue dpush
[01033]                   	;----- push + pop data not required, data remains unchanged in RA
[01034]                   	;----- end stmt ------
[01035]                   
[01036]                   L52:
[01037]                   	;----- end if
[01038]                   	;----- end stmt ------
[01039]                   	;----- begin stmt ------
[01040]                   	;---- queue lbr L56
[01041]                   	;----- cgjump
[01042] 0536: c0 05 3f    	 				  lbr	L56
[01043]                   
[01044]                   L55:
[01045] 0539: 66 6f 70 65   db 'fopen'    ;----- cgdefs
              6e 
[01046] 053e: 00          	db	$00    ;----- cgdefb
[01047]                   
[01048]                   L56:
[01049]                   	;----- cgldlab
[01050] 053f: d4 00 00    	 				call epush16
[01051] 0542: 05 39       	 				  dw  L55
[01052]                   	;----- cgcall
[01053] 0544: d4 00 f4    	          call  Cpr
[01054]                   	;----- cgstack
[01055] 0547: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01056] 054a: 00 02       	          dw  2  ;--- offset
[01057] 054c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01058]                   	;---- queue dpush
[01059]                   	;----- push + pop data not required, data remains unchanged in RA
[01060]                   	;----- end stmt ------
[01061]                   	;----- begin stmt ------
[01062]                   	;----- begin if
[01063]                   	;---- queue lbr L58
[01064]                   	;----- cgjump
[01065] 054f: c0 05 5d    	 				  lbr	L58
[01066]                   
[01067]                   L57:
[01068] 0552: 66 74 65 73   db 'ftest5.tmp'    ;----- cgdefs
              74 35 2e 74 
              6d 70 
[01069] 055c: 00          	db	$00    ;----- cgdefb
[01070]                   
[01071]                   L58:
[01072]                   	;---- queue lbr L60
[01073]                   	;----- cgjump
[01074] 055d: c0 05 63    	 				  lbr	L60
[01075]                   
[01076]                   L59:
[01077] 0560: 77 2b         db 'w+'    ;----- cgdefs
[01078] 0562: 00          	db	$00    ;----- cgdefb
[01079]                   
[01080]                   L60:
[01081]                   	;----- cgldlab
[01082] 0563: d4 00 00    	 				call epush16
[01083] 0566: 05 60       	 				  dw  L59
[01084]                   	;----- cgldlab
[01085] 0568: d4 00 00    	 				call epush16
[01086] 056b: 05 52       	 				  dw  L57
[01087]                   	;----- cgcall
[01088] 056d: d4 00 00    	          call  Cfopen
[01089]                   	;----- cgstack
[01090] 0570: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01091] 0573: 00 04       	          dw  4  ;--- offset
[01092] 0575: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01093]                   	;---- queue dpush
[01094]                   	;------ commit push
[01095]                   	;----- cgpushd
[01096] 0578: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01097]                   	;----- cgstorlw
[01098] 057b: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01099] 057e: ff fe       	          dw  -2  ;--- offset
[01100]                   	;----- cglit
[01101] 0580: d4 00 00    	 				call epush16
[01102] 0583: 00 00       	 				  dw 0
[01103]                   	;----- queue_cmp
[01104]                   	;----- genbrfalse
[01105]                   	;----- genbranch
[01106]                   	;----- cgbreq
[01107]                   	;----- cgeq
[01108] 0585: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[01109]                   
[01110]                   	;----- cgbrcond
[01111] 0588: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01112] 058b: 9a          	 				 ghi   ra            ; get MSB from result
[01113] 058c: 52          	 				 str   r2            ; save in M(X)
[01114] 058d: 8a          	 				 glo   ra            ; get LSB from result
[01115] 058e: f1          	 				 or                  ; D = MSB | LSB
[01116] 058f: ca 05 95    	lbnz	L62
[01117] 0592: c0 05 b3    	lbr	L61
[01118]                   
[01119]                   L62:
[01120]                   	;----- begin stmt ------
[01121]                   	;----- begin stmt ------
[01122]                   	;---- queue lbr L64
[01123]                   	;----- cgjump
[01124] 0595: c0 05 a0    	 				  lbr	L64
[01125]                   
[01126]                   L63:
[01127] 0598: 66 6f 70 65   db 'fopen-2'    ;----- cgdefs
              6e 2d 32 
[01128] 059f: 00          	db	$00    ;----- cgdefb
[01129]                   
[01130]                   L64:
[01131]                   	;----- cgldlab
[01132] 05a0: d4 00 00    	 				call epush16
[01133] 05a3: 05 98       	 				  dw  L63
[01134]                   	;----- cgcall
[01135] 05a5: d4 00 a4    	          call  Cfail
[01136]                   	;----- cgstack
[01137] 05a8: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01138] 05ab: 00 02       	          dw  2  ;--- offset
[01139] 05ad: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01140]                   	;---- queue dpush
[01141]                   	;----- push + pop data not required, data remains unchanged in RA
[01142]                   	;----- end stmt ------
[01143]                   	;----- begin stmt ------
[01144]                   	;----- begin return
[01145]                   	;---- queue lbr L8
[01146]                   	;----- end return
[01147]                   	;----- end stmt ------
[01148]                   	;----- end stmt ------
[01149]                   	;----- cgjump
[01150] 05b0: c0 0b 6c    	 				  lbr	L8
[01151]                   
[01152]                   L61:
[01153]                   	;----- end if
[01154]                   	;----- end stmt ------
[01155]                   	;----- begin stmt ------
[01156]                   	;----- begin for
[01157]                   	;----- cglit
[01158] 05b3: d4 00 00    	 				call epush16
[01159] 05b6: 00 00       	 				  dw 0
[01160]                   	;----- cgstorlw
[01161] 05b8: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01162] 05bb: ff fc       	          dw  -4  ;--- offset
[01163]                   	;----- cgpopd
[01164] 05bd: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01165]                   
[01166]                   L65:
[01167]                   	;----- cgldlw
[01168] 05c0: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01169] 05c3: ff fc       	          dw  -4  ;--- offset
[01170]                   	;----- cglit
[01171] 05c5: d4 00 00    	 				call epush16
[01172] 05c8: 01 00       	 				  dw 256
[01173]                   	;----- queue_cmp
[01174]                   	;----- genbrfalse
[01175]                   	;----- genbranch
[01176]                   	;----- cgbrlt
[01177]                   	;----- cglt
[01178] 05ca: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01179]                   
[01180]                   	;----- cgbrcond
[01181] 05cd: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01182] 05d0: 9a          	 				 ghi   ra            ; get MSB from result
[01183] 05d1: 52          	 				 str   r2            ; save in M(X)
[01184] 05d2: 8a          	 				 glo   ra            ; get LSB from result
[01185] 05d3: f1          	 				 or                  ; D = MSB | LSB
[01186] 05d4: ca 05 da    	lbnz	L69
[01187] 05d7: c0 06 0e    	lbr	L67
[01188]                   
[01189]                   L69:
[01190]                   	;---- queue lbr L66
[01191]                   	;----- cgjump
[01192] 05da: c0 05 ed    	 				  lbr	L66
[01193]                   
[01194]                   L68:
[01195]                   	;----- cgldlw
[01196] 05dd: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01197] 05e0: ff fc       	          dw  -4  ;--- offset
[01198]                   	;----- cginclw
[01199] 05e2: d4 00 00    	          call  linc16       ; increment local variable
[01200] 05e5: ff fc       	          dw  -4  ;--- offset
[01201]                   	;----- cgpopd
[01202] 05e7: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01203]                   	;---- queue lbr L65
[01204]                   	;----- cgjump
[01205] 05ea: c0 05 c0    	 				  lbr	L65
[01206]                   
[01207]                   L66:
[01208]                   	;----- begin stmt ------
[01209]                   	;----- cgldsa
[01210] 05ed: d4 00 00    	 				call epush16
[01211] 05f0: 01 23       	 				   dw L7
[01212]                   	;----- cgldlw
[01213] 05f2: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01214] 05f5: ff fc       	          dw  -4  ;--- offset
[01215]                   	;----- cgadd
[01216] 05f7: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01217]                   
[01218]                   	;----- cglit
[01219] 05fa: d4 00 00    	 				call epush16
[01220] 05fd: 00 35       	 				  dw 53
[01221]                   	;----- cgpopptr
[01222] 05ff: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[01223] 0602: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[01224]                   	;----- cgstorib
[01225] 0605: d4 00 00    	          call  pstor8       ; store value from ES in pointer variable
[01226]                   	;----- cgpopd
[01227] 0608: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01228]                   	;----- end stmt ------
[01229]                   	;---- queue lbr L68
[01230]                   	;----- cgjump
[01231] 060b: c0 05 dd    	 				  lbr	L68
[01232]                   
[01233]                   L67:
[01234]                   	;----- end for
[01235]                   	;----- end stmt ------
[01236]                   	;----- begin stmt ------
[01237]                   	;---- queue lbr L71
[01238]                   	;----- cgjump
[01239] 060e: c0 06 18    	 				  lbr	L71
[01240]                   
[01241]                   L70:
[01242] 0611: 66 77 72 69   db 'fwrite'    ;----- cgdefs
              74 65 
[01243] 0617: 00          	db	$00    ;----- cgdefb
[01244]                   
[01245]                   L71:
[01246]                   	;----- cgldlab
[01247] 0618: d4 00 00    	 				call epush16
[01248] 061b: 06 11       	 				  dw  L70
[01249]                   	;----- cgcall
[01250] 061d: d4 00 f4    	          call  Cpr
[01251]                   	;----- cgstack
[01252] 0620: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01253] 0623: 00 02       	          dw  2  ;--- offset
[01254] 0625: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01255]                   	;---- queue dpush
[01256]                   	;----- push + pop data not required, data remains unchanged in RA
[01257]                   	;----- end stmt ------
[01258]                   	;----- begin stmt ------
[01259]                   	;----- begin for
[01260]                   	;----- cglit
[01261] 0628: d4 00 00    	 				call epush16
[01262] 062b: 00 00       	 				  dw 0
[01263]                   	;----- cgstorlw
[01264] 062d: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01265] 0630: ff fc       	          dw  -4  ;--- offset
[01266]                   	;----- cgpopd
[01267] 0632: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01268]                   
[01269]                   L72:
[01270]                   	;----- cgldlw
[01271] 0635: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01272] 0638: ff fc       	          dw  -4  ;--- offset
[01273]                   	;----- cglit
[01274] 063a: d4 00 00    	 				call epush16
[01275] 063d: 00 10       	 				  dw 16
[01276]                   	;----- queue_cmp
[01277]                   	;----- genbrfalse
[01278]                   	;----- genbranch
[01279]                   	;----- cgbrlt
[01280]                   	;----- cglt
[01281] 063f: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01282]                   
[01283]                   	;----- cgbrcond
[01284] 0642: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01285] 0645: 9a          	 				 ghi   ra            ; get MSB from result
[01286] 0646: 52          	 				 str   r2            ; save in M(X)
[01287] 0647: 8a          	 				 glo   ra            ; get LSB from result
[01288] 0648: f1          	 				 or                  ; D = MSB | LSB
[01289] 0649: ca 06 4f    	lbnz	L76
[01290] 064c: c0 06 bb    	lbr	L74
[01291]                   
[01292]                   L76:
[01293]                   	;---- queue lbr L73
[01294]                   	;----- cgjump
[01295] 064f: c0 06 62    	 				  lbr	L73
[01296]                   
[01297]                   L75:
[01298]                   	;----- cgldlw
[01299] 0652: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01300] 0655: ff fc       	          dw  -4  ;--- offset
[01301]                   	;----- cginclw
[01302] 0657: d4 00 00    	          call  linc16       ; increment local variable
[01303] 065a: ff fc       	          dw  -4  ;--- offset
[01304]                   	;----- cgpopd
[01305] 065c: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01306]                   	;---- queue lbr L72
[01307]                   	;----- cgjump
[01308] 065f: c0 06 35    	 				  lbr	L72
[01309]                   
[01310]                   L73:
[01311]                   	;----- begin stmt ------
[01312]                   	;----- begin stmt ------
[01313]                   	;----- begin if
[01314]                   	;----- cgldlw
[01315] 0662: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01316] 0665: ff fe       	          dw  -2  ;--- offset
[01317]                   	;----- cglit
[01318] 0667: d4 00 00    	 				call epush16
[01319] 066a: 01 00       	 				  dw 256
[01320]                   	;----- cglit
[01321] 066c: d4 00 00    	 				call epush16
[01322] 066f: 00 01       	 				  dw 1
[01323]                   	;----- cgldsa
[01324] 0671: d4 00 00    	 				call epush16
[01325] 0674: 01 23       	 				   dw L7
[01326]                   	;----- cgcall
[01327] 0676: d4 00 00    	          call  Cfwrite
[01328]                   	;----- cgstack
[01329] 0679: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01330] 067c: 00 08       	          dw  8  ;--- offset
[01331] 067e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01332]                   	;---- queue dpush
[01333]                   	;------ commit push
[01334]                   	;----- cgpushd
[01335] 0681: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01336]                   	;----- cglit
[01337] 0684: d4 00 00    	 				call epush16
[01338] 0687: 01 00       	 				  dw 256
[01339]                   	;----- queue_cmp
[01340]                   	;----- genbrfalse
[01341]                   	;----- genbranch
[01342]                   	;----- cgbrne
[01343]                   	;----- cgne
[01344] 0689: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01345]                   
[01346]                   	;----- cgbrcond
[01347] 068c: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01348] 068f: 9a          	 				 ghi   ra            ; get MSB from result
[01349] 0690: 52          	 				 str   r2            ; save in M(X)
[01350] 0691: 8a          	 				 glo   ra            ; get LSB from result
[01351] 0692: f1          	 				 or                  ; D = MSB | LSB
[01352] 0693: ca 06 99    	lbnz	L78
[01353] 0696: c0 06 b8    	lbr	L77
[01354]                   
[01355]                   L78:
[01356]                   	;----- begin stmt ------
[01357]                   	;----- begin stmt ------
[01358]                   	;---- queue lbr L80
[01359]                   	;----- cgjump
[01360] 0699: c0 06 a5    	 				  lbr	L80
[01361]                   
[01362]                   L79:
[01363] 069c: 66 77 72 69   db 'fwrite-2'    ;----- cgdefs
              74 65 2d 32 
[01364] 06a4: 00          	db	$00    ;----- cgdefb
[01365]                   
[01366]                   L80:
[01367]                   	;----- cgldlab
[01368] 06a5: d4 00 00    	 				call epush16
[01369] 06a8: 06 9c       	 				  dw  L79
[01370]                   	;----- cgcall
[01371] 06aa: d4 00 a4    	          call  Cfail
[01372]                   	;----- cgstack
[01373] 06ad: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01374] 06b0: 00 02       	          dw  2  ;--- offset
[01375] 06b2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01376]                   	;---- queue dpush
[01377]                   	;----- push + pop data not required, data remains unchanged in RA
[01378]                   	;----- end stmt ------
[01379]                   	;----- begin stmt ------
[01380]                   	;----- begin break
[01381]                   	;---- queue lbr L74
[01382]                   	;----- end break
[01383]                   	;----- end stmt ------
[01384]                   	;----- end stmt ------
[01385]                   	;----- cgjump
[01386] 06b5: c0 06 bb    	 				  lbr	L74
[01387]                   
[01388]                   L77:
[01389]                   	;----- end if
[01390]                   	;----- end stmt ------
[01391]                   	;----- end stmt ------
[01392]                   	;---- queue lbr L75
[01393]                   	;----- cgjump
[01394] 06b8: c0 06 52    	 				  lbr	L75
[01395]                   
[01396]                   L74:
[01397]                   	;----- end for
[01398]                   	;----- end stmt ------
[01399]                   	;----- begin stmt ------
[01400]                   	;---- queue lbr L82
[01401]                   	;----- cgjump
[01402] 06bb: c0 06 c5    	 				  lbr	L82
[01403]                   
[01404]                   L81:
[01405] 06be: 72 65 77 69   db 'rewind'    ;----- cgdefs
              6e 64 
[01406] 06c4: 00          	db	$00    ;----- cgdefb
[01407]                   
[01408]                   L82:
[01409]                   	;----- cgldlab
[01410] 06c5: d4 00 00    	 				call epush16
[01411] 06c8: 06 be       	 				  dw  L81
[01412]                   	;----- cgcall
[01413] 06ca: d4 00 f4    	          call  Cpr
[01414]                   	;----- cgstack
[01415] 06cd: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01416] 06d0: 00 02       	          dw  2  ;--- offset
[01417] 06d2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01418]                   	;---- queue dpush
[01419]                   	;----- push + pop data not required, data remains unchanged in RA
[01420]                   	;----- end stmt ------
[01421]                   	;----- begin stmt ------
[01422]                   	;----- cgldlw
[01423] 06d5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01424] 06d8: ff fe       	          dw  -2  ;--- offset
[01425]                   	;----- cgcall
[01426] 06da: d4 00 00    	          call  Crewind
[01427]                   	;----- cgstack
[01428] 06dd: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01429] 06e0: 00 02       	          dw  2  ;--- offset
[01430] 06e2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01431]                   	;---- queue dpush
[01432]                   	;----- push + pop data not required, data remains unchanged in RA
[01433]                   	;----- end stmt ------
[01434]                   	;----- begin stmt ------
[01435]                   	;---- queue lbr L84
[01436]                   	;----- cgjump
[01437] 06e5: c0 06 ee    	 				  lbr	L84
[01438]                   
[01439]                   L83:
[01440] 06e8: 66 72 65 61   db 'fread'    ;----- cgdefs
              64 
[01441] 06ed: 00          	db	$00    ;----- cgdefb
[01442]                   
[01443]                   L84:
[01444]                   	;----- cgldlab
[01445] 06ee: d4 00 00    	 				call epush16
[01446] 06f1: 06 e8       	 				  dw  L83
[01447]                   	;----- cgcall
[01448] 06f3: d4 00 f4    	          call  Cpr
[01449]                   	;----- cgstack
[01450] 06f6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01451] 06f9: 00 02       	          dw  2  ;--- offset
[01452] 06fb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01453]                   	;---- queue dpush
[01454]                   	;----- push + pop data not required, data remains unchanged in RA
[01455]                   	;----- end stmt ------
[01456]                   	;----- begin stmt ------
[01457]                   	;----- begin for
[01458]                   	;----- cglit
[01459] 06fe: d4 00 00    	 				call epush16
[01460] 0701: 00 00       	 				  dw 0
[01461]                   	;----- cgstorlw
[01462] 0703: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01463] 0706: ff fc       	          dw  -4  ;--- offset
[01464]                   	;----- cgpopd
[01465] 0708: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01466]                   
[01467]                   L85:
[01468]                   	;----- cgldlw
[01469] 070b: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01470] 070e: ff fc       	          dw  -4  ;--- offset
[01471]                   	;----- cglit
[01472] 0710: d4 00 00    	 				call epush16
[01473] 0713: 00 10       	 				  dw 16
[01474]                   	;----- queue_cmp
[01475]                   	;----- genbrfalse
[01476]                   	;----- genbranch
[01477]                   	;----- cgbrlt
[01478]                   	;----- cglt
[01479] 0715: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01480]                   
[01481]                   	;----- cgbrcond
[01482] 0718: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01483] 071b: 9a          	 				 ghi   ra            ; get MSB from result
[01484] 071c: 52          	 				 str   r2            ; save in M(X)
[01485] 071d: 8a          	 				 glo   ra            ; get LSB from result
[01486] 071e: f1          	 				 or                  ; D = MSB | LSB
[01487] 071f: ca 07 25    	lbnz	L89
[01488] 0722: c0 07 90    	lbr	L87
[01489]                   
[01490]                   L89:
[01491]                   	;---- queue lbr L86
[01492]                   	;----- cgjump
[01493] 0725: c0 07 38    	 				  lbr	L86
[01494]                   
[01495]                   L88:
[01496]                   	;----- cgldlw
[01497] 0728: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01498] 072b: ff fc       	          dw  -4  ;--- offset
[01499]                   	;----- cginclw
[01500] 072d: d4 00 00    	          call  linc16       ; increment local variable
[01501] 0730: ff fc       	          dw  -4  ;--- offset
[01502]                   	;----- cgpopd
[01503] 0732: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01504]                   	;---- queue lbr L85
[01505]                   	;----- cgjump
[01506] 0735: c0 07 0b    	 				  lbr	L85
[01507]                   
[01508]                   L86:
[01509]                   	;----- begin stmt ------
[01510]                   	;----- begin stmt ------
[01511]                   	;----- begin if
[01512]                   	;----- cgldlw
[01513] 0738: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01514] 073b: ff fe       	          dw  -2  ;--- offset
[01515]                   	;----- cglit
[01516] 073d: d4 00 00    	 				call epush16
[01517] 0740: 01 00       	 				  dw 256
[01518]                   	;----- cglit
[01519] 0742: d4 00 00    	 				call epush16
[01520] 0745: 00 01       	 				  dw 1
[01521]                   	;----- cgldsa
[01522] 0747: d4 00 00    	 				call epush16
[01523] 074a: 01 23       	 				   dw L7
[01524]                   	;----- cgcall
[01525] 074c: d4 00 00    	          call  Cfread
[01526]                   	;----- cgstack
[01527] 074f: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01528] 0752: 00 08       	          dw  8  ;--- offset
[01529] 0754: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01530]                   	;---- queue dpush
[01531]                   	;------ commit push
[01532]                   	;----- cgpushd
[01533] 0757: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01534]                   	;----- cglit
[01535] 075a: d4 00 00    	 				call epush16
[01536] 075d: 01 00       	 				  dw 256
[01537]                   	;----- queue_cmp
[01538]                   	;----- genbrfalse
[01539]                   	;----- genbranch
[01540]                   	;----- cgbrne
[01541]                   	;----- cgne
[01542] 075f: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01543]                   
[01544]                   	;----- cgbrcond
[01545] 0762: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01546] 0765: 9a          	 				 ghi   ra            ; get MSB from result
[01547] 0766: 52          	 				 str   r2            ; save in M(X)
[01548] 0767: 8a          	 				 glo   ra            ; get LSB from result
[01549] 0768: f1          	 				 or                  ; D = MSB | LSB
[01550] 0769: ca 07 6f    	lbnz	L91
[01551] 076c: c0 07 8d    	lbr	L90
[01552]                   
[01553]                   L91:
[01554]                   	;----- begin stmt ------
[01555]                   	;----- begin stmt ------
[01556]                   	;---- queue lbr L93
[01557]                   	;----- cgjump
[01558] 076f: c0 07 7a    	 				  lbr	L93
[01559]                   
[01560]                   L92:
[01561] 0772: 66 72 65 61   db 'fread-3'    ;----- cgdefs
              64 2d 33 
[01562] 0779: 00          	db	$00    ;----- cgdefb
[01563]                   
[01564]                   L93:
[01565]                   	;----- cgldlab
[01566] 077a: d4 00 00    	 				call epush16
[01567] 077d: 07 72       	 				  dw  L92
[01568]                   	;----- cgcall
[01569] 077f: d4 00 a4    	          call  Cfail
[01570]                   	;----- cgstack
[01571] 0782: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01572] 0785: 00 02       	          dw  2  ;--- offset
[01573] 0787: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01574]                   	;---- queue dpush
[01575]                   	;----- push + pop data not required, data remains unchanged in RA
[01576]                   	;----- end stmt ------
[01577]                   	;----- begin stmt ------
[01578]                   	;----- begin break
[01579]                   	;---- queue lbr L87
[01580]                   	;----- end break
[01581]                   	;----- end stmt ------
[01582]                   	;----- end stmt ------
[01583]                   	;----- cgjump
[01584] 078a: c0 07 90    	 				  lbr	L87
[01585]                   
[01586]                   L90:
[01587]                   	;----- end if
[01588]                   	;----- end stmt ------
[01589]                   	;----- end stmt ------
[01590]                   	;---- queue lbr L88
[01591]                   	;----- cgjump
[01592] 078d: c0 07 28    	 				  lbr	L88
[01593]                   
[01594]                   L87:
[01595]                   	;----- end for
[01596]                   	;----- end stmt ------
[01597]                   	;----- begin stmt ------
[01598]                   	;---- queue lbr L95
[01599]                   	;----- cgjump
[01600] 0790: c0 07 9e    	 				  lbr	L95
[01601]                   
[01602]                   L94:
[01603] 0793: 66 67 65 74   db 'fgetc(eof)'    ;----- cgdefs
              63 28 65 6f 
              66 29 
[01604] 079d: 00          	db	$00    ;----- cgdefb
[01605]                   
[01606]                   L95:
[01607]                   	;----- cgldlab
[01608] 079e: d4 00 00    	 				call epush16
[01609] 07a1: 07 93       	 				  dw  L94
[01610]                   	;----- cgcall
[01611] 07a3: d4 00 f4    	          call  Cpr
[01612]                   	;----- cgstack
[01613] 07a6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01614] 07a9: 00 02       	          dw  2  ;--- offset
[01615] 07ab: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01616]                   	;---- queue dpush
[01617]                   	;----- push + pop data not required, data remains unchanged in RA
[01618]                   	;----- end stmt ------
[01619]                   	;----- begin stmt ------
[01620]                   	;----- begin if
[01621]                   	;----- cgldlw
[01622] 07ae: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01623] 07b1: ff fe       	          dw  -2  ;--- offset
[01624]                   	;----- cgcall
[01625] 07b3: d4 00 00    	          call  Cfgetc
[01626]                   	;----- cgstack
[01627] 07b6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01628] 07b9: 00 02       	          dw  2  ;--- offset
[01629] 07bb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01630]                   	;---- queue dpush
[01631]                   	;------ commit push
[01632]                   	;----- cgpushd
[01633] 07be: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01634]                   	;----- cglit
[01635] 07c1: d4 00 00    	 				call epush16
[01636] 07c4: ff ff       	 				  dw -1
[01637]                   	;----- queue_cmp
[01638]                   	;----- genbrfalse
[01639]                   	;----- genbranch
[01640]                   	;----- cgbrne
[01641]                   	;----- cgne
[01642] 07c6: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01643]                   
[01644]                   	;----- cgbrcond
[01645] 07c9: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01646] 07cc: 9a          	 				 ghi   ra            ; get MSB from result
[01647] 07cd: 52          	 				 str   r2            ; save in M(X)
[01648] 07ce: 8a          	 				 glo   ra            ; get LSB from result
[01649] 07cf: f1          	 				 or                  ; D = MSB | LSB
[01650] 07d0: ca 07 d6    	lbnz	L97
[01651] 07d3: c0 07 ee    	lbr	L96
[01652]                   
[01653]                   L97:
[01654]                   	;----- begin stmt ------
[01655]                   	;---- queue lbr L99
[01656]                   	;----- cgjump
[01657] 07d6: c0 07 de    	 				  lbr	L99
[01658]                   
[01659]                   L98:
[01660] 07d9: 66 65 6f 66   db 'feof'    ;----- cgdefs
[01661] 07dd: 00          	db	$00    ;----- cgdefb
[01662]                   
[01663]                   L99:
[01664]                   	;----- cgldlab
[01665] 07de: d4 00 00    	 				call epush16
[01666] 07e1: 07 d9       	 				  dw  L98
[01667]                   	;----- cgcall
[01668] 07e3: d4 00 a4    	          call  Cfail
[01669]                   	;----- cgstack
[01670] 07e6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01671] 07e9: 00 02       	          dw  2  ;--- offset
[01672] 07eb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01673]                   	;---- queue dpush
[01674]                   	;----- push + pop data not required, data remains unchanged in RA
[01675]                   	;----- end stmt ------
[01676]                   
[01677]                   L96:
[01678]                   	;----- end if
[01679]                   	;----- end stmt ------
[01680]                   	;----- begin stmt ------
[01681]                   	;----- cgldlw
[01682] 07ee: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01683] 07f1: ff fe       	          dw  -2  ;--- offset
[01684]                   	;----- cgcall
[01685] 07f3: d4 00 00    	          call  Cclearerr
[01686]                   	;----- cgstack
[01687] 07f6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01688] 07f9: 00 02       	          dw  2  ;--- offset
[01689] 07fb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01690]                   	;---- queue dpush
[01691]                   	;----- push + pop data not required, data remains unchanged in RA
[01692]                   	;----- end stmt ------
[01693]                   	;----- begin stmt ------
[01694]                   	;---- queue lbr L101
[01695]                   	;----- cgjump
[01696] 07fe: c0 08 08    	 				  lbr	L101
[01697]                   
[01698]                   L100:
[01699] 0801: 66 63 6c 6f   db 'fclose'    ;----- cgdefs
              73 65 
[01700] 0807: 00          	db	$00    ;----- cgdefb
[01701]                   
[01702]                   L101:
[01703]                   	;----- cgldlab
[01704] 0808: d4 00 00    	 				call epush16
[01705] 080b: 08 01       	 				  dw  L100
[01706]                   	;----- cgcall
[01707] 080d: d4 00 f4    	          call  Cpr
[01708]                   	;----- cgstack
[01709] 0810: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01710] 0813: 00 02       	          dw  2  ;--- offset
[01711] 0815: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01712]                   	;---- queue dpush
[01713]                   	;----- push + pop data not required, data remains unchanged in RA
[01714]                   	;----- end stmt ------
[01715]                   	;----- begin stmt ------
[01716]                   	;----- begin if
[01717]                   	;----- cgldlw
[01718] 0818: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01719] 081b: ff fe       	          dw  -2  ;--- offset
[01720]                   	;----- cgcall
[01721] 081d: d4 00 00    	          call  Cfclose
[01722]                   	;----- cgstack
[01723] 0820: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01724] 0823: 00 02       	          dw  2  ;--- offset
[01725] 0825: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01726]                   	;---- queue dpush
[01727]                   	;----- genbrfalse
[01728]                   	;------ commit push
[01729]                   	;----- cgpushd
[01730] 0828: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01731]                   	;----- cgbrfalse
[01732]                   	;----- cgbr
[01733] 082b: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01734] 082e: 9a          	 				 ghi   ra            ; get MSB from result
[01735] 082f: 52          	 				 str   r2            ; save in M(X)
[01736] 0830: 8a          	 				 glo   ra            ; get LSB from result
[01737] 0831: f1          	 				 or                  ; D = MSB | LSB
[01738] 0832: c2 08 51    	 				 lbz	L102           ; check for branch
[01739]                   	;----- begin stmt ------
[01740]                   	;---- queue lbr L104
[01741]                   	;----- cgjump
[01742] 0835: c0 08 41    	 				  lbr	L104
[01743]                   
[01744]                   L103:
[01745] 0838: 66 63 6c 6f   db 'fclose-2'    ;----- cgdefs
              73 65 2d 32 
[01746] 0840: 00          	db	$00    ;----- cgdefb
[01747]                   
[01748]                   L104:
[01749]                   	;----- cgldlab
[01750] 0841: d4 00 00    	 				call epush16
[01751] 0844: 08 38       	 				  dw  L103
[01752]                   	;----- cgcall
[01753] 0846: d4 00 a4    	          call  Cfail
[01754]                   	;----- cgstack
[01755] 0849: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01756] 084c: 00 02       	          dw  2  ;--- offset
[01757] 084e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01758]                   	;---- queue dpush
[01759]                   	;----- push + pop data not required, data remains unchanged in RA
[01760]                   	;----- end stmt ------
[01761]                   
[01762]                   L102:
[01763]                   	;----- end if
[01764]                   	;----- end stmt ------
[01765]                   	;----- begin stmt ------
[01766]                   	;---- queue lbr L106
[01767]                   	;----- cgjump
[01768] 0851: c0 08 5a    	 				  lbr	L106
[01769]                   
[01770]                   L105:
[01771] 0854: 66 6f 70 65   db 'fopen'    ;----- cgdefs
              6e 
[01772] 0859: 00          	db	$00    ;----- cgdefb
[01773]                   
[01774]                   L106:
[01775]                   	;----- cgldlab
[01776] 085a: d4 00 00    	 				call epush16
[01777] 085d: 08 54       	 				  dw  L105
[01778]                   	;----- cgcall
[01779] 085f: d4 00 f4    	          call  Cpr
[01780]                   	;----- cgstack
[01781] 0862: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01782] 0865: 00 02       	          dw  2  ;--- offset
[01783] 0867: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01784]                   	;---- queue dpush
[01785]                   	;----- push + pop data not required, data remains unchanged in RA
[01786]                   	;----- end stmt ------
[01787]                   	;----- begin stmt ------
[01788]                   	;----- begin if
[01789]                   	;---- queue lbr L108
[01790]                   	;----- cgjump
[01791] 086a: c0 08 78    	 				  lbr	L108
[01792]                   
[01793]                   L107:
[01794] 086d: 66 74 65 73   db 'ftest5.tmp'    ;----- cgdefs
              74 35 2e 74 
              6d 70 
[01795] 0877: 00          	db	$00    ;----- cgdefb
[01796]                   
[01797]                   L108:
[01798]                   	;---- queue lbr L110
[01799]                   	;----- cgjump
[01800] 0878: c0 08 7d    	 				  lbr	L110
[01801]                   
[01802]                   L109:
[01803] 087b: 72            db 'r'    ;----- cgdefs
[01804] 087c: 00          	db	$00    ;----- cgdefb
[01805]                   
[01806]                   L110:
[01807]                   	;----- cgldlab
[01808] 087d: d4 00 00    	 				call epush16
[01809] 0880: 08 7b       	 				  dw  L109
[01810]                   	;----- cgldlab
[01811] 0882: d4 00 00    	 				call epush16
[01812] 0885: 08 6d       	 				  dw  L107
[01813]                   	;----- cgcall
[01814] 0887: d4 00 00    	          call  Cfopen
[01815]                   	;----- cgstack
[01816] 088a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01817] 088d: 00 04       	          dw  4  ;--- offset
[01818] 088f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01819]                   	;---- queue dpush
[01820]                   	;------ commit push
[01821]                   	;----- cgpushd
[01822] 0892: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01823]                   	;----- cgstorlw
[01824] 0895: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01825] 0898: ff fe       	          dw  -2  ;--- offset
[01826]                   	;----- cglit
[01827] 089a: d4 00 00    	 				call epush16
[01828] 089d: 00 00       	 				  dw 0
[01829]                   	;----- queue_cmp
[01830]                   	;----- genbrfalse
[01831]                   	;----- genbranch
[01832]                   	;----- cgbreq
[01833]                   	;----- cgeq
[01834] 089f: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[01835]                   
[01836]                   	;----- cgbrcond
[01837] 08a2: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01838] 08a5: 9a          	 				 ghi   ra            ; get MSB from result
[01839] 08a6: 52          	 				 str   r2            ; save in M(X)
[01840] 08a7: 8a          	 				 glo   ra            ; get LSB from result
[01841] 08a8: f1          	 				 or                  ; D = MSB | LSB
[01842] 08a9: ca 08 af    	lbnz	L112
[01843] 08ac: c0 08 cd    	lbr	L111
[01844]                   
[01845]                   L112:
[01846]                   	;----- begin stmt ------
[01847]                   	;----- begin stmt ------
[01848]                   	;---- queue lbr L114
[01849]                   	;----- cgjump
[01850] 08af: c0 08 ba    	 				  lbr	L114
[01851]                   
[01852]                   L113:
[01853] 08b2: 66 6f 70 65   db 'fopen-3'    ;----- cgdefs
              6e 2d 33 
[01854] 08b9: 00          	db	$00    ;----- cgdefb
[01855]                   
[01856]                   L114:
[01857]                   	;----- cgldlab
[01858] 08ba: d4 00 00    	 				call epush16
[01859] 08bd: 08 b2       	 				  dw  L113
[01860]                   	;----- cgcall
[01861] 08bf: d4 00 a4    	          call  Cfail
[01862]                   	;----- cgstack
[01863] 08c2: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01864] 08c5: 00 02       	          dw  2  ;--- offset
[01865] 08c7: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01866]                   	;---- queue dpush
[01867]                   	;----- push + pop data not required, data remains unchanged in RA
[01868]                   	;----- end stmt ------
[01869]                   	;----- begin stmt ------
[01870]                   	;----- begin return
[01871]                   	;---- queue lbr L8
[01872]                   	;----- end return
[01873]                   	;----- end stmt ------
[01874]                   	;----- end stmt ------
[01875]                   	;----- cgjump
[01876] 08ca: c0 0b 6c    	 				  lbr	L8
[01877]                   
[01878]                   L111:
[01879]                   	;----- end if
[01880]                   	;----- end stmt ------
[01881]                   	;----- begin stmt ------
[01882]                   	;---- queue lbr L116
[01883]                   	;----- cgjump
[01884] 08cd: c0 08 d6    	 				  lbr	L116
[01885]                   
[01886]                   L115:
[01887] 08d0: 66 74 65 6c   db 'ftell'    ;----- cgdefs
              6c 
[01888] 08d5: 00          	db	$00    ;----- cgdefb
[01889]                   
[01890]                   L116:
[01891]                   	;----- cgldlab
[01892] 08d6: d4 00 00    	 				call epush16
[01893] 08d9: 08 d0       	 				  dw  L115
[01894]                   	;----- cgcall
[01895] 08db: d4 00 f4    	          call  Cpr
[01896]                   	;----- cgstack
[01897] 08de: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01898] 08e1: 00 02       	          dw  2  ;--- offset
[01899] 08e3: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01900]                   	;---- queue dpush
[01901]                   	;----- push + pop data not required, data remains unchanged in RA
[01902]                   	;----- end stmt ------
[01903]                   	;----- begin stmt ------
[01904]                   	;----- begin if
[01905]                   	;----- cgldlw
[01906] 08e6: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01907] 08e9: ff fe       	          dw  -2  ;--- offset
[01908]                   	;----- cgcall
[01909] 08eb: d4 00 00    	          call  Cftell
[01910]                   	;----- cgstack
[01911] 08ee: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01912] 08f1: 00 02       	          dw  2  ;--- offset
[01913] 08f3: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01914]                   	;---- queue dpush
[01915]                   	;------ commit push
[01916]                   	;----- cgpushd
[01917] 08f6: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01918]                   	;----- cglit
[01919] 08f9: d4 00 00    	 				call epush16
[01920] 08fc: 00 00       	 				  dw 0
[01921]                   	;----- queue_cmp
[01922]                   	;----- genbrfalse
[01923]                   	;----- genbranch
[01924]                   	;----- cgbrne
[01925]                   	;----- cgne
[01926] 08fe: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01927]                   
[01928]                   	;----- cgbrcond
[01929] 0901: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01930] 0904: 9a          	 				 ghi   ra            ; get MSB from result
[01931] 0905: 52          	 				 str   r2            ; save in M(X)
[01932] 0906: 8a          	 				 glo   ra            ; get LSB from result
[01933] 0907: f1          	 				 or                  ; D = MSB | LSB
[01934] 0908: ca 09 0e    	lbnz	L118
[01935] 090b: c0 09 29    	lbr	L117
[01936]                   
[01937]                   L118:
[01938]                   	;----- begin stmt ------
[01939]                   	;---- queue lbr L120
[01940]                   	;----- cgjump
[01941] 090e: c0 09 19    	 				  lbr	L120
[01942]                   
[01943]                   L119:
[01944] 0911: 66 74 65 6c   db 'ftell-1'    ;----- cgdefs
              6c 2d 31 
[01945] 0918: 00          	db	$00    ;----- cgdefb
[01946]                   
[01947]                   L120:
[01948]                   	;----- cgldlab
[01949] 0919: d4 00 00    	 				call epush16
[01950] 091c: 09 11       	 				  dw  L119
[01951]                   	;----- cgcall
[01952] 091e: d4 00 a4    	          call  Cfail
[01953]                   	;----- cgstack
[01954] 0921: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01955] 0924: 00 02       	          dw  2  ;--- offset
[01956] 0926: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01957]                   	;---- queue dpush
[01958]                   	;----- push + pop data not required, data remains unchanged in RA
[01959]                   	;----- end stmt ------
[01960]                   
[01961]                   L117:
[01962]                   	;----- end if
[01963]                   	;----- end stmt ------
[01964]                   	;----- begin stmt ------
[01965]                   	;---- queue lbr L122
[01966]                   	;----- cgjump
[01967] 0929: c0 09 32    	 				  lbr	L122
[01968]                   
[01969]                   L121:
[01970] 092c: 66 73 65 65   db 'fseek'    ;----- cgdefs
              6b 
[01971] 0931: 00          	db	$00    ;----- cgdefb
[01972]                   
[01973]                   L122:
[01974]                   	;----- cgldlab
[01975] 0932: d4 00 00    	 				call epush16
[01976] 0935: 09 2c       	 				  dw  L121
[01977]                   	;----- cgcall
[01978] 0937: d4 00 f4    	          call  Cpr
[01979]                   	;----- cgstack
[01980] 093a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01981] 093d: 00 02       	          dw  2  ;--- offset
[01982] 093f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01983]                   	;---- queue dpush
[01984]                   	;----- push + pop data not required, data remains unchanged in RA
[01985]                   	;----- end stmt ------
[01986]                   	;----- begin stmt ------
[01987]                   	;----- begin if
[01988]                   	;----- cglit
[01989] 0942: d4 00 00    	 				call epush16
[01990] 0945: 00 02       	 				  dw 2
[01991]                   	;----- cglit
[01992] 0947: d4 00 00    	 				call epush16
[01993] 094a: 00 00       	 				  dw 0
[01994]                   	;----- cgldlw
[01995] 094c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01996] 094f: ff fe       	          dw  -2  ;--- offset
[01997]                   	;----- cgcall
[01998] 0951: d4 00 00    	          call  Cfseek
[01999]                   	;----- cgstack
[02000] 0954: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02001] 0957: 00 06       	          dw  6  ;--- offset
[02002] 0959: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02003]                   	;---- queue dpush
[02004]                   	;------ commit push
[02005]                   	;----- cgpushd
[02006] 095c: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02007]                   	;----- cglit
[02008] 095f: d4 00 00    	 				call epush16
[02009] 0962: 00 00       	 				  dw 0
[02010]                   	;----- queue_cmp
[02011]                   	;----- genbrfalse
[02012]                   	;----- genbranch
[02013]                   	;----- cgbrne
[02014]                   	;----- cgne
[02015] 0964: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02016]                   
[02017]                   	;----- cgbrcond
[02018] 0967: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02019] 096a: 9a          	 				 ghi   ra            ; get MSB from result
[02020] 096b: 52          	 				 str   r2            ; save in M(X)
[02021] 096c: 8a          	 				 glo   ra            ; get LSB from result
[02022] 096d: f1          	 				 or                  ; D = MSB | LSB
[02023] 096e: ca 09 74    	lbnz	L124
[02024] 0971: c0 09 8f    	lbr	L123
[02025]                   
[02026]                   L124:
[02027]                   	;----- begin stmt ------
[02028]                   	;---- queue lbr L126
[02029]                   	;----- cgjump
[02030] 0974: c0 09 7f    	 				  lbr	L126
[02031]                   
[02032]                   L125:
[02033] 0977: 66 73 65 65   db 'fseek-1'    ;----- cgdefs
              6b 2d 31 
[02034] 097e: 00          	db	$00    ;----- cgdefb
[02035]                   
[02036]                   L126:
[02037]                   	;----- cgldlab
[02038] 097f: d4 00 00    	 				call epush16
[02039] 0982: 09 77       	 				  dw  L125
[02040]                   	;----- cgcall
[02041] 0984: d4 00 a4    	          call  Cfail
[02042]                   	;----- cgstack
[02043] 0987: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02044] 098a: 00 02       	          dw  2  ;--- offset
[02045] 098c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02046]                   	;---- queue dpush
[02047]                   	;----- push + pop data not required, data remains unchanged in RA
[02048]                   	;----- end stmt ------
[02049]                   
[02050]                   L123:
[02051]                   	;----- end if
[02052]                   	;----- end stmt ------
[02053]                   	;----- begin stmt ------
[02054]                   	;----- begin if
[02055]                   	;----- cgldlw
[02056] 098f: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02057] 0992: ff fe       	          dw  -2  ;--- offset
[02058]                   	;----- cgcall
[02059] 0994: d4 00 00    	          call  Cftell
[02060]                   	;----- cgstack
[02061] 0997: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02062] 099a: 00 02       	          dw  2  ;--- offset
[02063] 099c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02064]                   	;---- queue dpush
[02065]                   	;------ commit push
[02066]                   	;----- cgpushd
[02067] 099f: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02068]                   	;----- cglit
[02069] 09a2: d4 00 00    	 				call epush16
[02070] 09a5: 10 00       	 				  dw 4096
[02071]                   	;----- queue_cmp
[02072]                   	;----- genbrfalse
[02073]                   	;----- genbranch
[02074]                   	;----- cgbrne
[02075]                   	;----- cgne
[02076] 09a7: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02077]                   
[02078]                   	;----- cgbrcond
[02079] 09aa: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02080] 09ad: 9a          	 				 ghi   ra            ; get MSB from result
[02081] 09ae: 52          	 				 str   r2            ; save in M(X)
[02082] 09af: 8a          	 				 glo   ra            ; get LSB from result
[02083] 09b0: f1          	 				 or                  ; D = MSB | LSB
[02084] 09b1: ca 09 b7    	lbnz	L128
[02085] 09b4: c0 09 d2    	lbr	L127
[02086]                   
[02087]                   L128:
[02088]                   	;----- begin stmt ------
[02089]                   	;---- queue lbr L130
[02090]                   	;----- cgjump
[02091] 09b7: c0 09 c2    	 				  lbr	L130
[02092]                   
[02093]                   L129:
[02094] 09ba: 66 74 65 6c   db 'ftell-2'    ;----- cgdefs
              6c 2d 32 
[02095] 09c1: 00          	db	$00    ;----- cgdefb
[02096]                   
[02097]                   L130:
[02098]                   	;----- cgldlab
[02099] 09c2: d4 00 00    	 				call epush16
[02100] 09c5: 09 ba       	 				  dw  L129
[02101]                   	;----- cgcall
[02102] 09c7: d4 00 a4    	          call  Cfail
[02103]                   	;----- cgstack
[02104] 09ca: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02105] 09cd: 00 02       	          dw  2  ;--- offset
[02106] 09cf: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02107]                   	;---- queue dpush
[02108]                   	;----- push + pop data not required, data remains unchanged in RA
[02109]                   	;----- end stmt ------
[02110]                   
[02111]                   L127:
[02112]                   	;----- end if
[02113]                   	;----- end stmt ------
[02114]                   	;----- begin stmt ------
[02115]                   	;---- queue lbr L132
[02116]                   	;----- cgjump
[02117] 09d2: c0 09 db    	 				  lbr	L132
[02118]                   
[02119]                   L131:
[02120] 09d5: 66 73 65 65   db 'fseek'    ;----- cgdefs
              6b 
[02121] 09da: 00          	db	$00    ;----- cgdefb
[02122]                   
[02123]                   L132:
[02124]                   	;----- cgldlab
[02125] 09db: d4 00 00    	 				call epush16
[02126] 09de: 09 d5       	 				  dw  L131
[02127]                   	;----- cgcall
[02128] 09e0: d4 00 f4    	          call  Cpr
[02129]                   	;----- cgstack
[02130] 09e3: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02131] 09e6: 00 02       	          dw  2  ;--- offset
[02132] 09e8: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02133]                   	;---- queue dpush
[02134]                   	;----- push + pop data not required, data remains unchanged in RA
[02135]                   	;----- end stmt ------
[02136]                   	;----- begin stmt ------
[02137]                   	;----- begin if
[02138]                   	;----- cglit
[02139] 09eb: d4 00 00    	 				call epush16
[02140] 09ee: 00 00       	 				  dw 0
[02141]                   	;----- cglit
[02142] 09f0: d4 00 00    	 				call epush16
[02143] 09f3: 07 e9       	 				  dw 2025
[02144]                   	;----- cgldlw
[02145] 09f5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02146] 09f8: ff fe       	          dw  -2  ;--- offset
[02147]                   	;----- cgcall
[02148] 09fa: d4 00 00    	          call  Cfseek
[02149]                   	;----- cgstack
[02150] 09fd: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02151] 0a00: 00 06       	          dw  6  ;--- offset
[02152] 0a02: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02153]                   	;---- queue dpush
[02154]                   	;------ commit push
[02155]                   	;----- cgpushd
[02156] 0a05: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02157]                   	;----- cglit
[02158] 0a08: d4 00 00    	 				call epush16
[02159] 0a0b: 00 00       	 				  dw 0
[02160]                   	;----- queue_cmp
[02161]                   	;----- genbrfalse
[02162]                   	;----- genbranch
[02163]                   	;----- cgbrne
[02164]                   	;----- cgne
[02165] 0a0d: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02166]                   
[02167]                   	;----- cgbrcond
[02168] 0a10: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02169] 0a13: 9a          	 				 ghi   ra            ; get MSB from result
[02170] 0a14: 52          	 				 str   r2            ; save in M(X)
[02171] 0a15: 8a          	 				 glo   ra            ; get LSB from result
[02172] 0a16: f1          	 				 or                  ; D = MSB | LSB
[02173] 0a17: ca 0a 1d    	lbnz	L134
[02174] 0a1a: c0 0a 38    	lbr	L133
[02175]                   
[02176]                   L134:
[02177]                   	;----- begin stmt ------
[02178]                   	;---- queue lbr L136
[02179]                   	;----- cgjump
[02180] 0a1d: c0 0a 28    	 				  lbr	L136
[02181]                   
[02182]                   L135:
[02183] 0a20: 66 73 65 65   db 'fseek-2'    ;----- cgdefs
              6b 2d 32 
[02184] 0a27: 00          	db	$00    ;----- cgdefb
[02185]                   
[02186]                   L136:
[02187]                   	;----- cgldlab
[02188] 0a28: d4 00 00    	 				call epush16
[02189] 0a2b: 0a 20       	 				  dw  L135
[02190]                   	;----- cgcall
[02191] 0a2d: d4 00 a4    	          call  Cfail
[02192]                   	;----- cgstack
[02193] 0a30: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02194] 0a33: 00 02       	          dw  2  ;--- offset
[02195] 0a35: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02196]                   	;---- queue dpush
[02197]                   	;----- push + pop data not required, data remains unchanged in RA
[02198]                   	;----- end stmt ------
[02199]                   
[02200]                   L133:
[02201]                   	;----- end if
[02202]                   	;----- end stmt ------
[02203]                   	;----- begin stmt ------
[02204]                   	;----- begin if
[02205]                   	;----- cgldlw
[02206] 0a38: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02207] 0a3b: ff fe       	          dw  -2  ;--- offset
[02208]                   	;----- cgcall
[02209] 0a3d: d4 00 00    	          call  Cftell
[02210]                   	;----- cgstack
[02211] 0a40: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02212] 0a43: 00 02       	          dw  2  ;--- offset
[02213] 0a45: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02214]                   	;---- queue dpush
[02215]                   	;------ commit push
[02216]                   	;----- cgpushd
[02217] 0a48: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02218]                   	;----- cglit
[02219] 0a4b: d4 00 00    	 				call epush16
[02220] 0a4e: 07 e9       	 				  dw 2025
[02221]                   	;----- queue_cmp
[02222]                   	;----- genbrfalse
[02223]                   	;----- genbranch
[02224]                   	;----- cgbrne
[02225]                   	;----- cgne
[02226] 0a50: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02227]                   
[02228]                   	;----- cgbrcond
[02229] 0a53: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02230] 0a56: 9a          	 				 ghi   ra            ; get MSB from result
[02231] 0a57: 52          	 				 str   r2            ; save in M(X)
[02232] 0a58: 8a          	 				 glo   ra            ; get LSB from result
[02233] 0a59: f1          	 				 or                  ; D = MSB | LSB
[02234] 0a5a: ca 0a 60    	lbnz	L138
[02235] 0a5d: c0 0a 7b    	lbr	L137
[02236]                   
[02237]                   L138:
[02238]                   	;----- begin stmt ------
[02239]                   	;---- queue lbr L140
[02240]                   	;----- cgjump
[02241] 0a60: c0 0a 6b    	 				  lbr	L140
[02242]                   
[02243]                   L139:
[02244] 0a63: 66 73 65 65   db 'fseek-3'    ;----- cgdefs
              6b 2d 33 
[02245] 0a6a: 00          	db	$00    ;----- cgdefb
[02246]                   
[02247]                   L140:
[02248]                   	;----- cgldlab
[02249] 0a6b: d4 00 00    	 				call epush16
[02250] 0a6e: 0a 63       	 				  dw  L139
[02251]                   	;----- cgcall
[02252] 0a70: d4 00 a4    	          call  Cfail
[02253]                   	;----- cgstack
[02254] 0a73: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02255] 0a76: 00 02       	          dw  2  ;--- offset
[02256] 0a78: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02257]                   	;---- queue dpush
[02258]                   	;----- push + pop data not required, data remains unchanged in RA
[02259]                   	;----- end stmt ------
[02260]                   
[02261]                   L137:
[02262]                   	;----- end if
[02263]                   	;----- end stmt ------
[02264]                   	;----- begin stmt ------
[02265]                   	;---- queue lbr L142
[02266]                   	;----- cgjump
[02267] 0a7b: c0 0a 84    	 				  lbr	L142
[02268]                   
[02269]                   L141:
[02270] 0a7e: 66 73 65 65   db 'fseek'    ;----- cgdefs
              6b 
[02271] 0a83: 00          	db	$00    ;----- cgdefb
[02272]                   
[02273]                   L142:
[02274]                   	;----- cgldlab
[02275] 0a84: d4 00 00    	 				call epush16
[02276] 0a87: 0a 7e       	 				  dw  L141
[02277]                   	;----- cgcall
[02278] 0a89: d4 00 f4    	          call  Cpr
[02279]                   	;----- cgstack
[02280] 0a8c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02281] 0a8f: 00 02       	          dw  2  ;--- offset
[02282] 0a91: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02283]                   	;---- queue dpush
[02284]                   	;----- push + pop data not required, data remains unchanged in RA
[02285]                   	;----- end stmt ------
[02286]                   	;----- begin stmt ------
[02287]                   	;----- begin if
[02288]                   	;----- cglit
[02289] 0a94: d4 00 00    	 				call epush16
[02290] 0a97: 00 01       	 				  dw 1
[02291]                   	;----- cglit
[02292] 0a99: d4 00 00    	 				call epush16
[02293] 0a9c: 01 db       	 				  dw 475
[02294]                   	;----- cgldlw
[02295] 0a9e: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02296] 0aa1: ff fe       	          dw  -2  ;--- offset
[02297]                   	;----- cgcall
[02298] 0aa3: d4 00 00    	          call  Cfseek
[02299]                   	;----- cgstack
[02300] 0aa6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02301] 0aa9: 00 06       	          dw  6  ;--- offset
[02302] 0aab: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02303]                   	;---- queue dpush
[02304]                   	;------ commit push
[02305]                   	;----- cgpushd
[02306] 0aae: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02307]                   	;----- cglit
[02308] 0ab1: d4 00 00    	 				call epush16
[02309] 0ab4: 00 00       	 				  dw 0
[02310]                   	;----- queue_cmp
[02311]                   	;----- genbrfalse
[02312]                   	;----- genbranch
[02313]                   	;----- cgbrne
[02314]                   	;----- cgne
[02315] 0ab6: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02316]                   
[02317]                   	;----- cgbrcond
[02318] 0ab9: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02319] 0abc: 9a          	 				 ghi   ra            ; get MSB from result
[02320] 0abd: 52          	 				 str   r2            ; save in M(X)
[02321] 0abe: 8a          	 				 glo   ra            ; get LSB from result
[02322] 0abf: f1          	 				 or                  ; D = MSB | LSB
[02323] 0ac0: ca 0a c6    	lbnz	L144
[02324] 0ac3: c0 0a e1    	lbr	L143
[02325]                   
[02326]                   L144:
[02327]                   	;----- begin stmt ------
[02328]                   	;---- queue lbr L146
[02329]                   	;----- cgjump
[02330] 0ac6: c0 0a d1    	 				  lbr	L146
[02331]                   
[02332]                   L145:
[02333] 0ac9: 66 73 65 65   db 'fseek-4'    ;----- cgdefs
              6b 2d 34 
[02334] 0ad0: 00          	db	$00    ;----- cgdefb
[02335]                   
[02336]                   L146:
[02337]                   	;----- cgldlab
[02338] 0ad1: d4 00 00    	 				call epush16
[02339] 0ad4: 0a c9       	 				  dw  L145
[02340]                   	;----- cgcall
[02341] 0ad6: d4 00 a4    	          call  Cfail
[02342]                   	;----- cgstack
[02343] 0ad9: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02344] 0adc: 00 02       	          dw  2  ;--- offset
[02345] 0ade: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02346]                   	;---- queue dpush
[02347]                   	;----- push + pop data not required, data remains unchanged in RA
[02348]                   	;----- end stmt ------
[02349]                   
[02350]                   L143:
[02351]                   	;----- end if
[02352]                   	;----- end stmt ------
[02353]                   	;----- begin stmt ------
[02354]                   	;----- begin if
[02355]                   	;----- cgldlw
[02356] 0ae1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02357] 0ae4: ff fe       	          dw  -2  ;--- offset
[02358]                   	;----- cgcall
[02359] 0ae6: d4 00 00    	          call  Cftell
[02360]                   	;----- cgstack
[02361] 0ae9: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02362] 0aec: 00 02       	          dw  2  ;--- offset
[02363] 0aee: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02364]                   	;---- queue dpush
[02365]                   	;------ commit push
[02366]                   	;----- cgpushd
[02367] 0af1: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02368]                   	;----- cglit
[02369] 0af4: d4 00 00    	 				call epush16
[02370] 0af7: 09 c4       	 				  dw 2500
[02371]                   	;----- queue_cmp
[02372]                   	;----- genbrfalse
[02373]                   	;----- genbranch
[02374]                   	;----- cgbrne
[02375]                   	;----- cgne
[02376] 0af9: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02377]                   
[02378]                   	;----- cgbrcond
[02379] 0afc: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02380] 0aff: 9a          	 				 ghi   ra            ; get MSB from result
[02381] 0b00: 52          	 				 str   r2            ; save in M(X)
[02382] 0b01: 8a          	 				 glo   ra            ; get LSB from result
[02383] 0b02: f1          	 				 or                  ; D = MSB | LSB
[02384] 0b03: ca 0b 09    	lbnz	L148
[02385] 0b06: c0 0b 24    	lbr	L147
[02386]                   
[02387]                   L148:
[02388]                   	;----- begin stmt ------
[02389]                   	;---- queue lbr L150
[02390]                   	;----- cgjump
[02391] 0b09: c0 0b 14    	 				  lbr	L150
[02392]                   
[02393]                   L149:
[02394] 0b0c: 66 73 65 65   db 'fseek-5'    ;----- cgdefs
              6b 2d 35 
[02395] 0b13: 00          	db	$00    ;----- cgdefb
[02396]                   
[02397]                   L150:
[02398]                   	;----- cgldlab
[02399] 0b14: d4 00 00    	 				call epush16
[02400] 0b17: 0b 0c       	 				  dw  L149
[02401]                   	;----- cgcall
[02402] 0b19: d4 00 a4    	          call  Cfail
[02403]                   	;----- cgstack
[02404] 0b1c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02405] 0b1f: 00 02       	          dw  2  ;--- offset
[02406] 0b21: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02407]                   	;---- queue dpush
[02408]                   	;----- push + pop data not required, data remains unchanged in RA
[02409]                   	;----- end stmt ------
[02410]                   
[02411]                   L147:
[02412]                   	;----- end if
[02413]                   	;----- end stmt ------
[02414]                   	;----- begin stmt ------
[02415]                   	;---- queue lbr L152
[02416]                   	;----- cgjump
[02417] 0b24: c0 0b 2e    	 				  lbr	L152
[02418]                   
[02419]                   L151:
[02420] 0b27: 66 63 6c 6f   db 'fclose'    ;----- cgdefs
              73 65 
[02421] 0b2d: 00          	db	$00    ;----- cgdefb
[02422]                   
[02423]                   L152:
[02424]                   	;----- cgldlab
[02425] 0b2e: d4 00 00    	 				call epush16
[02426] 0b31: 0b 27       	 				  dw  L151
[02427]                   	;----- cgcall
[02428] 0b33: d4 00 f4    	          call  Cpr
[02429]                   	;----- cgstack
[02430] 0b36: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02431] 0b39: 00 02       	          dw  2  ;--- offset
[02432] 0b3b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02433]                   	;---- queue dpush
[02434]                   	;----- push + pop data not required, data remains unchanged in RA
[02435]                   	;----- end stmt ------
[02436]                   	;----- begin stmt ------
[02437]                   	;----- cgldlw
[02438] 0b3e: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02439] 0b41: ff fe       	          dw  -2  ;--- offset
[02440]                   	;----- cgcall
[02441] 0b43: d4 00 00    	          call  Cfclose
[02442]                   	;----- cgstack
[02443] 0b46: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02444] 0b49: 00 02       	          dw  2  ;--- offset
[02445] 0b4b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02446]                   	;---- queue dpush
[02447]                   	;----- push + pop data not required, data remains unchanged in RA
[02448]                   	;----- end stmt ------
[02449]                   	;----- begin stmt ------
[02450]                   	;---- queue lbr L154
[02451]                   	;----- cgjump
[02452] 0b4e: c0 0b 5c    	 				  lbr	L154
[02453]                   
[02454]                   L153:
[02455] 0b51: 66 74 65 73   db 'ftest5.tmp'    ;----- cgdefs
              74 35 2e 74 
              6d 70 
[02456] 0b5b: 00          	db	$00    ;----- cgdefb
[02457]                   
[02458]                   L154:
[02459]                   	;----- cgldlab
[02460] 0b5c: d4 00 00    	 				call epush16
[02461] 0b5f: 0b 51       	 				  dw  L153
[02462]                   	;----- cgcall
[02463] 0b61: d4 00 00    	          call  Cunlink
[02464]                   	;----- cgstack
[02465] 0b64: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02466] 0b67: 00 02       	          dw  2  ;--- offset
[02467] 0b69: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02468]                   	;---- queue dpush
[02469]                   	;----- push + pop data not required, data remains unchanged in RA
[02470]                   	;----- end stmt ------
[02471]                   
[02472]                   L8:
[02473]                   	;----- cgstack
[02474] 0b6c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02475] 0b6f: 00 06       	          dw  6  ;--- offset
[02476] 0b71: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02477]                   	;----- cgexit
[02478] 0b74: e2          	          sex   r2            ; make sure X = SP
[02479] 0b75: d4 00 00    	          call  escheck       ; check for expression stack creep
[02480] 0b78: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[02481]                   
[02482] 0b7d: d5          	          rtn	  			 	     ; return to caller
[02483]                   	;----- cgpublic
[02484] 0b7e:             	              public Cmain
[02485]                   Cmain:
[02486]                     ;----- cgsetup
[02487]                   #ifdef STGROM
[02488] 0b7e: f8 00 a1 f8       load   r1, $F000  ; set up handler for STG Breakpoint
              f0 b1 
[02489]                   #endif
[02490]                   	;---- cgentry
[02491] 0b84: e2          	          sex   r2   				 ; make sure X = SP
[02492] 0b85: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[02493] 0b89: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[02494]                   	;----- begin stmt ------
[02495]                   	;----- cgcall
[02496] 0b8d: d4 02 23    	          call  Ctest_sio3
[02497]                   	;---- queue dpush
[02498]                   	;----- push + pop data not required, data remains unchanged in RA
[02499]                   	;----- end stmt ------
[02500]                   	;----- begin stmt ------
[02501]                   	;----- begin return
[02502]                   	;----- cgldgw
[02503] 0b90: d4 00 00    	 				call vpush16
[02504] 0b93: 00 02       	 				  dw Cresult
[02505]                   	;----- cgpopd
[02506] 0b95: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02507]                   	;---- queue lbr L155
[02508]                   	;----- end return
[02509]                   	;----- end stmt ------
[02510]                   	;---- lbr L155 falls through
[02511]                   
[02512]                   L155:
[02513]                   	;----- cgexit
[02514] 0b98: e2          	          sex   r2            ; make sure X = SP
[02515] 0b99: d4 00 00    	          call  escheck       ; check for expression stack creep
[02516] 0b9c: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[02517]                   
[02518] 0ba1: d5          	          rtn	  			 	     ; return to caller
[02519]                   	;---- cgpostlude
[02520] 0ba2:             	             endp
