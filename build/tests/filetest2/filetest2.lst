[00001]                   ; -------------------------------------------------------------------
[00002]                   ; This file generated by ElfC, based on SubC
[00003]                   ; SubC Copyright 2012-2025 by Nils Holm
[00004]                   ; -------------------------------------------------------------------
<00000>                   #include include/ops_c.inc
<00001>                   .op "PUSH","N","9$1 73 8$1 73"
<00002>                   .op "POP","N","60 72 A$1 F0 B$1"
<00003>                   .op "MOV","NR","9$2 B$1 8$2 A$1"
<00004>                   .op "MOV","NW","F8 H2 B$1 F8 L2 A$1"
<00005>                   .op "CALL","W","D4 H1 L1"
<00006>                   .op "RTN","","D5"
<00007>                   .op "CLC","","FC 00"
<00008>                   .op "STC","","FF 00"
<00009>                   .op "COPY","NR","8$1 A$2 9$1 B$2"
<00010>                   .op "LOAD","NW","F8 L2 A$1 F8 H2 B$1"
<00011>                   .op "RETURN","","D5"
<00012>                   .op "MATCH","NW","8$1 FF L2 52 9$1 7F H2 F1"
<00013>                   .op "BRKPT","","79 D1"
<00000>                   #include include/bios.inc
<00001>                   ; *******************************************************************
<00002>                   ; *** This software is copyright 2006 by Michael H Riley          ***
<00003>                   ; *** You have permission to use, modify, copy, and distribute    ***
<00004>                   ; *** this software so long as this copyright notice is retained. ***
<00005>                   ; *** This software may not be used in commercial applications    ***
<00006>                   ; *** without express written permission from the author.         ***
<00007>                   ; *******************************************************************
<00008>                   
<00011>                   #endif
<00012>                   
<00013>                   ; Define address for standard BIOS vectors
<00014>                   #ifndef BIOS
<00015>                   #define BIOS 0ff00h
<00016>                   #endif
<00017>                   
<00018>                   ; Define address for extended BIOS vectors
<00019>                   #ifndef EBIOS
<00020>                   #define EBIOS 0f800h
<00021>                   #endif
<00022>                   
<00023>                   #ifndef _TASM_
<00024> 0000:             scall:      equ  r4                    ; register for SCALL
<00025> 0000:             sret:       equ  r5                    ; register for SRET
<00026>                   
<00027> 0000:             call:       equ  0ffe0h                ; depricated
<00028> 0000:             ret:        equ  0fff1h                ; depricated
<00029>                   #endif
<00030>                   
<00031> 0000:             f_boot:     equ  (BIOS+00h)            ; boot from ide device
<00032> 0000:             f_type:     equ  (BIOS+03h)            ; type 1 character to console
<00033> 0000:             f_read:     equ  (BIOS+06h)            ; read 1 character from console
<00034> 0000:             f_msg:      equ  (BIOS+09h)            ; type asciiz string to console
<00035> 0000:             f_typex:    equ  (BIOS+0ch)            ; depricated, just returns now
<00036> 0000:             f_input:    equ  (BIOS+0fh)            ; read asciiz from console
<00037> 0000:             f_strcmp:   equ  (BIOS+12h)            ; compare 2 strings
<00038> 0000:             f_ltrim:    equ  (BIOS+15h)            ; trim leading spaces
<00039> 0000:             f_strcpy:   equ  (BIOS+18h)            ; copy an asciiz string
<00040> 0000:             f_memcpy:   equ  (BIOS+1bh)            ; copy memory
<00041> 0000:             f_wrtsec:   equ  (BIOS+1eh)            ; write floppy sector (depricated)
<00042> 0000:             f_rdsec:    equ  (BIOS+21h)            ; read floppy sector (depricated)
<00043> 0000:             f_seek0:    equ  (BIOS+24h)            ; floppy seek to track 0 (depricated)
<00044> 0000:             f_seek:     equ  (BIOS+27h)            ; floopy track seek (depricated)
<00045> 0000:             f_drive:    equ  (BIOS+2ah)            ; select floppy drive (depricated)
<00046> 0000:             f_setbd:    equ  (BIOS+2dh)            ; set console baud rate
<00047> 0000:             f_mul16:    equ  (BIOS+30h)            ; 16-bit multiply
<00048> 0000:             f_div16:    equ  (BIOS+33h)            ; 16-bit division
<00049> 0000:             f_idereset: equ  (BIOS+36h)            ; reset ide device
<00050> 0000:             f_idewrite: equ  (BIOS+39h)            ; write ide sector
<00051> 0000:             f_ideread:  equ  (BIOS+3ch)            ; read ide sector
<00052> 0000:             f_initcall: equ  (BIOS+3fh)            ; initialize R4 and R5
<00053> 0000:             f_bootide:  equ  (BIOS+42h)            ; boot from ide device
<00054> 0000:             f_hexin:    equ  (BIOS+45h)            ; convert ascii number to hex
<00055> 0000:             f_hexout2:  equ  (BIOS+48h)            ; convert hex to 2-digit ascii
<00056> 0000:             f_hexout4:  equ  (BIOS+4bh)            ; convert hex to 4-digit ascii
<00057> 0000:             f_tty:      equ  (BIOS+4eh)            ; type character to console
<00058> 0000:             f_mover:    equ  (BIOS+51h)            ; program relocator
<00059> 0000:             f_minimon:  equ  (BIOS+54h)            ; mini monitor
<00060> 0000:             f_freemem:  equ  (BIOS+57h)            ; determine memory size
<00061> 0000:             F_isnum:    equ  (BIOS+5ah)            ; determine if D is numeric
<00062> 0000:             f_atoi:     equ  (BIOS+5dh)            ; convert ascii to integer
<00063> 0000:             f_uintout:  equ  (BIOS+60h)            ; convert unsigned integer to ascii
<00064> 0000:             f_intout:   equ  (BIOS+63h)            ; convert signed integer to ascii
<00065> 0000:             f_inmsg:    equ  (BIOS+66h)            ; type in-line message
<00066> 0000:             f_inputl:   equ  (BIOS+69h)            ; read limited line from console
<00067> 0000:             f_brktest:  equ  (BIOS+6ch)            ; check for serial break
<00068> 0000:             f_findtkn:  equ  (BIOS+6fh)            ; find token in a token table
<00069> 0000:             f_isalpha:  equ  (BIOS+72h)            ; determine if D is alphabetic
<00070> 0000:             f_ishex:    equ  (BIOS+75h)            ; determine if D is hexadecimal
<00071> 0000:             f_isalnum:  equ  (BIOS+78h)            ; determine if D is alpha or numeric
<00072> 0000:             f_idnum:    equ  (BIOS+7bh)            ; determine type of ascii number
<00073> 0000:             f_isterm:   equ  (BIOS+7eh)            ; determine if D is a termination char
<00074> 0000:             f_getdev:   equ  (BIOS+81h)            ; get supported devices
<00075>                   
<00076> 0000:             f_version:  equ  (BIOS+0f9h)           ; 3 bytes holding bios version number
<00077>                   
<00078>                   ; "Extended" BIOS vectors
<00079>                   
<00080> 0000:             f_bread:    equ  (EBIOS+00h)        ; read from onboard serial port
<00081> 0000:             f_btype:    equ  (EBIOS+03h)        ; write to onboard serial port
<00082> 0000:             f_btest:    equ  (EBIOS+06h)        ; test onboard serial port
<00083> 0000:             f_utype:    equ  (EBIOS+09h)        ; write to disk board UART
<00084> 0000:             f_uread:    equ  (EBIOS+0ch)        ; read from disk board UART
<00085> 0000:             f_utest:    equ  (EBIOS+0fh)        ; test disk board UART
<00086> 0000:             f_usetbd:   equ  (EBIOS+12h)        ; set disk board UART baud rate and format
<00087> 0000:             f_gettod:   equ  (EBIOS+15h)        ; read time of day clock
<00088> 0000:             f_settod:   equ  (EBIOS+18h)        ; set time of day clock
<00089> 0000:             f_rdnvr:    equ  (EBIOS+1bh)        ; read non volatile RAM
<00090> 0000:             f_wrnvr:    equ  (EBIOS+1eh)        ; write non volatile RAM
<00091> 0000:             f_idesize:  equ  (EBIOS+21h)        ; return size of attached IDE drive(s)
<00092> 0000:             f_ideid:    equ  (EBIOS+24h)        ; return device data for IDE drive(s)
<00093> 0000:             f_tmtoas:   equ  (EBIOS+2ah)        ; time to ASCII string
<00094> 0000:             f_dttoas:   equ  (EBIOS+27h)        ; date to ASCII string
<00095> 0000:             f_rtctest:  equ  (EBIOS+2dh)        ; test size and presence of RTC/NVR
<00096> 0000:             f_astodt:   equ  (EBIOS+30h)        ; convert ASCII string to date
<00097> 0000:             f_astotm:   equ  (EBIOS+33h)        ; convert ASCII string to time
<00000>                   #include include/kernel.inc
<00001> 0000:             O_CLDBOOT:    equ    0300h             ; jump to cold boot routine
<00002> 0000:             O_WRMBOOT:    equ    0303h             ; jump to warm boot routine
<00003> 0000:             O_OPEN:       equ    0306h             ; open a file
<00004> 0000:             O_READ:       equ    0309h             ; read from file
<00005> 0000:             O_WRITE:      equ    030ch             ; write to file
<00006> 0000:             O_SEEK:       equ    030fh             ; seek to file position
<00007> 0000:             O_CLOSE:      equ    0312h             ; close file
<00008> 0000:             O_OPENDIR:    equ    0315h             ; open dir as a file
<00009> 0000:             O_DELETE:     equ    0318h             ; delete a file
<00010> 0000:             O_RENAME:     equ    031bh             ; rename a file
<00011> 0000:             O_EXEC:       equ    031eh             ; execute an external program
<00012> 0000:             O_MKDIR:      equ    0321h             ; make directory
<00013> 0000:             O_CHDIR:      equ    0324h             ; change directory
<00014> 0000:             O_RMDIR:      equ    0327h             ; remove directory
<00015> 0000:             O_RDLUMP:     equ    032Ah             ; read LAT entry
<00016> 0000:             O_RDLUMP32:   equ    040fh             ; read 32-bit LAT entry
<00017> 0000:             O_WRLUMP:     equ    032Dh             ; write LAT entry
<00018> 0000:             O_WRLUMP32:   equ    0421h             ; write LAT entry
<00019> 0000:             O_TYPE:       equ    0330h             ; passthrough for console output
<00020> 0000:             O_MSG:        equ    0333h             ; passthrough for console output
<00021> 0000:             O_READKEY:    equ    0336h             ; passthrough for console input
<00022> 0000:             O_INPUT:      equ    0339h             ; passthrough for console input
<00023> 0000:             O_PRTSTAT:    equ    033ch             ; printer status
<00024> 0000:             O_PRINT:      equ    033fh             ; output to printer
<00025> 0000:             O_EXECBIN:    equ    0342h             ; execute from default directory
<00026> 0000:             O_SETDEF:     equ    0345h             ; set/get default directory
<00027> 0000:             O_KINIT:      equ    0348h             ; reserved - do not use!!!
<00028> 0000:             O_INMSG:      equ    034bh             ; passthrough for console output
<00029> 0000:             O_GETDEV:     equ    034eh             ; passthrough to f_getdef
<00030> 0000:             O_GETTOD:     equ    0351h             ; passthrough to f_gettod
<00031> 0000:             O_SETTOD:     equ    0354h             ; passthrough to f_settod
<00032> 0000:             O_INPUTL:     equ    0357h             ; passthrough to f_inputl
<00033> 0000:             O_BOOT:       equ    035ah             ; passthrough to f_boot
<00034> 0000:             O_SETBD:      equ    0360h             ; passthrough to f_setbd
<00035> 0000:             O_INITCALL:   equ    0363h             ; passthrough to f_initcall
<00036> 0000:             O_BRKTEST:    equ    0366h             ; passthrough to f_brktest
<00037> 0000:             O_DEVCTRL:    equ    0369h             ; Hook for device control drivers
<00038> 0000:             O_ALLOC:      equ    036ch             ; passthrough to alloc
<00039> 0000:             O_DEALLOC:    equ    036fh             ; passthrough to dealloc
<00040> 0000:             O_TERMCTRL:   equ    0372h             ; Hook for terminal control drivers
<00041> 0000:             O_NBREAD:     equ    0375h             ; passthrough to f_nbread
<00042> 0000:             O_MEMBTRL:    equ    0378h             ; Hook for memory control drivers
<00043> 0000:             O_LMPTOSEC:   equ    0409h             ; convert lump to sector
<00044> 0000:             O_SECTOLMP:   equ    040ch             ; convert sector to lump
<00045> 0000:             O_DIRENT:     equ    037Bh             ; get dirent for a file
<00046> 0000:             O_RELSEC:     equ    0418h             ; find relative sector
<00047> 0000:             O_TRUNC:      equ    046ah             ; Truncate file
<00048> 0000:             O_VIDEO:      equ    0456h             ; video driver hook
<00049> 0000:             D_IDERESET:   equ    0444h             ; passthrough to f_idereset
<00050> 0000:             D_IDEREAD:    equ    0447h             ; passthrough to f_ideread
<00051> 0000:             D_IDEWRITE:   equ    044Ah             ; passthrough to f_idewrite
<00052> 0000:             D_REAPHEAP:   equ    044Dh             ; calls heap reaper to clean non-permanent heap blocks
<00053> 0000:             D_SAVESYS:    equ    0459h             ; save system sector
<00054> 0000:             D_DELCHAIN:   equ    0453h             ; delete an AU chain
<00055> 0000:             D_ALLOCAU:    equ    045eh             ; allocate an AU
<00056> 0000:             D_FREEDIRENT: equ    046dh             ; allocate a DIRENT
<00057> 0000:             I_SERVE:      equ    03f6h             ; address of interrupt chain head
<00058> 0000:             V_IVEC:       equ    03fdh             ; interrupt head
<00059> 0000:             V_DVEC:       equ    036ah             ; device head
<00060> 0000:             K_SYS_DTA:    equ    0100h             ; system sector DTA
<00061> 0000:             K_VER:        equ    0400h             ; kernel version number
<00062> 0000:             K_BUILD:      equ    0403h             ; kernel build number
<00063> 0000:             K_BMONTH:     equ    0405h             ; kernel build month
<00064> 0000:             K_BDAY:       equ    0406h             ; kernel build day
<00065> 0000:             K_BYEAR:      equ    0407h             ; kernel build month
<00066> 0000:             K_LASTSEC:    equ    042bh             ; sector currently in sys DTA
<00067> 0000:             K_CWD_LUMP:   equ    0436h             ; lump for current directory
<00068> 0000:             K_EXEC_AU:    equ    043Eh             ; executable starting AU
<00069> 0000:             K_HIMEM:      equ    0442h             ; high memory pointer
<00070> 0000:             K_LOWMEM:     equ    0465h             ; lowest memory heap can use
<00071> 0000:             K_RETVAL:     equ    0467h             ; D on program exit
<00072> 0000:             K_HEAP:       equ    0468h             ; heap pointer
<00073> 0000:             K_CLKFREQ:    equ    0470h             ; system clock frequency
<00074> 0000:             K_MONTH:      equ    0475h             ; date/time
<00075> 0000:             K_DAY:        equ    0476h
<00076> 0000:             K_YEAR:       equ    0477h
<00077> 0000:             K_HOUR:       equ    0478h
<00078> 0000:             K_MINUTE:     equ    0479h
<00079> 0000:             K_SECOND:     equ    047ah
<00080> 0000:             K_SECDEN:     equ    047bh
<00081> 0000:             K_SECNUM:     equ    047dh
<00082>                   
<00083>                   
<00000>                   #include include/elfc.inc
<00001>                   ;-------------------------------------------------------------------------------
<00002>                   ; elfc - a library for basic c language functions
<00003>                   ;-------------------------------------------------------------------------------
<00004> 0000:                       extrn   epush16
<00005> 0000:                       extrn   epush8
<00006> 0000:                       extrn   dpop16
<00007> 0000:                       extrn   abs16
<00008> 0000:                       extrn   add16
<00009> 0000:                       extrn   and16
<00010> 0000:                       extrn   atoi16
<00011> 0000:                       extrn   div16
<00012> 0000:                       extrn   eq16
<00013> 0000:                     	extrn   false16
<00014> 0000:                     	extrn   gt16
<00015> 0000:                     	extrn   gte16
<00016> 0000:                     	extrn   itoa16
<00017> 0000:                     	extrn   lfsrshift
<00018> 0000:                     	extrn   lt16
<00019> 0000:                     	extrn   lte16
<00020> 0000:                     	extrn   mdnorm16
<00021> 0000:                     	extrn   mod16
<00022> 0000:                     	extrn   mul16
<00023> 0000:                     	extrn   ne16
<00024> 0000:                     	extrn   neg16
<00025> 0000:                     	extrn   or16
<00026> 0000:                     	extrn   rnd16
<00027> 0000:                     	extrn   sgn16
<00028> 0000:                     	extrn   sub16
<00029> 0000:                     	extrn   tobcd16
<00030> 0000:                     	extrn   true16
<00031> 0000:                     	extrn   xor16
<00032> 0000:                       extrn   not16
<00033> 0000:                       extrn   bool16
<00034> 0000:                       extrn   inv16
<00035> 0000:                       extrn   shl16
<00036> 0000:                       extrn   shr16
<00037> 0000:                       extrn   vpush16
<00038> 0000:                       extrn   vpop16
<00039> 0000:                       extrn   vpush8
<00040> 0000:                       extrn   dpush16
<00041> 0000:                       extrn   dpush8
<00042> 0000:                       extrn   esmove
<00043> 0000:                       extrn   linit16
<00044> 0000:                       extrn   lstor16
<00045> 0000:                       extrn   lstor8
<00046> 0000:                       extrn   vstor16
<00047> 0000:                       extrn   vstor8
<00048> 0000:                       extrn   swap16
<00049> 0000:                       extrn   dget16
<00050> 0000:                       extrn   lpush16
<00051> 0000:                       extrn   lpush8
<00052> 0000:                       extrn   deref16
<00053> 0000:                       extrn   deref8
<00054> 0000:                       extrn   laddr16
<00055> 0000:                       extrn   pstor16
<00056> 0000:                       extrn   pstor8
<00057> 0000:                       extrn   scltos2
<00058> 0000:                       extrn   sclsos2
<00059> 0000:                       extrn   unscl2
<00060> 0000:                       extrn   vinc16
<00061> 0000:                       extrn   vdec16
<00062> 0000:                       extrn   vinc8
<00063> 0000:                       extrn   vdec8
<00064> 0000:                       extrn   linc16
<00065> 0000:                       extrn   ldec16
<00066> 0000:                       extrn   linc8
<00067> 0000:                       extrn   ldec8
<00068> 0000:                       extrn   lpinc16
<00069> 0000:                       extrn   lpdec16
<00070> 0000:                       extrn   vpinc16
<00071> 0000:                       extrn   vpdec16
<00072> 0000:                       extrn   psave
<00073> 0000:                       extrn   pinc16
<00074> 0000:                       extrn   pdec16
<00075> 0000:                       extrn   pinc8
<00076> 0000:                       extrn   pdec8
<00077> 0000:                       extrn   pincptr
<00078> 0000:                       extrn   pdecptr
<00079> 0000:                       extrn   escheck
<00080> 0000:                       extrn   ugt16
<00081> 0000:                     	extrn   uge16
<00082> 0000:                       extrn   ult16
<00083> 0000:                     	extrn   ule16
<00084> 0000:                       extrn   scltos4
<00085> 0000:                       extrn   sclsos4
<00086> 0000:                       extrn   unscl4
<00087> 0000:                       extrn   lget16
<00088> 0000:                       extrn   lget8
<00089> 0000:                       extrn   lset16
<00090>                   
<00091>                   ;-------------------------------------------------------------------------------
<00092>                   ; crt0 - Elf/OS c start-up library
<00093>                   ;-------------------------------------------------------------------------------
<00094> 0000:                       extrn   auto_err
[00009]                   
[00010] 0000:             	           proc filetest2
[00011]                   
[00012] 0000:                         extrn C_init
[00013]                   
[00014] 0000:                         extrn C_fdinit
[00015]                   
[00016] 0000:                         extrn C_fdtable
[00017]                   
[00018] 0000:                         extrn C_fildes
[00019]                   
[00020] 0000:                         extrn Cabort
[00021]                   
[00022] 0000:                         extrn Cabs
[00023]                   
[00024] 0000:                         extrn Catexit
[00025]                   
[00026] 0000:                         extrn Cexit
[00027]                   
[00028] 0000:                         extrn Cmalloc
[00029]                   
[00030] 0000:                         extrn Ccalloc
[00031]                   
[00032] 0000:                         extrn Crealloc
[00033]                   
[00034] 0000:                         extrn Cfree
[00035]                   
[00036] 0000:                         extrn Catoi
[00037]                   
[00038] 0000:                         extrn Citoa
[00039]                   
[00040] 0000:                         extrn Citox
[00041]                   
[00042] 0000:                         extrn Citou
[00043]                   
[00044] 0000:                         extrn Cdiv
[00045]                   
[00046] 0000:                         extrn Cbsearch
[00047]                   
[00048] 0000:                         extrn Cqsort
[00049]                   
[00050] 0000:                         extrn Crand
[00051]                   
[00052] 0000:                         extrn Csrand
[00053]                   
[00054] 0000:                         extrn Ccreat
[00055]                   
[00056] 0000:                         extrn Copen
[00057]                   
[00058] 0000:                         extrn Cclose
[00059]                   
[00060] 0000:                         extrn Cread
[00061]                   
[00062] 0000:                         extrn Cwrite
[00063]                   
[00064] 0000:                         extrn Clseek
[00065]                   
[00066] 0000:                         extrn Cunlink
[00067]                   
[00068] 0000:                         extrn Crename
[00069]                   
[00070] 0000:                         extrn Cmin
[00071]                   
[00072] 0000:                         extrn Cmax
[00073]                   
[00074] 0000:                         extrn Cstdin
[00075]                   
[00076] 0000:                         extrn Cstdout
[00077]                   
[00078] 0000:                         extrn Cstderr
[00079]                   
[00080] 0000:                         extrn Cputs
[00081]                   
[00082] 0000:                         extrn Cputstr
[00083]                   
[00084] 0000:                         extrn Cgets
[00085]                   
[00086] 0000:                         extrn Cputch
[00087]                   
[00088] 0000:                         extrn Cgetch
[00089]                   
[00090] 0000:                         extrn Cputchar
[00091]                   
[00092] 0000:                         extrn Cgetchar
[00093]                   
[00094] 0000:                         extrn Cfdopen
[00095]                   
[00096] 0000:                         extrn Cfclose
[00097]                   
[00098] 0000:                         extrn Cfopen
[00099]                   
[00100] 0000:                         extrn Cferror
[00101]                   
[00102] 0000:                         extrn Cfeof
[00103]                   
[00104] 0000:                         extrn Cclearerr
[00105]                   
[00106] 0000:                         extrn Cfgetc
[00107]                   
[00108] 0000:                         extrn Cfputc
[00109]                   
[00110] 0000:                         extrn Cfgets
[00111]                   
[00112] 0000:                         extrn Cfputs
[00113]                   
[00114] 0000:                         extrn Cungetc
[00115]                   
[00116] 0000:                         extrn Cfread
[00117]                   
[00118] 0000:                         extrn Cfwrite
[00119]                   
[00120] 0000:                         extrn Cfflush
[00121]                   
[00122] 0000:                         extrn Cfprintf
[00123]                   
[00124] 0000:                         extrn Ckprintf
[00125]                   
[00126] 0000:                         extrn Cprintf
[00127]                   
[00128] 0000:                         extrn Csprintf
[00129]                   
[00130] 0000:                         extrn Cvfprintf
[00131]                   
[00132] 0000:                         extrn Cvprintf
[00133]                   
[00134] 0000:                         extrn Cvsprintf
[00135]                   
[00136] 0000:                         extrn Cfscanf
[00137]                   
[00138] 0000:                         extrn Cscanf
[00139]                   
[00140] 0000:                         extrn Csscanf
[00141]                   
[00142] 0000:                         extrn Cfgetpos
[00143]                   
[00144] 0000:                         extrn Cfsetpos
[00145]                   
[00146] 0000:                         extrn Cfseek
[00147]                   
[00148] 0000:                         extrn Cftell
[00149]                   
[00150] 0000:                         extrn Cperror
[00151]                   
[00152] 0000:                         extrn Crewind
[00153]                   
[00154] 0000:                         extrn Cremove
[00155]                   
[00156] 0000:                         extrn Ctmpnam
[00157]                   
[00158] 0000:                         extrn Ctmpfile
[00159]                   
[00160] 0000:                         extrn Cfileno
[00161]                   
[00162]                   .link .library string.lib
[00163]                   
[00164] 0000:                         extrn Cmemchr
[00165]                   
[00166] 0000:                         extrn Cmemcmp
[00167]                   
[00168] 0000:                         extrn Cmemcpy
[00169]                   
[00170] 0000:                         extrn Cmemmove
[00171]                   
[00172] 0000:                         extrn Cmemset
[00173]                   
[00174] 0000:                         extrn Cstrcat
[00175]                   
[00176] 0000:                         extrn Cstrchr
[00177]                   
[00178] 0000:                         extrn Cstrcmp
[00179]                   
[00180] 0000:                         extrn Cstrcpy
[00181]                   
[00182] 0000:                         extrn Cstrcspn
[00183]                   
[00184] 0000:                         extrn Cstrdup
[00185]                   
[00186] 0000:                         extrn Cstrerror
[00187]                   
[00188] 0000:                         extrn Cstrlen
[00189]                   
[00190] 0000:                         extrn Cstrncat
[00191]                   
[00192] 0000:                         extrn Cstrncmp
[00193]                   
[00194] 0000:                         extrn Cstrncpy
[00195]                   
[00196] 0000:                         extrn Cstrlcpy
[00197]                   
[00198] 0000:                         extrn Cstrpbrk
[00199]                   
[00200] 0000:                         extrn Cstrrchr
[00201]                   
[00202] 0000:                         extrn Cstrspn
[00203]                   
[00204] 0000:                         extrn Cstrstr
[00205]                   
[00206] 0000:                         extrn Cstrtok
[00207]                   	;----- cgpublic
[00208] 0000:             	              public CErrors
[00209] 0000: 00 00       CErrors:	db	$00, $00  ;----- cgdefw LSB first, MSB second
[00210]                   	;----- cgpublic
[00211] 0002:             	              public Cresult
[00212] 0002: 00 00       Cresult:	db	$00, $00  ;----- cgdefw LSB first, MSB second
[00213]                   	;----- cgpublic
[00214] 0004:             	              public Cfilpos
[00215] 0004:             Cfilpos:    ds 4    ;----- cggbss
[00216]                   	;----- cgpublic
[00217] 0008:             	              public Cfail
[00218]                   Cfail:	;---- cgentry
[00219] 0008: e2          	          sex   r2   				 ; make sure X = SP
[00220] 0009: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00221] 000d: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00222]                   	;----- begin stmt ------
[00223]                   	;---- queue lbr L3
[00224]                   	;----- cgjump
[00225] 0011: c0 00 1f    	 				  lbr	L3
[00226]                   
[00227]                   L2:
[00228] 0014: 25 73 20 66   db '%s failed', 10    ;----- cgdefs
              61 69 6c 65 
              64 0a 
[00229] 001e: 00          	db	$00    ;----- cgdefb
[00230]                   
[00231]                   L3:
[00232]                   	;----- cgldlw
[00233] 001f: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00234] 0022: 00 00       	          dw  0  ;--- offset
[00235]                   	;----- cgldlab
[00236] 0024: d4 00 00    	 				call epush16
[00237] 0027: 00 14       	 				  dw  L2
[00238]                   	;----- cgcall
[00239] 0029: d4 00 00    	          call  Cprintf
[00240]                   	;----- cgstack
[00241] 002c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00242] 002f: 00 04       	          dw  4  ;--- offset
[00243] 0031: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00244]                   	;---- queue dpush
[00245]                   	;----- push + pop data not required, data remains unchanged in RA
[00246]                   	;----- end stmt ------
[00247]                   	;----- begin stmt ------
[00248]                   	;----- cgldgw
[00249] 0034: d4 00 00    	 				call vpush16
[00250] 0037: 00 00       	 				  dw CErrors
[00251]                   	;----- cgincgw
[00252] 0039: d4 00 00    	 				 call vinc16       ; increment global variable
[00253] 003c: 00 00       	 				  dw CErrors
[00254]                   	;----- cgpopd
[00255] 003e: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00256]                   	;----- end stmt ------
[00257]                   	;----- begin stmt ------
[00258]                   	;----- cglit
[00259] 0041: d4 00 00    	 				call epush16
[00260] 0044: 00 01       	 				  dw 1
[00261]                   	;----- cgstorgw
[00262] 0046: d4 00 00    	 				 call vstor16       ; store value from ES in global variable
[00263] 0049: 00 02       	 				  dw Cresult
[00264]                   	;----- cgpopd
[00265] 004b: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00266]                   	;----- end stmt ------
[00267]                   
[00268]                   L1:
[00269]                   	;----- cgexit
[00270] 004e: e2          	          sex   r2            ; make sure X = SP
[00271] 004f: d4 00 00    	          call  escheck       ; check for expression stack creep
[00272] 0052: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00273]                   
[00274] 0057: d5          	          rtn	  			 	     ; return to caller
[00275]                   	;----- cgpublic
[00276] 0058:             	              public Cpr
[00277]                   Cpr:	;---- cgentry
[00278] 0058: e2          	          sex   r2   				 ; make sure X = SP
[00279] 0059: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00280] 005d: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00281]                   	;----- begin stmt ------
[00282]                   	;---- queue lbr L6
[00283]                   	;----- cgjump
[00284] 0061: c0 00 68    	 				  lbr	L6
[00285]                   
[00286]                   L5:
[00287] 0064: 25 73 0a      db '%s', 10    ;----- cgdefs
[00288] 0067: 00          	db	$00    ;----- cgdefb
[00289]                   
[00290]                   L6:
[00291]                   	;----- cgldlw
[00292] 0068: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00293] 006b: 00 00       	          dw  0  ;--- offset
[00294]                   	;----- cgldlab
[00295] 006d: d4 00 00    	 				call epush16
[00296] 0070: 00 64       	 				  dw  L5
[00297]                   	;----- cgcall
[00298] 0072: d4 00 00    	          call  Cprintf
[00299]                   	;----- cgstack
[00300] 0075: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00301] 0078: 00 04       	          dw  4  ;--- offset
[00302] 007a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00303]                   	;---- queue dpush
[00304]                   	;----- push + pop data not required, data remains unchanged in RA
[00305]                   	;----- end stmt ------
[00306]                   
[00307]                   L4:
[00308]                   	;----- cgexit
[00309] 007d: e2          	          sex   r2            ; make sure X = SP
[00310] 007e: d4 00 00    	          call  escheck       ; check for expression stack creep
[00311] 0081: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[00312]                   
[00313] 0086: d5          	          rtn	  			 	     ; return to caller
[00314]                   	;----- cgpublic
[00315] 0087:             	              public Ctest_stdio2
[00316]                   Ctest_stdio2:	;---- cgentry
[00317] 0087: e2          	          sex   r2   				 ; make sure X = SP
[00318] 0088: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[00319] 008c: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[00320]                   	;----- cgstack
[00321] 0090: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00322] 0093: ff f6       	          dw  -10  ;--- offset
[00323] 0095: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00324]                   	;----- begin stmt ------
[00325]                   	;---- queue lbr L9
[00326]                   	;----- cgjump
[00327] 0098: c0 00 a2    	 				  lbr	L9
[00328]                   
[00329]                   L8:
[00330] 009b: 66 69 6c 65   db 'fileno'    ;----- cgdefs
              6e 6f 
[00331] 00a1: 00          	db	$00    ;----- cgdefb
[00332]                   
[00333]                   L9:
[00334]                   	;----- cgldlab
[00335] 00a2: d4 00 00    	 				call epush16
[00336] 00a5: 00 9b       	 				  dw  L8
[00337]                   	;----- cgcall
[00338] 00a7: d4 00 58    	          call  Cpr
[00339]                   	;----- cgstack
[00340] 00aa: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00341] 00ad: 00 02       	          dw  2  ;--- offset
[00342] 00af: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00343]                   	;---- queue dpush
[00344]                   	;----- push + pop data not required, data remains unchanged in RA
[00345]                   	;----- end stmt ------
[00346]                   	;----- begin stmt ------
[00347]                   	;----- begin if
[00348]                   	;----- cgldgw
[00349] 00b2: d4 00 00    	 				call vpush16
[00350] 00b5: 00 00       	 				  dw Cstdin
[00351]                   	;----- cgcall
[00352] 00b7: d4 00 00    	          call  Cfileno
[00353]                   	;----- cgstack
[00354] 00ba: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00355] 00bd: 00 02       	          dw  2  ;--- offset
[00356] 00bf: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00357]                   	;---- queue dpush
[00358]                   	;------ commit push
[00359]                   	;----- cgpushd
[00360] 00c2: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00361]                   	;----- cglit
[00362] 00c5: d4 00 00    	 				call epush16
[00363] 00c8: 00 00       	 				  dw 0
[00364]                   	;----- queue_cmp
[00365]                   	;----- genbrfalse
[00366]                   	;----- genbranch
[00367]                   	;----- cgbrne
[00368]                   	;----- cgne
[00369] 00ca: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00370]                   
[00371]                   	;----- cgbrcond
[00372] 00cd: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00373] 00d0: 9a          	 				 ghi   ra            ; get MSB from result
[00374] 00d1: 52          	 				 str   r2            ; save in M(X)
[00375] 00d2: 8a          	 				 glo   ra            ; get LSB from result
[00376] 00d3: f1          	 				 or                  ; D = MSB | LSB
[00377] 00d4: ca 00 da    	lbnz	L11
[00378] 00d7: c0 00 f6    	lbr	L10
[00379]                   
[00380]                   L11:
[00381]                   	;----- begin stmt ------
[00382]                   	;---- queue lbr L13
[00383]                   	;----- cgjump
[00384] 00da: c0 00 e6    	 				  lbr	L13
[00385]                   
[00386]                   L12:
[00387] 00dd: 66 69 6c 65   db 'fileno-1'    ;----- cgdefs
              6e 6f 2d 31 
[00388] 00e5: 00          	db	$00    ;----- cgdefb
[00389]                   
[00390]                   L13:
[00391]                   	;----- cgldlab
[00392] 00e6: d4 00 00    	 				call epush16
[00393] 00e9: 00 dd       	 				  dw  L12
[00394]                   	;----- cgcall
[00395] 00eb: d4 00 08    	          call  Cfail
[00396]                   	;----- cgstack
[00397] 00ee: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00398] 00f1: 00 02       	          dw  2  ;--- offset
[00399] 00f3: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00400]                   	;---- queue dpush
[00401]                   	;----- push + pop data not required, data remains unchanged in RA
[00402]                   	;----- end stmt ------
[00403]                   
[00404]                   L10:
[00405]                   	;----- end if
[00406]                   	;----- end stmt ------
[00407]                   	;----- begin stmt ------
[00408]                   	;----- begin if
[00409]                   	;----- cgldgw
[00410] 00f6: d4 00 00    	 				call vpush16
[00411] 00f9: 00 00       	 				  dw Cstdout
[00412]                   	;----- cgcall
[00413] 00fb: d4 00 00    	          call  Cfileno
[00414]                   	;----- cgstack
[00415] 00fe: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00416] 0101: 00 02       	          dw  2  ;--- offset
[00417] 0103: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00418]                   	;---- queue dpush
[00419]                   	;------ commit push
[00420]                   	;----- cgpushd
[00421] 0106: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00422]                   	;----- cglit
[00423] 0109: d4 00 00    	 				call epush16
[00424] 010c: 00 01       	 				  dw 1
[00425]                   	;----- queue_cmp
[00426]                   	;----- genbrfalse
[00427]                   	;----- genbranch
[00428]                   	;----- cgbrne
[00429]                   	;----- cgne
[00430] 010e: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00431]                   
[00432]                   	;----- cgbrcond
[00433] 0111: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00434] 0114: 9a          	 				 ghi   ra            ; get MSB from result
[00435] 0115: 52          	 				 str   r2            ; save in M(X)
[00436] 0116: 8a          	 				 glo   ra            ; get LSB from result
[00437] 0117: f1          	 				 or                  ; D = MSB | LSB
[00438] 0118: ca 01 1e    	lbnz	L15
[00439] 011b: c0 01 3a    	lbr	L14
[00440]                   
[00441]                   L15:
[00442]                   	;----- begin stmt ------
[00443]                   	;---- queue lbr L17
[00444]                   	;----- cgjump
[00445] 011e: c0 01 2a    	 				  lbr	L17
[00446]                   
[00447]                   L16:
[00448] 0121: 66 69 6c 65   db 'fileno-2'    ;----- cgdefs
              6e 6f 2d 32 
[00449] 0129: 00          	db	$00    ;----- cgdefb
[00450]                   
[00451]                   L17:
[00452]                   	;----- cgldlab
[00453] 012a: d4 00 00    	 				call epush16
[00454] 012d: 01 21       	 				  dw  L16
[00455]                   	;----- cgcall
[00456] 012f: d4 00 08    	          call  Cfail
[00457]                   	;----- cgstack
[00458] 0132: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00459] 0135: 00 02       	          dw  2  ;--- offset
[00460] 0137: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00461]                   	;---- queue dpush
[00462]                   	;----- push + pop data not required, data remains unchanged in RA
[00463]                   	;----- end stmt ------
[00464]                   
[00465]                   L14:
[00466]                   	;----- end if
[00467]                   	;----- end stmt ------
[00468]                   	;----- begin stmt ------
[00469]                   	;----- begin if
[00470]                   	;----- cgldgw
[00471] 013a: d4 00 00    	 				call vpush16
[00472] 013d: 00 00       	 				  dw Cstderr
[00473]                   	;----- cgcall
[00474] 013f: d4 00 00    	          call  Cfileno
[00475]                   	;----- cgstack
[00476] 0142: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00477] 0145: 00 02       	          dw  2  ;--- offset
[00478] 0147: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00479]                   	;---- queue dpush
[00480]                   	;------ commit push
[00481]                   	;----- cgpushd
[00482] 014a: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00483]                   	;----- cglit
[00484] 014d: d4 00 00    	 				call epush16
[00485] 0150: 00 02       	 				  dw 2
[00486]                   	;----- queue_cmp
[00487]                   	;----- genbrfalse
[00488]                   	;----- genbranch
[00489]                   	;----- cgbrne
[00490]                   	;----- cgne
[00491] 0152: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00492]                   
[00493]                   	;----- cgbrcond
[00494] 0155: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00495] 0158: 9a          	 				 ghi   ra            ; get MSB from result
[00496] 0159: 52          	 				 str   r2            ; save in M(X)
[00497] 015a: 8a          	 				 glo   ra            ; get LSB from result
[00498] 015b: f1          	 				 or                  ; D = MSB | LSB
[00499] 015c: ca 01 62    	lbnz	L19
[00500] 015f: c0 01 7e    	lbr	L18
[00501]                   
[00502]                   L19:
[00503]                   	;----- begin stmt ------
[00504]                   	;---- queue lbr L21
[00505]                   	;----- cgjump
[00506] 0162: c0 01 6e    	 				  lbr	L21
[00507]                   
[00508]                   L20:
[00509] 0165: 66 69 6c 65   db 'fileno-3'    ;----- cgdefs
              6e 6f 2d 33 
[00510] 016d: 00          	db	$00    ;----- cgdefb
[00511]                   
[00512]                   L21:
[00513]                   	;----- cgldlab
[00514] 016e: d4 00 00    	 				call epush16
[00515] 0171: 01 65       	 				  dw  L20
[00516]                   	;----- cgcall
[00517] 0173: d4 00 08    	          call  Cfail
[00518]                   	;----- cgstack
[00519] 0176: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00520] 0179: 00 02       	          dw  2  ;--- offset
[00521] 017b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00522]                   	;---- queue dpush
[00523]                   	;----- push + pop data not required, data remains unchanged in RA
[00524]                   	;----- end stmt ------
[00525]                   
[00526]                   L18:
[00527]                   	;----- end if
[00528]                   	;----- end stmt ------
[00529]                   	;----- begin stmt ------
[00530]                   	;----- begin if
[00531]                   	;---- queue lbr L23
[00532]                   	;----- cgjump
[00533] 017e: c0 01 8c    	 				  lbr	L23
[00534]                   
[00535]                   L22:
[00536] 0181: 66 74 65 73   db 'ftest4.tmp'    ;----- cgdefs
              74 34 2e 74 
              6d 70 
[00537] 018b: 00          	db	$00    ;----- cgdefb
[00538]                   
[00539]                   L23:
[00540]                   	;---- queue lbr L25
[00541]                   	;----- cgjump
[00542] 018c: c0 01 92    	 				  lbr	L25
[00543]                   
[00544]                   L24:
[00545] 018f: 77 2b         db 'w+'    ;----- cgdefs
[00546] 0191: 00          	db	$00    ;----- cgdefb
[00547]                   
[00548]                   L25:
[00549]                   	;----- cgldlab
[00550] 0192: d4 00 00    	 				call epush16
[00551] 0195: 01 8f       	 				  dw  L24
[00552]                   	;----- cgldlab
[00553] 0197: d4 00 00    	 				call epush16
[00554] 019a: 01 81       	 				  dw  L22
[00555]                   	;----- cgcall
[00556] 019c: d4 00 00    	          call  Cfopen
[00557]                   	;----- cgstack
[00558] 019f: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00559] 01a2: 00 04       	          dw  4  ;--- offset
[00560] 01a4: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00561]                   	;---- queue dpush
[00562]                   	;------ commit push
[00563]                   	;----- cgpushd
[00564] 01a7: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00565]                   	;----- cgstorlw
[00566] 01aa: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00567] 01ad: ff fe       	          dw  -2  ;--- offset
[00568]                   	;----- cglit
[00569] 01af: d4 00 00    	 				call epush16
[00570] 01b2: 00 00       	 				  dw 0
[00571]                   	;----- queue_cmp
[00572]                   	;----- genbrfalse
[00573]                   	;----- genbranch
[00574]                   	;----- cgbreq
[00575]                   	;----- cgeq
[00576] 01b4: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[00577]                   
[00578]                   	;----- cgbrcond
[00579] 01b7: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00580] 01ba: 9a          	 				 ghi   ra            ; get MSB from result
[00581] 01bb: 52          	 				 str   r2            ; save in M(X)
[00582] 01bc: 8a          	 				 glo   ra            ; get LSB from result
[00583] 01bd: f1          	 				 or                  ; D = MSB | LSB
[00584] 01be: ca 01 c4    	lbnz	L27
[00585] 01c1: c0 01 e2    	lbr	L26
[00586]                   
[00587]                   L27:
[00588]                   	;----- begin stmt ------
[00589]                   	;----- begin stmt ------
[00590]                   	;---- queue lbr L29
[00591]                   	;----- cgjump
[00592] 01c4: c0 01 cf    	 				  lbr	L29
[00593]                   
[00594]                   L28:
[00595] 01c7: 66 6f 70 65   db 'fopen-1'    ;----- cgdefs
              6e 2d 31 
[00596] 01ce: 00          	db	$00    ;----- cgdefb
[00597]                   
[00598]                   L29:
[00599]                   	;----- cgldlab
[00600] 01cf: d4 00 00    	 				call epush16
[00601] 01d2: 01 c7       	 				  dw  L28
[00602]                   	;----- cgcall
[00603] 01d4: d4 00 08    	          call  Cfail
[00604]                   	;----- cgstack
[00605] 01d7: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00606] 01da: 00 02       	          dw  2  ;--- offset
[00607] 01dc: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00608]                   	;---- queue dpush
[00609]                   	;----- push + pop data not required, data remains unchanged in RA
[00610]                   	;----- end stmt ------
[00611]                   	;----- begin stmt ------
[00612]                   	;----- begin return
[00613]                   	;---- queue lbr L7
[00614]                   	;----- end return
[00615]                   	;----- end stmt ------
[00616]                   	;----- end stmt ------
[00617]                   	;----- cgjump
[00618] 01df: c0 0b 99    	 				  lbr	L7
[00619]                   
[00620]                   L26:
[00621]                   	;----- end if
[00622]                   	;----- end stmt ------
[00623]                   	;----- begin stmt ------
[00624]                   	;---- queue lbr L31
[00625]                   	;----- cgjump
[00626] 01e2: c0 01 eb    	 				  lbr	L31
[00627]                   
[00628]                   L30:
[00629] 01e5: 66 70 75 74   db 'fputc'    ;----- cgdefs
              63 
[00630] 01ea: 00          	db	$00    ;----- cgdefb
[00631]                   
[00632]                   L31:
[00633]                   	;----- cgldlab
[00634] 01eb: d4 00 00    	 				call epush16
[00635] 01ee: 01 e5       	 				  dw  L30
[00636]                   	;----- cgcall
[00637] 01f0: d4 00 58    	          call  Cpr
[00638]                   	;----- cgstack
[00639] 01f3: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00640] 01f6: 00 02       	          dw  2  ;--- offset
[00641] 01f8: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00642]                   	;---- queue dpush
[00643]                   	;----- push + pop data not required, data remains unchanged in RA
[00644]                   	;----- end stmt ------
[00645]                   	;----- begin stmt ------
[00646]                   	;----- begin for
[00647]                   	;----- cglit
[00648] 01fb: d4 00 00    	 				call epush16
[00649] 01fe: 00 41       	 				  dw 65
[00650]                   	;----- cgstorlw
[00651] 0200: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00652] 0203: ff fc       	          dw  -4  ;--- offset
[00653]                   	;----- cgpopd
[00654] 0205: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00655]                   
[00656]                   L32:
[00657]                   	;----- cgldlw
[00658] 0208: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00659] 020b: ff fc       	          dw  -4  ;--- offset
[00660]                   	;----- cglit
[00661] 020d: d4 00 00    	 				call epush16
[00662] 0210: 00 5a       	 				  dw 90
[00663]                   	;----- queue_cmp
[00664]                   	;----- genbrfalse
[00665]                   	;----- genbranch
[00666]                   	;----- cgbrle
[00667]                   	;----- cgle
[00668] 0212: d4 00 00    	          call  lte16				 ; compare TOS <= SOS on Expression Stack
[00669]                   
[00670]                   	;----- cgbrcond
[00671] 0215: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00672] 0218: 9a          	 				 ghi   ra            ; get MSB from result
[00673] 0219: 52          	 				 str   r2            ; save in M(X)
[00674] 021a: 8a          	 				 glo   ra            ; get LSB from result
[00675] 021b: f1          	 				 or                  ; D = MSB | LSB
[00676] 021c: ca 02 22    	lbnz	L36
[00677] 021f: c0 02 80    	lbr	L34
[00678]                   
[00679]                   L36:
[00680]                   	;---- queue lbr L33
[00681]                   	;----- cgjump
[00682] 0222: c0 02 35    	 				  lbr	L33
[00683]                   
[00684]                   L35:
[00685]                   	;----- cgldlw
[00686] 0225: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00687] 0228: ff fc       	          dw  -4  ;--- offset
[00688]                   	;----- cginclw
[00689] 022a: d4 00 00    	          call  linc16       ; increment local variable
[00690] 022d: ff fc       	          dw  -4  ;--- offset
[00691]                   	;----- cgpopd
[00692] 022f: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[00693]                   	;---- queue lbr L32
[00694]                   	;----- cgjump
[00695] 0232: c0 02 08    	 				  lbr	L32
[00696]                   
[00697]                   L33:
[00698]                   	;----- begin stmt ------
[00699]                   	;----- begin if
[00700]                   	;----- cgldlw
[00701] 0235: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00702] 0238: ff fe       	          dw  -2  ;--- offset
[00703]                   	;----- cgldlw
[00704] 023a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00705] 023d: ff fc       	          dw  -4  ;--- offset
[00706]                   	;----- cgcall
[00707] 023f: d4 00 00    	          call  Cfputc
[00708]                   	;----- cgstack
[00709] 0242: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00710] 0245: 00 04       	          dw  4  ;--- offset
[00711] 0247: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00712]                   	;---- queue dpush
[00713]                   	;----- cgldlw
[00714] 024a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00715] 024d: ff fc       	          dw  -4  ;--- offset
[00716]                   	;------ commit push
[00717]                   	;----- cgpushd
[00718] 024f: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00719]                   	;----- queue_cmp
[00720]                   	;----- genbrfalse
[00721]                   	;----- genbranch
[00722]                   	;----- cgbrne
[00723]                   	;----- cgne
[00724] 0252: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[00725]                   
[00726]                   	;----- cgbrcond
[00727] 0255: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00728] 0258: 9a          	 				 ghi   ra            ; get MSB from result
[00729] 0259: 52          	 				 str   r2            ; save in M(X)
[00730] 025a: 8a          	 				 glo   ra            ; get LSB from result
[00731] 025b: f1          	 				 or                  ; D = MSB | LSB
[00732] 025c: ca 02 62    	lbnz	L38
[00733] 025f: c0 02 7d    	lbr	L37
[00734]                   
[00735]                   L38:
[00736]                   	;----- begin stmt ------
[00737]                   	;---- queue lbr L40
[00738]                   	;----- cgjump
[00739] 0262: c0 02 6d    	 				  lbr	L40
[00740]                   
[00741]                   L39:
[00742] 0265: 66 70 75 74   db 'fputc-1'    ;----- cgdefs
              63 2d 31 
[00743] 026c: 00          	db	$00    ;----- cgdefb
[00744]                   
[00745]                   L40:
[00746]                   	;----- cgldlab
[00747] 026d: d4 00 00    	 				call epush16
[00748] 0270: 02 65       	 				  dw  L39
[00749]                   	;----- cgcall
[00750] 0272: d4 00 08    	          call  Cfail
[00751]                   	;----- cgstack
[00752] 0275: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00753] 0278: 00 02       	          dw  2  ;--- offset
[00754] 027a: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00755]                   	;---- queue dpush
[00756]                   	;----- push + pop data not required, data remains unchanged in RA
[00757]                   	;----- end stmt ------
[00758]                   
[00759]                   L37:
[00760]                   	;----- end if
[00761]                   	;----- end stmt ------
[00762]                   	;---- queue lbr L35
[00763]                   	;----- cgjump
[00764] 027d: c0 02 25    	 				  lbr	L35
[00765]                   
[00766]                   L34:
[00767]                   	;----- end for
[00768]                   	;----- end stmt ------
[00769]                   	;----- begin stmt ------
[00770]                   	;---- queue lbr L42
[00771]                   	;----- cgjump
[00772] 0280: c0 02 8a    	 				  lbr	L42
[00773]                   
[00774]                   L41:
[00775] 0283: 66 66 6c 75   db 'fflush'    ;----- cgdefs
              73 68 
[00776] 0289: 00          	db	$00    ;----- cgdefb
[00777]                   
[00778]                   L42:
[00779]                   	;----- cgldlab
[00780] 028a: d4 00 00    	 				call epush16
[00781] 028d: 02 83       	 				  dw  L41
[00782]                   	;----- cgcall
[00783] 028f: d4 00 58    	          call  Cpr
[00784]                   	;----- cgstack
[00785] 0292: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00786] 0295: 00 02       	          dw  2  ;--- offset
[00787] 0297: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00788]                   	;---- queue dpush
[00789]                   	;----- push + pop data not required, data remains unchanged in RA
[00790]                   	;----- end stmt ------
[00791]                   	;----- begin stmt ------
[00792]                   	;----- begin if
[00793]                   	;----- cgldlw
[00794] 029a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00795] 029d: ff fe       	          dw  -2  ;--- offset
[00796]                   	;----- cgcall
[00797] 029f: d4 00 00    	          call  Cfflush
[00798]                   	;----- cgstack
[00799] 02a2: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00800] 02a5: 00 02       	          dw  2  ;--- offset
[00801] 02a7: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00802]                   	;---- queue dpush
[00803]                   	;------ commit push
[00804]                   	;----- cgpushd
[00805] 02aa: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00806]                   	;----- cglit
[00807] 02ad: d4 00 00    	 				call epush16
[00808] 02b0: 00 00       	 				  dw 0
[00809]                   	;----- queue_cmp
[00810]                   	;----- genbrfalse
[00811]                   	;----- genbranch
[00812]                   	;----- cgbrlt
[00813]                   	;----- cglt
[00814] 02b2: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[00815]                   
[00816]                   	;----- cgbrcond
[00817] 02b5: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00818] 02b8: 9a          	 				 ghi   ra            ; get MSB from result
[00819] 02b9: 52          	 				 str   r2            ; save in M(X)
[00820] 02ba: 8a          	 				 glo   ra            ; get LSB from result
[00821] 02bb: f1          	 				 or                  ; D = MSB | LSB
[00822] 02bc: ca 02 c2    	lbnz	L44
[00823] 02bf: c0 02 de    	lbr	L43
[00824]                   
[00825]                   L44:
[00826]                   	;----- begin stmt ------
[00827]                   	;---- queue lbr L46
[00828]                   	;----- cgjump
[00829] 02c2: c0 02 ce    	 				  lbr	L46
[00830]                   
[00831]                   L45:
[00832] 02c5: 66 66 6c 75   db 'fflush-1'    ;----- cgdefs
              73 68 2d 31 
[00833] 02cd: 00          	db	$00    ;----- cgdefb
[00834]                   
[00835]                   L46:
[00836]                   	;----- cgldlab
[00837] 02ce: d4 00 00    	 				call epush16
[00838] 02d1: 02 c5       	 				  dw  L45
[00839]                   	;----- cgcall
[00840] 02d3: d4 00 08    	          call  Cfail
[00841]                   	;----- cgstack
[00842] 02d6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00843] 02d9: 00 02       	          dw  2  ;--- offset
[00844] 02db: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00845]                   	;---- queue dpush
[00846]                   	;----- push + pop data not required, data remains unchanged in RA
[00847]                   	;----- end stmt ------
[00848]                   
[00849]                   L43:
[00850]                   	;----- end if
[00851]                   	;----- end stmt ------
[00852]                   	;----- begin stmt ------
[00853]                   	;----- cgldlw
[00854] 02de: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00855] 02e1: ff fe       	          dw  -2  ;--- offset
[00856]                   	;----- cgcall
[00857] 02e3: d4 00 00    	          call  Cfclose
[00858]                   	;----- cgstack
[00859] 02e6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00860] 02e9: 00 02       	          dw  2  ;--- offset
[00861] 02eb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00862]                   	;---- queue dpush
[00863]                   	;----- push + pop data not required, data remains unchanged in RA
[00864]                   	;----- end stmt ------
[00865]                   	;----- begin stmt ------
[00866]                   	;----- begin if
[00867]                   	;---- queue lbr L48
[00868]                   	;----- cgjump
[00869] 02ee: c0 02 fc    	 				  lbr	L48
[00870]                   
[00871]                   L47:
[00872] 02f1: 66 74 65 73   db 'ftest4.tmp'    ;----- cgdefs
              74 34 2e 74 
              6d 70 
[00873] 02fb: 00          	db	$00    ;----- cgdefb
[00874]                   
[00875]                   L48:
[00876]                   	;---- queue lbr L50
[00877]                   	;----- cgjump
[00878] 02fc: c0 03 01    	 				  lbr	L50
[00879]                   
[00880]                   L49:
[00881] 02ff: 72            db 'r'    ;----- cgdefs
[00882] 0300: 00          	db	$00    ;----- cgdefb
[00883]                   
[00884]                   L50:
[00885]                   	;----- cgldlab
[00886] 0301: d4 00 00    	 				call epush16
[00887] 0304: 02 ff       	 				  dw  L49
[00888]                   	;----- cgldlab
[00889] 0306: d4 00 00    	 				call epush16
[00890] 0309: 02 f1       	 				  dw  L47
[00891]                   	;----- cgcall
[00892] 030b: d4 00 00    	          call  Cfopen
[00893]                   	;----- cgstack
[00894] 030e: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00895] 0311: 00 04       	          dw  4  ;--- offset
[00896] 0313: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00897]                   	;---- queue dpush
[00898]                   	;------ commit push
[00899]                   	;----- cgpushd
[00900] 0316: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00901]                   	;----- cgstorlw
[00902] 0319: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00903] 031c: ff fe       	          dw  -2  ;--- offset
[00904]                   	;----- cglit
[00905] 031e: d4 00 00    	 				call epush16
[00906] 0321: 00 00       	 				  dw 0
[00907]                   	;----- queue_cmp
[00908]                   	;----- genbrfalse
[00909]                   	;----- genbranch
[00910]                   	;----- cgbreq
[00911]                   	;----- cgeq
[00912] 0323: d4 00 00    	          call  eq16				   ; compare TOS == SOS on Expression Stack
[00913]                   
[00914]                   	;----- cgbrcond
[00915] 0326: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[00916] 0329: 9a          	 				 ghi   ra            ; get MSB from result
[00917] 032a: 52          	 				 str   r2            ; save in M(X)
[00918] 032b: 8a          	 				 glo   ra            ; get LSB from result
[00919] 032c: f1          	 				 or                  ; D = MSB | LSB
[00920] 032d: ca 03 33    	lbnz	L52
[00921] 0330: c0 03 51    	lbr	L51
[00922]                   
[00923]                   L52:
[00924]                   	;----- begin stmt ------
[00925]                   	;----- begin stmt ------
[00926]                   	;---- queue lbr L54
[00927]                   	;----- cgjump
[00928] 0333: c0 03 3e    	 				  lbr	L54
[00929]                   
[00930]                   L53:
[00931] 0336: 66 6f 70 65   db 'fopen-2'    ;----- cgdefs
              6e 2d 32 
[00932] 033d: 00          	db	$00    ;----- cgdefb
[00933]                   
[00934]                   L54:
[00935]                   	;----- cgldlab
[00936] 033e: d4 00 00    	 				call epush16
[00937] 0341: 03 36       	 				  dw  L53
[00938]                   	;----- cgcall
[00939] 0343: d4 00 08    	          call  Cfail
[00940]                   	;----- cgstack
[00941] 0346: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00942] 0349: 00 02       	          dw  2  ;--- offset
[00943] 034b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00944]                   	;---- queue dpush
[00945]                   	;----- push + pop data not required, data remains unchanged in RA
[00946]                   	;----- end stmt ------
[00947]                   	;----- begin stmt ------
[00948]                   	;----- begin return
[00949]                   	;---- queue lbr L7
[00950]                   	;----- end return
[00951]                   	;----- end stmt ------
[00952]                   	;----- end stmt ------
[00953]                   	;----- cgjump
[00954] 034e: c0 0b 99    	 				  lbr	L7
[00955]                   
[00956]                   L51:
[00957]                   	;----- end if
[00958]                   	;----- end stmt ------
[00959]                   	;----- begin stmt ------
[00960]                   	;---- queue lbr L56
[00961]                   	;----- cgjump
[00962] 0351: c0 03 5a    	 				  lbr	L56
[00963]                   
[00964]                   L55:
[00965] 0354: 6c 73 65 65   db 'lseek'    ;----- cgdefs
              6b 
[00966] 0359: 00          	db	$00    ;----- cgdefb
[00967]                   
[00968]                   L56:
[00969]                   	;----- cgldlab
[00970] 035a: d4 00 00    	 				call epush16
[00971] 035d: 03 54       	 				  dw  L55
[00972]                   	;----- cgcall
[00973] 035f: d4 00 58    	          call  Cpr
[00974]                   	;----- cgstack
[00975] 0362: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00976] 0365: 00 02       	          dw  2  ;--- offset
[00977] 0367: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00978]                   	;---- queue dpush
[00979]                   	;----- push + pop data not required, data remains unchanged in RA
[00980]                   	;----- end stmt ------
[00981]                   	;----- begin stmt ------
[00982]                   	;----- cgldlw
[00983] 036a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[00984] 036d: ff fe       	          dw  -2  ;--- offset
[00985]                   	;----- cgcall
[00986] 036f: d4 00 00    	          call  Cfileno
[00987]                   	;----- cgstack
[00988] 0372: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[00989] 0375: 00 02       	          dw  2  ;--- offset
[00990] 0377: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[00991]                   	;---- queue dpush
[00992]                   	;------ commit push
[00993]                   	;----- cgpushd
[00994] 037a: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[00995]                   	;----- cgstorlw
[00996] 037d: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[00997] 0380: ff fa       	          dw  -6  ;--- offset
[00998]                   	;----- cgpopd
[00999] 0382: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01000]                   	;----- end stmt ------
[01001]                   	;----- begin stmt ------
[01002]                   	;----- begin if
[01003]                   	;----- cglit
[01004] 0385: d4 00 00    	 				call epush16
[01005] 0388: 00 02       	 				  dw 2
[01006]                   	;----- cglit
[01007] 038a: d4 00 00    	 				call epush16
[01008] 038d: ff ff       	 				  dw -1
[01009]                   	;----- cglit
[01010] 038f: d4 00 00    	 				call epush16
[01011] 0392: ff ff       	 				  dw -1
[01012]                   	;----- cgldlw
[01013] 0394: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01014] 0397: ff fa       	          dw  -6  ;--- offset
[01015]                   	;----- cgcall
[01016] 0399: d4 00 00    	          call  Clseek
[01017]                   	;----- cgstack
[01018] 039c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01019] 039f: 00 08       	          dw  8  ;--- offset
[01020] 03a1: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01021]                   	;---- queue dpush
[01022]                   	;------ commit push
[01023]                   	;----- cgpushd
[01024] 03a4: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01025]                   	;----- cglit
[01026] 03a7: d4 00 00    	 				call epush16
[01027] 03aa: 00 00       	 				  dw 0
[01028]                   	;----- queue_cmp
[01029]                   	;----- genbrfalse
[01030]                   	;----- genbranch
[01031]                   	;----- cgbrlt
[01032]                   	;----- cglt
[01033] 03ac: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01034]                   
[01035]                   	;----- cgbrcond
[01036] 03af: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01037] 03b2: 9a          	 				 ghi   ra            ; get MSB from result
[01038] 03b3: 52          	 				 str   r2            ; save in M(X)
[01039] 03b4: 8a          	 				 glo   ra            ; get LSB from result
[01040] 03b5: f1          	 				 or                  ; D = MSB | LSB
[01041] 03b6: ca 03 bc    	lbnz	L58
[01042] 03b9: c0 03 da    	lbr	L57
[01043]                   
[01044]                   L58:
[01045]                   	;----- begin stmt ------
[01046]                   	;---- queue lbr L60
[01047]                   	;----- cgjump
[01048] 03bc: c0 03 c7    	 				  lbr	L60
[01049]                   
[01050]                   L59:
[01051] 03bf: 6c 73 65 65   db 'lseek-1'    ;----- cgdefs
              6b 2d 31 
[01052] 03c6: 00          	db	$00    ;----- cgdefb
[01053]                   
[01054]                   L60:
[01055]                   	;----- cgldlab
[01056] 03c7: d4 00 00    	 				call epush16
[01057] 03ca: 03 bf       	 				  dw  L59
[01058]                   	;----- cgcall
[01059] 03cc: d4 00 08    	          call  Cfail
[01060]                   	;----- cgstack
[01061] 03cf: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01062] 03d2: 00 02       	          dw  2  ;--- offset
[01063] 03d4: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01064]                   	;---- queue dpush
[01065]                   	;----- push + pop data not required, data remains unchanged in RA
[01066]                   	;----- end stmt ------
[01067]                   	;---- queue lbr L61
[01068]                   	;----- cgjump
[01069] 03d7: c0 04 3d    	 				  lbr	L61
[01070]                   
[01071]                   L57:
[01072]                   	;----- begin stmt ------
[01073]                   	;----- begin stmt ------
[01074]                   	;----- cgldlw
[01075] 03da: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01076] 03dd: ff fe       	          dw  -2  ;--- offset
[01077]                   	;----- cgcall
[01078] 03df: d4 00 00    	          call  Cfgetc
[01079]                   	;----- cgstack
[01080] 03e2: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01081] 03e5: 00 02       	          dw  2  ;--- offset
[01082] 03e7: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01083]                   	;---- queue dpush
[01084]                   	;------ commit push
[01085]                   	;----- cgpushd
[01086] 03ea: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01087]                   	;----- cgstorlb
[01088] 03ed: d4 00 00    	          call  lstor8       ; store value from ES in local variable
[01089] 03f0: ff f6       	          dw  -10  ;--- offset
[01090]                   	;----- cgpopd
[01091] 03f2: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01092]                   	;----- end stmt ------
[01093]                   	;----- begin stmt ------
[01094]                   	;----- begin if
[01095]                   	;----- cglit
[01096] 03f5: d4 00 00    	 				call epush16
[01097] 03f8: 00 5a       	 				  dw 90
[01098]                   	;----- cgldlb
[01099] 03fa: d4 00 00    	          call  lpush8        ; push value of local variable on ES
[01100] 03fd: ff f6       	          dw  -10  ;--- offset
[01101]                   	;----- queue_cmp
[01102]                   	;----- genbrfalse
[01103]                   	;----- genbranch
[01104]                   	;----- cgbrne
[01105]                   	;----- cgne
[01106] 03ff: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01107]                   
[01108]                   	;----- cgbrcond
[01109] 0402: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01110] 0405: 9a          	 				 ghi   ra            ; get MSB from result
[01111] 0406: 52          	 				 str   r2            ; save in M(X)
[01112] 0407: 8a          	 				 glo   ra            ; get LSB from result
[01113] 0408: f1          	 				 or                  ; D = MSB | LSB
[01114] 0409: ca 04 0f    	lbnz	L63
[01115] 040c: c0 04 3d    	lbr	L62
[01116]                   
[01117]                   L63:
[01118]                   	;----- begin stmt ------
[01119]                   	;----- begin stmt ------
[01120]                   	;---- queue lbr L65
[01121]                   	;----- cgjump
[01122] 040f: c0 04 1a    	 				  lbr	L65
[01123]                   
[01124]                   L64:
[01125] 0412: 6c 73 65 65   db 'lseek-2'    ;----- cgdefs
              6b 2d 32 
[01126] 0419: 00          	db	$00    ;----- cgdefb
[01127]                   
[01128]                   L65:
[01129]                   	;----- cgldlab
[01130] 041a: d4 00 00    	 				call epush16
[01131] 041d: 04 12       	 				  dw  L64
[01132]                   	;----- cgcall
[01133] 041f: d4 00 08    	          call  Cfail
[01134]                   	;----- cgstack
[01135] 0422: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01136] 0425: 00 02       	          dw  2  ;--- offset
[01137] 0427: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01138]                   	;---- queue dpush
[01139]                   	;----- push + pop data not required, data remains unchanged in RA
[01140]                   	;----- end stmt ------
[01141]                   	;----- begin stmt ------
[01142]                   	;----- cgldlw
[01143] 042a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01144] 042d: ff fe       	          dw  -2  ;--- offset
[01145]                   	;----- cgcall
[01146] 042f: d4 00 00    	          call  Cfclose
[01147]                   	;----- cgstack
[01148] 0432: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01149] 0435: 00 02       	          dw  2  ;--- offset
[01150] 0437: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01151]                   	;---- queue dpush
[01152]                   	;----- push + pop data not required, data remains unchanged in RA
[01153]                   	;----- end stmt ------
[01154]                   	;----- begin stmt ------
[01155]                   	;----- begin return
[01156]                   	;---- queue lbr L7
[01157]                   	;----- end return
[01158]                   	;----- end stmt ------
[01159]                   	;----- end stmt ------
[01160]                   	;----- cgjump
[01161] 043a: c0 0b 99    	 				  lbr	L7
[01162]                   
[01163]                   L62:
[01164]                   	;----- end if
[01165]                   	;----- end stmt ------
[01166]                   	;----- end stmt ------
[01167]                   
[01168]                   L61:
[01169]                   	;----- end if
[01170]                   	;----- end stmt ------
[01171]                   	;----- begin stmt ------
[01172]                   	;----- begin if
[01173]                   	;----- cglit
[01174] 043d: d4 00 00    	 				call epush16
[01175] 0440: 00 00       	 				  dw 0
[01176]                   	;----- cglit
[01177] 0442: d4 00 00    	 				call epush16
[01178] 0445: 00 00       	 				  dw 0
[01179]                   	;----- cglit
[01180] 0447: d4 00 00    	 				call epush16
[01181] 044a: 00 00       	 				  dw 0
[01182]                   	;----- cgldlw
[01183] 044c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01184] 044f: ff fa       	          dw  -6  ;--- offset
[01185]                   	;----- cgcall
[01186] 0451: d4 00 00    	          call  Clseek
[01187]                   	;----- cgstack
[01188] 0454: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01189] 0457: 00 08       	          dw  8  ;--- offset
[01190] 0459: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01191]                   	;---- queue dpush
[01192]                   	;------ commit push
[01193]                   	;----- cgpushd
[01194] 045c: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01195]                   	;----- cglit
[01196] 045f: d4 00 00    	 				call epush16
[01197] 0462: 00 00       	 				  dw 0
[01198]                   	;----- queue_cmp
[01199]                   	;----- genbrfalse
[01200]                   	;----- genbranch
[01201]                   	;----- cgbrlt
[01202]                   	;----- cglt
[01203] 0464: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01204]                   
[01205]                   	;----- cgbrcond
[01206] 0467: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01207] 046a: 9a          	 				 ghi   ra            ; get MSB from result
[01208] 046b: 52          	 				 str   r2            ; save in M(X)
[01209] 046c: 8a          	 				 glo   ra            ; get LSB from result
[01210] 046d: f1          	 				 or                  ; D = MSB | LSB
[01211] 046e: ca 04 74    	lbnz	L67
[01212] 0471: c0 04 92    	lbr	L66
[01213]                   
[01214]                   L67:
[01215]                   	;----- begin stmt ------
[01216]                   	;---- queue lbr L69
[01217]                   	;----- cgjump
[01218] 0474: c0 04 7f    	 				  lbr	L69
[01219]                   
[01220]                   L68:
[01221] 0477: 6c 73 65 65   db 'lseek-3'    ;----- cgdefs
              6b 2d 33 
[01222] 047e: 00          	db	$00    ;----- cgdefb
[01223]                   
[01224]                   L69:
[01225]                   	;----- cgldlab
[01226] 047f: d4 00 00    	 				call epush16
[01227] 0482: 04 77       	 				  dw  L68
[01228]                   	;----- cgcall
[01229] 0484: d4 00 08    	          call  Cfail
[01230]                   	;----- cgstack
[01231] 0487: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01232] 048a: 00 02       	          dw  2  ;--- offset
[01233] 048c: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01234]                   	;---- queue dpush
[01235]                   	;----- push + pop data not required, data remains unchanged in RA
[01236]                   	;----- end stmt ------
[01237]                   	;---- queue lbr L70
[01238]                   	;----- cgjump
[01239] 048f: c0 04 e2    	 				  lbr	L70
[01240]                   
[01241]                   L66:
[01242]                   	;----- begin stmt ------
[01243]                   	;----- begin stmt ------
[01244]                   	;----- cgldlw
[01245] 0492: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01246] 0495: ff fe       	          dw  -2  ;--- offset
[01247]                   	;----- cgcall
[01248] 0497: d4 00 00    	          call  Cfgetc
[01249]                   	;----- cgstack
[01250] 049a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01251] 049d: 00 02       	          dw  2  ;--- offset
[01252] 049f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01253]                   	;---- queue dpush
[01254]                   	;------ commit push
[01255]                   	;----- cgpushd
[01256] 04a2: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01257]                   	;----- cgstorlb
[01258] 04a5: d4 00 00    	          call  lstor8       ; store value from ES in local variable
[01259] 04a8: ff f6       	          dw  -10  ;--- offset
[01260]                   	;----- cgpopd
[01261] 04aa: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01262]                   	;----- end stmt ------
[01263]                   	;----- begin stmt ------
[01264]                   	;----- begin if
[01265]                   	;----- cglit
[01266] 04ad: d4 00 00    	 				call epush16
[01267] 04b0: 00 41       	 				  dw 65
[01268]                   	;----- cgldlb
[01269] 04b2: d4 00 00    	          call  lpush8        ; push value of local variable on ES
[01270] 04b5: ff f6       	          dw  -10  ;--- offset
[01271]                   	;----- queue_cmp
[01272]                   	;----- genbrfalse
[01273]                   	;----- genbranch
[01274]                   	;----- cgbrne
[01275]                   	;----- cgne
[01276] 04b7: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01277]                   
[01278]                   	;----- cgbrcond
[01279] 04ba: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01280] 04bd: 9a          	 				 ghi   ra            ; get MSB from result
[01281] 04be: 52          	 				 str   r2            ; save in M(X)
[01282] 04bf: 8a          	 				 glo   ra            ; get LSB from result
[01283] 04c0: f1          	 				 or                  ; D = MSB | LSB
[01284] 04c1: ca 04 c7    	lbnz	L72
[01285] 04c4: c0 04 e2    	lbr	L71
[01286]                   
[01287]                   L72:
[01288]                   	;----- begin stmt ------
[01289]                   	;---- queue lbr L74
[01290]                   	;----- cgjump
[01291] 04c7: c0 04 d2    	 				  lbr	L74
[01292]                   
[01293]                   L73:
[01294] 04ca: 6c 73 65 65   db 'lseek-4'    ;----- cgdefs
              6b 2d 34 
[01295] 04d1: 00          	db	$00    ;----- cgdefb
[01296]                   
[01297]                   L74:
[01298]                   	;----- cgldlab
[01299] 04d2: d4 00 00    	 				call epush16
[01300] 04d5: 04 ca       	 				  dw  L73
[01301]                   	;----- cgcall
[01302] 04d7: d4 00 08    	          call  Cfail
[01303]                   	;----- cgstack
[01304] 04da: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01305] 04dd: 00 02       	          dw  2  ;--- offset
[01306] 04df: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01307]                   	;---- queue dpush
[01308]                   	;----- push + pop data not required, data remains unchanged in RA
[01309]                   	;----- end stmt ------
[01310]                   
[01311]                   L71:
[01312]                   	;----- end if
[01313]                   	;----- end stmt ------
[01314]                   	;----- end stmt ------
[01315]                   
[01316]                   L70:
[01317]                   	;----- end if
[01318]                   	;----- end stmt ------
[01319]                   	;----- begin stmt ------
[01320]                   	;----- begin if
[01321]                   	;----- cglit
[01322] 04e2: d4 00 00    	 				call epush16
[01323] 04e5: 00 01       	 				  dw 1
[01324]                   	;----- cglit
[01325] 04e7: d4 00 00    	 				call epush16
[01326] 04ea: 00 0c       	 				  dw 12
[01327]                   	;----- cglit
[01328] 04ec: d4 00 00    	 				call epush16
[01329] 04ef: 00 00       	 				  dw 0
[01330]                   	;----- cgldlw
[01331] 04f1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01332] 04f4: ff fa       	          dw  -6  ;--- offset
[01333]                   	;----- cgcall
[01334] 04f6: d4 00 00    	          call  Clseek
[01335]                   	;----- cgstack
[01336] 04f9: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01337] 04fc: 00 08       	          dw  8  ;--- offset
[01338] 04fe: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01339]                   	;---- queue dpush
[01340]                   	;------ commit push
[01341]                   	;----- cgpushd
[01342] 0501: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01343]                   	;----- cglit
[01344] 0504: d4 00 00    	 				call epush16
[01345] 0507: 00 00       	 				  dw 0
[01346]                   	;----- queue_cmp
[01347]                   	;----- genbrfalse
[01348]                   	;----- genbranch
[01349]                   	;----- cgbrlt
[01350]                   	;----- cglt
[01351] 0509: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01352]                   
[01353]                   	;----- cgbrcond
[01354] 050c: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01355] 050f: 9a          	 				 ghi   ra            ; get MSB from result
[01356] 0510: 52          	 				 str   r2            ; save in M(X)
[01357] 0511: 8a          	 				 glo   ra            ; get LSB from result
[01358] 0512: f1          	 				 or                  ; D = MSB | LSB
[01359] 0513: ca 05 19    	lbnz	L76
[01360] 0516: c0 05 37    	lbr	L75
[01361]                   
[01362]                   L76:
[01363]                   	;----- begin stmt ------
[01364]                   	;---- queue lbr L78
[01365]                   	;----- cgjump
[01366] 0519: c0 05 24    	 				  lbr	L78
[01367]                   
[01368]                   L77:
[01369] 051c: 6c 73 65 65   db 'lseek-5'    ;----- cgdefs
              6b 2d 35 
[01370] 0523: 00          	db	$00    ;----- cgdefb
[01371]                   
[01372]                   L78:
[01373]                   	;----- cgldlab
[01374] 0524: d4 00 00    	 				call epush16
[01375] 0527: 05 1c       	 				  dw  L77
[01376]                   	;----- cgcall
[01377] 0529: d4 00 08    	          call  Cfail
[01378]                   	;----- cgstack
[01379] 052c: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01380] 052f: 00 02       	          dw  2  ;--- offset
[01381] 0531: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01382]                   	;---- queue dpush
[01383]                   	;----- push + pop data not required, data remains unchanged in RA
[01384]                   	;----- end stmt ------
[01385]                   	;---- queue lbr L79
[01386]                   	;----- cgjump
[01387] 0534: c0 05 87    	 				  lbr	L79
[01388]                   
[01389]                   L75:
[01390]                   	;----- begin stmt ------
[01391]                   	;----- begin stmt ------
[01392]                   	;----- cgldlw
[01393] 0537: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01394] 053a: ff fe       	          dw  -2  ;--- offset
[01395]                   	;----- cgcall
[01396] 053c: d4 00 00    	          call  Cfgetc
[01397]                   	;----- cgstack
[01398] 053f: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01399] 0542: 00 02       	          dw  2  ;--- offset
[01400] 0544: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01401]                   	;---- queue dpush
[01402]                   	;------ commit push
[01403]                   	;----- cgpushd
[01404] 0547: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01405]                   	;----- cgstorlb
[01406] 054a: d4 00 00    	          call  lstor8       ; store value from ES in local variable
[01407] 054d: ff f6       	          dw  -10  ;--- offset
[01408]                   	;----- cgpopd
[01409] 054f: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01410]                   	;----- end stmt ------
[01411]                   	;----- begin stmt ------
[01412]                   	;----- begin if
[01413]                   	;----- cglit
[01414] 0552: d4 00 00    	 				call epush16
[01415] 0555: 00 4e       	 				  dw 78
[01416]                   	;----- cgldlb
[01417] 0557: d4 00 00    	          call  lpush8        ; push value of local variable on ES
[01418] 055a: ff f6       	          dw  -10  ;--- offset
[01419]                   	;----- queue_cmp
[01420]                   	;----- genbrfalse
[01421]                   	;----- genbranch
[01422]                   	;----- cgbrne
[01423]                   	;----- cgne
[01424] 055c: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01425]                   
[01426]                   	;----- cgbrcond
[01427] 055f: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01428] 0562: 9a          	 				 ghi   ra            ; get MSB from result
[01429] 0563: 52          	 				 str   r2            ; save in M(X)
[01430] 0564: 8a          	 				 glo   ra            ; get LSB from result
[01431] 0565: f1          	 				 or                  ; D = MSB | LSB
[01432] 0566: ca 05 6c    	lbnz	L81
[01433] 0569: c0 05 87    	lbr	L80
[01434]                   
[01435]                   L81:
[01436]                   	;----- begin stmt ------
[01437]                   	;---- queue lbr L83
[01438]                   	;----- cgjump
[01439] 056c: c0 05 77    	 				  lbr	L83
[01440]                   
[01441]                   L82:
[01442] 056f: 6c 73 65 65   db 'lseek-6'    ;----- cgdefs
              6b 2d 36 
[01443] 0576: 00          	db	$00    ;----- cgdefb
[01444]                   
[01445]                   L83:
[01446]                   	;----- cgldlab
[01447] 0577: d4 00 00    	 				call epush16
[01448] 057a: 05 6f       	 				  dw  L82
[01449]                   	;----- cgcall
[01450] 057c: d4 00 08    	          call  Cfail
[01451]                   	;----- cgstack
[01452] 057f: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01453] 0582: 00 02       	          dw  2  ;--- offset
[01454] 0584: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01455]                   	;---- queue dpush
[01456]                   	;----- push + pop data not required, data remains unchanged in RA
[01457]                   	;----- end stmt ------
[01458]                   
[01459]                   L80:
[01460]                   	;----- end if
[01461]                   	;----- end stmt ------
[01462]                   	;----- end stmt ------
[01463]                   
[01464]                   L79:
[01465]                   	;----- end if
[01466]                   	;----- end stmt ------
[01467]                   	;----- begin stmt ------
[01468]                   	;----- cgldga
[01469] 0587: d4 00 00    	 				call epush16
[01470] 058a: 00 04       	 				  dw Cfilpos
[01471]                   	;----- cgstorlw
[01472] 058c: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[01473] 058f: ff f8       	          dw  -8  ;--- offset
[01474]                   	;----- cgpopd
[01475] 0591: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01476]                   	;----- end stmt ------
[01477]                   	;----- begin stmt ------
[01478]                   	;---- queue lbr L85
[01479]                   	;----- cgjump
[01480] 0594: c0 05 9f    	 				  lbr	L85
[01481]                   
[01482]                   L84:
[01483] 0597: 66 67 65 74   db 'fgetpos'    ;----- cgdefs
              70 6f 73 
[01484] 059e: 00          	db	$00    ;----- cgdefb
[01485]                   
[01486]                   L85:
[01487]                   	;----- cgldlab
[01488] 059f: d4 00 00    	 				call epush16
[01489] 05a2: 05 97       	 				  dw  L84
[01490]                   	;----- cgcall
[01491] 05a4: d4 00 58    	          call  Cpr
[01492]                   	;----- cgstack
[01493] 05a7: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01494] 05aa: 00 02       	          dw  2  ;--- offset
[01495] 05ac: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01496]                   	;---- queue dpush
[01497]                   	;----- push + pop data not required, data remains unchanged in RA
[01498]                   	;----- end stmt ------
[01499]                   	;----- begin stmt ------
[01500]                   	;----- begin if
[01501]                   	;----- cgldlw
[01502] 05af: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01503] 05b2: ff f8       	          dw  -8  ;--- offset
[01504]                   	;----- cgldlw
[01505] 05b4: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01506] 05b7: ff fe       	          dw  -2  ;--- offset
[01507]                   	;----- cgcall
[01508] 05b9: d4 00 00    	          call  Cfgetpos
[01509]                   	;----- cgstack
[01510] 05bc: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01511] 05bf: 00 04       	          dw  4  ;--- offset
[01512] 05c1: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01513]                   	;---- queue dpush
[01514]                   	;------ commit push
[01515]                   	;----- cgpushd
[01516] 05c4: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01517]                   	;----- cglit
[01518] 05c7: d4 00 00    	 				call epush16
[01519] 05ca: 00 00       	 				  dw 0
[01520]                   	;----- queue_cmp
[01521]                   	;----- genbrfalse
[01522]                   	;----- genbranch
[01523]                   	;----- cgbrlt
[01524]                   	;----- cglt
[01525] 05cc: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01526]                   
[01527]                   	;----- cgbrcond
[01528] 05cf: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01529] 05d2: 9a          	 				 ghi   ra            ; get MSB from result
[01530] 05d3: 52          	 				 str   r2            ; save in M(X)
[01531] 05d4: 8a          	 				 glo   ra            ; get LSB from result
[01532] 05d5: f1          	 				 or                  ; D = MSB | LSB
[01533] 05d6: ca 05 dc    	lbnz	L87
[01534] 05d9: c0 05 f9    	lbr	L86
[01535]                   
[01536]                   L87:
[01537]                   	;----- begin stmt ------
[01538]                   	;---- queue lbr L89
[01539]                   	;----- cgjump
[01540] 05dc: c0 05 e9    	 				  lbr	L89
[01541]                   
[01542]                   L88:
[01543] 05df: 66 67 65 74   db 'fgetpos-1'    ;----- cgdefs
              70 6f 73 2d 
              31 
[01544] 05e8: 00          	db	$00    ;----- cgdefb
[01545]                   
[01546]                   L89:
[01547]                   	;----- cgldlab
[01548] 05e9: d4 00 00    	 				call epush16
[01549] 05ec: 05 df       	 				  dw  L88
[01550]                   	;----- cgcall
[01551] 05ee: d4 00 08    	          call  Cfail
[01552]                   	;----- cgstack
[01553] 05f1: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01554] 05f4: 00 02       	          dw  2  ;--- offset
[01555] 05f6: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01556]                   	;---- queue dpush
[01557]                   	;----- push + pop data not required, data remains unchanged in RA
[01558]                   	;----- end stmt ------
[01559]                   
[01560]                   L86:
[01561]                   	;----- end if
[01562]                   	;----- end stmt ------
[01563]                   	;----- begin stmt ------
[01564]                   	;----- begin if
[01565]                   	;----- cgldlw
[01566] 05f9: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01567] 05fc: ff f8       	          dw  -8  ;--- offset
[01568]                   	;----- cgindw
[01569] 05fe: d4 00 00    	 				call deref16
[01570]                   	;----- cglit
[01571] 0601: d4 00 00    	 				call epush16
[01572] 0604: 00 00       	 				  dw 0
[01573]                   	;----- queue_cmp
[01574]                   	;----- genbrfalse
[01575]                   	;----- genbranch
[01576]                   	;----- cgbrne
[01577]                   	;----- cgne
[01578] 0606: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01579]                   
[01580]                   	;----- cgbrcond
[01581] 0609: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01582] 060c: 9a          	 				 ghi   ra            ; get MSB from result
[01583] 060d: 52          	 				 str   r2            ; save in M(X)
[01584] 060e: 8a          	 				 glo   ra            ; get LSB from result
[01585] 060f: f1          	 				 or                  ; D = MSB | LSB
[01586] 0610: ca 06 16    	lbnz	L91
[01587] 0613: c0 06 33    	lbr	L90
[01588]                   
[01589]                   L91:
[01590]                   	;----- begin stmt ------
[01591]                   	;---- queue lbr L93
[01592]                   	;----- cgjump
[01593] 0616: c0 06 23    	 				  lbr	L93
[01594]                   
[01595]                   L92:
[01596] 0619: 66 67 65 74   db 'fgetpos-2'    ;----- cgdefs
              70 6f 73 2d 
              32 
[01597] 0622: 00          	db	$00    ;----- cgdefb
[01598]                   
[01599]                   L93:
[01600]                   	;----- cgldlab
[01601] 0623: d4 00 00    	 				call epush16
[01602] 0626: 06 19       	 				  dw  L92
[01603]                   	;----- cgcall
[01604] 0628: d4 00 08    	          call  Cfail
[01605]                   	;----- cgstack
[01606] 062b: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01607] 062e: 00 02       	          dw  2  ;--- offset
[01608] 0630: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01609]                   	;---- queue dpush
[01610]                   	;----- push + pop data not required, data remains unchanged in RA
[01611]                   	;----- end stmt ------
[01612]                   
[01613]                   L90:
[01614]                   	;----- end if
[01615]                   	;----- end stmt ------
[01616]                   	;----- begin stmt ------
[01617]                   	;----- begin if
[01618]                   	;----- cglit
[01619] 0633: d4 00 00    	 				call epush16
[01620] 0636: 00 02       	 				  dw 2
[01621]                   	;----- cgldlw
[01622] 0638: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01623] 063b: ff f8       	          dw  -8  ;--- offset
[01624]                   	;----- cgadd
[01625] 063d: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01626]                   
[01627]                   	;----- cgindw
[01628] 0640: d4 00 00    	 				call deref16
[01629]                   	;----- cglit
[01630] 0643: d4 00 00    	 				call epush16
[01631] 0646: 00 0e       	 				  dw 14
[01632]                   	;----- queue_cmp
[01633]                   	;----- genbrfalse
[01634]                   	;----- genbranch
[01635]                   	;----- cgbrne
[01636]                   	;----- cgne
[01637] 0648: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01638]                   
[01639]                   	;----- cgbrcond
[01640] 064b: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01641] 064e: 9a          	 				 ghi   ra            ; get MSB from result
[01642] 064f: 52          	 				 str   r2            ; save in M(X)
[01643] 0650: 8a          	 				 glo   ra            ; get LSB from result
[01644] 0651: f1          	 				 or                  ; D = MSB | LSB
[01645] 0652: ca 06 58    	lbnz	L95
[01646] 0655: c0 06 75    	lbr	L94
[01647]                   
[01648]                   L95:
[01649]                   	;----- begin stmt ------
[01650]                   	;---- queue lbr L97
[01651]                   	;----- cgjump
[01652] 0658: c0 06 65    	 				  lbr	L97
[01653]                   
[01654]                   L96:
[01655] 065b: 66 67 65 74   db 'fgetpos-3'    ;----- cgdefs
              70 6f 73 2d 
              33 
[01656] 0664: 00          	db	$00    ;----- cgdefb
[01657]                   
[01658]                   L97:
[01659]                   	;----- cgldlab
[01660] 0665: d4 00 00    	 				call epush16
[01661] 0668: 06 5b       	 				  dw  L96
[01662]                   	;----- cgcall
[01663] 066a: d4 00 08    	          call  Cfail
[01664]                   	;----- cgstack
[01665] 066d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01666] 0670: 00 02       	          dw  2  ;--- offset
[01667] 0672: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01668]                   	;---- queue dpush
[01669]                   	;----- push + pop data not required, data remains unchanged in RA
[01670]                   	;----- end stmt ------
[01671]                   
[01672]                   L94:
[01673]                   	;----- end if
[01674]                   	;----- end stmt ------
[01675]                   	;----- begin stmt ------
[01676]                   	;---- queue lbr L99
[01677]                   	;----- cgjump
[01678] 0675: c0 06 7e    	 				  lbr	L99
[01679]                   
[01680]                   L98:
[01681] 0678: 66 74 65 6c   db 'ftell'    ;----- cgdefs
              6c 
[01682] 067d: 00          	db	$00    ;----- cgdefb
[01683]                   
[01684]                   L99:
[01685]                   	;----- cgldlab
[01686] 067e: d4 00 00    	 				call epush16
[01687] 0681: 06 78       	 				  dw  L98
[01688]                   	;----- cgcall
[01689] 0683: d4 00 58    	          call  Cpr
[01690]                   	;----- cgstack
[01691] 0686: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01692] 0689: 00 02       	          dw  2  ;--- offset
[01693] 068b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01694]                   	;---- queue dpush
[01695]                   	;----- push + pop data not required, data remains unchanged in RA
[01696]                   	;----- end stmt ------
[01697]                   	;----- begin stmt ------
[01698]                   	;----- begin if
[01699]                   	;----- cgldlw
[01700] 068e: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01701] 0691: ff fe       	          dw  -2  ;--- offset
[01702]                   	;----- cgcall
[01703] 0693: d4 00 00    	          call  Cftell
[01704]                   	;----- cgstack
[01705] 0696: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01706] 0699: 00 02       	          dw  2  ;--- offset
[01707] 069b: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01708]                   	;---- queue dpush
[01709]                   	;------ commit push
[01710]                   	;----- cgpushd
[01711] 069e: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01712]                   	;----- cglit
[01713] 06a1: d4 00 00    	 				call epush16
[01714] 06a4: 00 0e       	 				  dw 14
[01715]                   	;----- queue_cmp
[01716]                   	;----- genbrfalse
[01717]                   	;----- genbranch
[01718]                   	;----- cgbrne
[01719]                   	;----- cgne
[01720] 06a6: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01721]                   
[01722]                   	;----- cgbrcond
[01723] 06a9: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01724] 06ac: 9a          	 				 ghi   ra            ; get MSB from result
[01725] 06ad: 52          	 				 str   r2            ; save in M(X)
[01726] 06ae: 8a          	 				 glo   ra            ; get LSB from result
[01727] 06af: f1          	 				 or                  ; D = MSB | LSB
[01728] 06b0: ca 06 b6    	lbnz	L101
[01729] 06b3: c0 06 d1    	lbr	L100
[01730]                   
[01731]                   L101:
[01732]                   	;----- begin stmt ------
[01733]                   	;---- queue lbr L103
[01734]                   	;----- cgjump
[01735] 06b6: c0 06 c1    	 				  lbr	L103
[01736]                   
[01737]                   L102:
[01738] 06b9: 66 74 65 6c   db 'ftell-1'    ;----- cgdefs
              6c 2d 31 
[01739] 06c0: 00          	db	$00    ;----- cgdefb
[01740]                   
[01741]                   L103:
[01742]                   	;----- cgldlab
[01743] 06c1: d4 00 00    	 				call epush16
[01744] 06c4: 06 b9       	 				  dw  L102
[01745]                   	;----- cgcall
[01746] 06c6: d4 00 08    	          call  Cfail
[01747]                   	;----- cgstack
[01748] 06c9: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01749] 06cc: 00 02       	          dw  2  ;--- offset
[01750] 06ce: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01751]                   	;---- queue dpush
[01752]                   	;----- push + pop data not required, data remains unchanged in RA
[01753]                   	;----- end stmt ------
[01754]                   
[01755]                   L100:
[01756]                   	;----- end if
[01757]                   	;----- end stmt ------
[01758]                   	;----- begin stmt ------
[01759]                   	;---- queue lbr L105
[01760]                   	;----- cgjump
[01761] 06d1: c0 06 dc    	 				  lbr	L105
[01762]                   
[01763]                   L104:
[01764] 06d4: 66 73 65 74   db 'fsetpos'    ;----- cgdefs
              70 6f 73 
[01765] 06db: 00          	db	$00    ;----- cgdefb
[01766]                   
[01767]                   L105:
[01768]                   	;----- cgldlab
[01769] 06dc: d4 00 00    	 				call epush16
[01770] 06df: 06 d4       	 				  dw  L104
[01771]                   	;----- cgcall
[01772] 06e1: d4 00 58    	          call  Cpr
[01773]                   	;----- cgstack
[01774] 06e4: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01775] 06e7: 00 02       	          dw  2  ;--- offset
[01776] 06e9: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01777]                   	;---- queue dpush
[01778]                   	;----- push + pop data not required, data remains unchanged in RA
[01779]                   	;----- end stmt ------
[01780]                   	;----- begin stmt ------
[01781]                   	;----- cglit
[01782] 06ec: d4 00 00    	 				call epush16
[01783] 06ef: 00 02       	 				  dw 2
[01784]                   	;----- cgldlw
[01785] 06f1: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01786] 06f4: ff f8       	          dw  -8  ;--- offset
[01787]                   	;----- cgadd
[01788] 06f6: d4 00 00    	          call  add16				 ; add TOS and SOS on Expression Stack
[01789]                   
[01790]                   	;----- cglit
[01791] 06f9: d4 00 00    	 				call epush16
[01792] 06fc: 00 14       	 				  dw 20
[01793]                   	;----- cgpopptr
[01794] 06fe: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[01795] 0701: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[01796]                   	;----- cgstoriw
[01797] 0704: d4 00 00    	          call  pstor16       ; store value from ES in pointer variable
[01798]                   	;----- cgpopd
[01799] 0707: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01800]                   	;----- end stmt ------
[01801]                   	;----- begin stmt ------
[01802]                   	;----- cgldlw
[01803] 070a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01804] 070d: ff f8       	          dw  -8  ;--- offset
[01805]                   	;----- cglit
[01806] 070f: d4 00 00    	 				call epush16
[01807] 0712: 00 00       	 				  dw 0
[01808]                   	;----- cgpopptr
[01809] 0714: d4 00 00    	          call  swap16				 ; swap TOS and SOS on Expression Stack
[01810] 0717: d4 00 00    	          call  dpop16   		 ; get pointer from expression stack
[01811]                   	;----- cgstoriw
[01812] 071a: d4 00 00    	          call  pstor16       ; store value from ES in pointer variable
[01813]                   	;----- cgpopd
[01814] 071d: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[01815]                   	;----- end stmt ------
[01816]                   	;----- begin stmt ------
[01817]                   	;----- begin if
[01818]                   	;----- cgldlw
[01819] 0720: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01820] 0723: ff f8       	          dw  -8  ;--- offset
[01821]                   	;----- cgldlw
[01822] 0725: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01823] 0728: ff fe       	          dw  -2  ;--- offset
[01824]                   	;----- cgcall
[01825] 072a: d4 00 00    	          call  Cfsetpos
[01826]                   	;----- cgstack
[01827] 072d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01828] 0730: 00 04       	          dw  4  ;--- offset
[01829] 0732: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01830]                   	;---- queue dpush
[01831]                   	;------ commit push
[01832]                   	;----- cgpushd
[01833] 0735: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01834]                   	;----- cglit
[01835] 0738: d4 00 00    	 				call epush16
[01836] 073b: 00 00       	 				  dw 0
[01837]                   	;----- queue_cmp
[01838]                   	;----- genbrfalse
[01839]                   	;----- genbranch
[01840]                   	;----- cgbrlt
[01841]                   	;----- cglt
[01842] 073d: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01843]                   
[01844]                   	;----- cgbrcond
[01845] 0740: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01846] 0743: 9a          	 				 ghi   ra            ; get MSB from result
[01847] 0744: 52          	 				 str   r2            ; save in M(X)
[01848] 0745: 8a          	 				 glo   ra            ; get LSB from result
[01849] 0746: f1          	 				 or                  ; D = MSB | LSB
[01850] 0747: ca 07 4d    	lbnz	L107
[01851] 074a: c0 07 6a    	lbr	L106
[01852]                   
[01853]                   L107:
[01854]                   	;----- begin stmt ------
[01855]                   	;---- queue lbr L109
[01856]                   	;----- cgjump
[01857] 074d: c0 07 5a    	 				  lbr	L109
[01858]                   
[01859]                   L108:
[01860] 0750: 66 73 65 74   db 'fsetpos-1'    ;----- cgdefs
              70 6f 73 2d 
              31 
[01861] 0759: 00          	db	$00    ;----- cgdefb
[01862]                   
[01863]                   L109:
[01864]                   	;----- cgldlab
[01865] 075a: d4 00 00    	 				call epush16
[01866] 075d: 07 50       	 				  dw  L108
[01867]                   	;----- cgcall
[01868] 075f: d4 00 08    	          call  Cfail
[01869]                   	;----- cgstack
[01870] 0762: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01871] 0765: 00 02       	          dw  2  ;--- offset
[01872] 0767: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01873]                   	;---- queue dpush
[01874]                   	;----- push + pop data not required, data remains unchanged in RA
[01875]                   	;----- end stmt ------
[01876]                   
[01877]                   L106:
[01878]                   	;----- end if
[01879]                   	;----- end stmt ------
[01880]                   	;----- begin stmt ------
[01881]                   	;----- begin if
[01882]                   	;----- cgldlw
[01883] 076a: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01884] 076d: ff fe       	          dw  -2  ;--- offset
[01885]                   	;----- cgcall
[01886] 076f: d4 00 00    	          call  Cftell
[01887]                   	;----- cgstack
[01888] 0772: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01889] 0775: 00 02       	          dw  2  ;--- offset
[01890] 0777: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01891]                   	;---- queue dpush
[01892]                   	;------ commit push
[01893]                   	;----- cgpushd
[01894] 077a: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01895]                   	;----- cglit
[01896] 077d: d4 00 00    	 				call epush16
[01897] 0780: 00 14       	 				  dw 20
[01898]                   	;----- queue_cmp
[01899]                   	;----- genbrfalse
[01900]                   	;----- genbranch
[01901]                   	;----- cgbrne
[01902]                   	;----- cgne
[01903] 0782: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[01904]                   
[01905]                   	;----- cgbrcond
[01906] 0785: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01907] 0788: 9a          	 				 ghi   ra            ; get MSB from result
[01908] 0789: 52          	 				 str   r2            ; save in M(X)
[01909] 078a: 8a          	 				 glo   ra            ; get LSB from result
[01910] 078b: f1          	 				 or                  ; D = MSB | LSB
[01911] 078c: ca 07 92    	lbnz	L111
[01912] 078f: c0 07 af    	lbr	L110
[01913]                   
[01914]                   L111:
[01915]                   	;----- begin stmt ------
[01916]                   	;---- queue lbr L113
[01917]                   	;----- cgjump
[01918] 0792: c0 07 9f    	 				  lbr	L113
[01919]                   
[01920]                   L112:
[01921] 0795: 66 73 65 74   db 'fsetpos-2'    ;----- cgdefs
              70 6f 73 2d 
              32 
[01922] 079e: 00          	db	$00    ;----- cgdefb
[01923]                   
[01924]                   L113:
[01925]                   	;----- cgldlab
[01926] 079f: d4 00 00    	 				call epush16
[01927] 07a2: 07 95       	 				  dw  L112
[01928]                   	;----- cgcall
[01929] 07a4: d4 00 08    	          call  Cfail
[01930]                   	;----- cgstack
[01931] 07a7: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01932] 07aa: 00 02       	          dw  2  ;--- offset
[01933] 07ac: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01934]                   	;---- queue dpush
[01935]                   	;----- push + pop data not required, data remains unchanged in RA
[01936]                   	;----- end stmt ------
[01937]                   
[01938]                   L110:
[01939]                   	;----- end if
[01940]                   	;----- end stmt ------
[01941]                   	;----- begin stmt ------
[01942]                   	;---- queue lbr L115
[01943]                   	;----- cgjump
[01944] 07af: c0 07 b8    	 				  lbr	L115
[01945]                   
[01946]                   L114:
[01947] 07b2: 66 73 65 65   db 'fseek'    ;----- cgdefs
              6b 
[01948] 07b7: 00          	db	$00    ;----- cgdefb
[01949]                   
[01950]                   L115:
[01951]                   	;----- cgldlab
[01952] 07b8: d4 00 00    	 				call epush16
[01953] 07bb: 07 b2       	 				  dw  L114
[01954]                   	;----- cgcall
[01955] 07bd: d4 00 58    	          call  Cpr
[01956]                   	;----- cgstack
[01957] 07c0: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01958] 07c3: 00 02       	          dw  2  ;--- offset
[01959] 07c5: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01960]                   	;---- queue dpush
[01961]                   	;----- push + pop data not required, data remains unchanged in RA
[01962]                   	;----- end stmt ------
[01963]                   	;----- begin stmt ------
[01964]                   	;----- begin if
[01965]                   	;----- cglit
[01966] 07c8: d4 00 00    	 				call epush16
[01967] 07cb: 00 01       	 				  dw 1
[01968]                   	;----- cglit
[01969] 07cd: d4 00 00    	 				call epush16
[01970] 07d0: 00 02       	 				  dw 2
[01971]                   	;----- cgldlw
[01972] 07d2: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[01973] 07d5: ff fe       	          dw  -2  ;--- offset
[01974]                   	;----- cgcall
[01975] 07d7: d4 00 00    	          call  Cfseek
[01976]                   	;----- cgstack
[01977] 07da: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[01978] 07dd: 00 06       	          dw  6  ;--- offset
[01979] 07df: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[01980]                   	;---- queue dpush
[01981]                   	;------ commit push
[01982]                   	;----- cgpushd
[01983] 07e2: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[01984]                   	;----- cglit
[01985] 07e5: d4 00 00    	 				call epush16
[01986] 07e8: 00 00       	 				  dw 0
[01987]                   	;----- queue_cmp
[01988]                   	;----- genbrfalse
[01989]                   	;----- genbranch
[01990]                   	;----- cgbrlt
[01991]                   	;----- cglt
[01992] 07ea: d4 00 00    	          call  lt16				   ; compare TOS < SOS on Expression Stack
[01993]                   
[01994]                   	;----- cgbrcond
[01995] 07ed: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[01996] 07f0: 9a          	 				 ghi   ra            ; get MSB from result
[01997] 07f1: 52          	 				 str   r2            ; save in M(X)
[01998] 07f2: 8a          	 				 glo   ra            ; get LSB from result
[01999] 07f3: f1          	 				 or                  ; D = MSB | LSB
[02000] 07f4: ca 07 fa    	lbnz	L117
[02001] 07f7: c0 08 15    	lbr	L116
[02002]                   
[02003]                   L117:
[02004]                   	;----- begin stmt ------
[02005]                   	;---- queue lbr L119
[02006]                   	;----- cgjump
[02007] 07fa: c0 08 05    	 				  lbr	L119
[02008]                   
[02009]                   L118:
[02010] 07fd: 66 73 65 65   db 'fseek-1'    ;----- cgdefs
              6b 2d 31 
[02011] 0804: 00          	db	$00    ;----- cgdefb
[02012]                   
[02013]                   L119:
[02014]                   	;----- cgldlab
[02015] 0805: d4 00 00    	 				call epush16
[02016] 0808: 07 fd       	 				  dw  L118
[02017]                   	;----- cgcall
[02018] 080a: d4 00 08    	          call  Cfail
[02019]                   	;----- cgstack
[02020] 080d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02021] 0810: 00 02       	          dw  2  ;--- offset
[02022] 0812: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02023]                   	;---- queue dpush
[02024]                   	;----- push + pop data not required, data remains unchanged in RA
[02025]                   	;----- end stmt ------
[02026]                   
[02027]                   L116:
[02028]                   	;----- end if
[02029]                   	;----- end stmt ------
[02030]                   	;----- begin stmt ------
[02031]                   	;----- begin if
[02032]                   	;----- cgldlw
[02033] 0815: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02034] 0818: ff fe       	          dw  -2  ;--- offset
[02035]                   	;----- cgcall
[02036] 081a: d4 00 00    	          call  Cftell
[02037]                   	;----- cgstack
[02038] 081d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02039] 0820: 00 02       	          dw  2  ;--- offset
[02040] 0822: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02041]                   	;---- queue dpush
[02042]                   	;------ commit push
[02043]                   	;----- cgpushd
[02044] 0825: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02045]                   	;----- cglit
[02046] 0828: d4 00 00    	 				call epush16
[02047] 082b: 00 16       	 				  dw 22
[02048]                   	;----- queue_cmp
[02049]                   	;----- genbrfalse
[02050]                   	;----- genbranch
[02051]                   	;----- cgbrne
[02052]                   	;----- cgne
[02053] 082d: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02054]                   
[02055]                   	;----- cgbrcond
[02056] 0830: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02057] 0833: 9a          	 				 ghi   ra            ; get MSB from result
[02058] 0834: 52          	 				 str   r2            ; save in M(X)
[02059] 0835: 8a          	 				 glo   ra            ; get LSB from result
[02060] 0836: f1          	 				 or                  ; D = MSB | LSB
[02061] 0837: ca 08 3d    	lbnz	L121
[02062] 083a: c0 08 58    	lbr	L120
[02063]                   
[02064]                   L121:
[02065]                   	;----- begin stmt ------
[02066]                   	;---- queue lbr L123
[02067]                   	;----- cgjump
[02068] 083d: c0 08 48    	 				  lbr	L123
[02069]                   
[02070]                   L122:
[02071] 0840: 66 73 65 65   db 'fseek-2'    ;----- cgdefs
              6b 2d 32 
[02072] 0847: 00          	db	$00    ;----- cgdefb
[02073]                   
[02074]                   L123:
[02075]                   	;----- cgldlab
[02076] 0848: d4 00 00    	 				call epush16
[02077] 084b: 08 40       	 				  dw  L122
[02078]                   	;----- cgcall
[02079] 084d: d4 00 08    	          call  Cfail
[02080]                   	;----- cgstack
[02081] 0850: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02082] 0853: 00 02       	          dw  2  ;--- offset
[02083] 0855: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02084]                   	;---- queue dpush
[02085]                   	;----- push + pop data not required, data remains unchanged in RA
[02086]                   	;----- end stmt ------
[02087]                   
[02088]                   L120:
[02089]                   	;----- end if
[02090]                   	;----- end stmt ------
[02091]                   	;----- begin stmt ------
[02092]                   	;---- queue lbr L125
[02093]                   	;----- cgjump
[02094] 0858: c0 08 62    	 				  lbr	L125
[02095]                   
[02096]                   L124:
[02097] 085b: 72 65 77 69   db 'rewind'    ;----- cgdefs
              6e 64 
[02098] 0861: 00          	db	$00    ;----- cgdefb
[02099]                   
[02100]                   L125:
[02101]                   	;----- cgldlab
[02102] 0862: d4 00 00    	 				call epush16
[02103] 0865: 08 5b       	 				  dw  L124
[02104]                   	;----- cgcall
[02105] 0867: d4 00 58    	          call  Cpr
[02106]                   	;----- cgstack
[02107] 086a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02108] 086d: 00 02       	          dw  2  ;--- offset
[02109] 086f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02110]                   	;---- queue dpush
[02111]                   	;----- push + pop data not required, data remains unchanged in RA
[02112]                   	;----- end stmt ------
[02113]                   	;----- begin stmt ------
[02114]                   	;----- cgldlw
[02115] 0872: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02116] 0875: ff fe       	          dw  -2  ;--- offset
[02117]                   	;----- cgcall
[02118] 0877: d4 00 00    	          call  Crewind
[02119]                   	;----- cgstack
[02120] 087a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02121] 087d: 00 02       	          dw  2  ;--- offset
[02122] 087f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02123]                   	;---- queue dpush
[02124]                   	;----- push + pop data not required, data remains unchanged in RA
[02125]                   	;----- end stmt ------
[02126]                   	;----- begin stmt ------
[02127]                   	;----- begin if
[02128]                   	;----- cgldlw
[02129] 0882: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02130] 0885: ff fe       	          dw  -2  ;--- offset
[02131]                   	;----- cgcall
[02132] 0887: d4 00 00    	          call  Cftell
[02133]                   	;----- cgstack
[02134] 088a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02135] 088d: 00 02       	          dw  2  ;--- offset
[02136] 088f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02137]                   	;---- queue dpush
[02138]                   	;------ commit push
[02139]                   	;----- cgpushd
[02140] 0892: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02141]                   	;----- cglit
[02142] 0895: d4 00 00    	 				call epush16
[02143] 0898: 00 00       	 				  dw 0
[02144]                   	;----- queue_cmp
[02145]                   	;----- genbrfalse
[02146]                   	;----- genbranch
[02147]                   	;----- cgbrne
[02148]                   	;----- cgne
[02149] 089a: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02150]                   
[02151]                   	;----- cgbrcond
[02152] 089d: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02153] 08a0: 9a          	 				 ghi   ra            ; get MSB from result
[02154] 08a1: 52          	 				 str   r2            ; save in M(X)
[02155] 08a2: 8a          	 				 glo   ra            ; get LSB from result
[02156] 08a3: f1          	 				 or                  ; D = MSB | LSB
[02157] 08a4: ca 08 aa    	lbnz	L127
[02158] 08a7: c0 08 c6    	lbr	L126
[02159]                   
[02160]                   L127:
[02161]                   	;----- begin stmt ------
[02162]                   	;---- queue lbr L129
[02163]                   	;----- cgjump
[02164] 08aa: c0 08 b6    	 				  lbr	L129
[02165]                   
[02166]                   L128:
[02167] 08ad: 72 65 77 69   db 'rewind-1'    ;----- cgdefs
              6e 64 2d 31 
[02168] 08b5: 00          	db	$00    ;----- cgdefb
[02169]                   
[02170]                   L129:
[02171]                   	;----- cgldlab
[02172] 08b6: d4 00 00    	 				call epush16
[02173] 08b9: 08 ad       	 				  dw  L128
[02174]                   	;----- cgcall
[02175] 08bb: d4 00 08    	          call  Cfail
[02176]                   	;----- cgstack
[02177] 08be: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02178] 08c1: 00 02       	          dw  2  ;--- offset
[02179] 08c3: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02180]                   	;---- queue dpush
[02181]                   	;----- push + pop data not required, data remains unchanged in RA
[02182]                   	;----- end stmt ------
[02183]                   
[02184]                   L126:
[02185]                   	;----- end if
[02186]                   	;----- end stmt ------
[02187]                   	;----- begin stmt ------
[02188]                   	;---- queue lbr L131
[02189]                   	;----- cgjump
[02190] 08c6: c0 08 cf    	 				  lbr	L131
[02191]                   
[02192]                   L130:
[02193] 08c9: 66 67 65 74   db 'fgets'    ;----- cgdefs
              73 
[02194] 08ce: 00          	db	$00    ;----- cgdefb
[02195]                   
[02196]                   L131:
[02197]                   	;----- cgldlab
[02198] 08cf: d4 00 00    	 				call epush16
[02199] 08d2: 08 c9       	 				  dw  L130
[02200]                   	;----- cgcall
[02201] 08d4: d4 00 58    	          call  Cpr
[02202]                   	;----- cgstack
[02203] 08d7: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02204] 08da: 00 02       	          dw  2  ;--- offset
[02205] 08dc: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02206]                   	;---- queue dpush
[02207]                   	;----- push + pop data not required, data remains unchanged in RA
[02208]                   	;----- end stmt ------
[02209]                   	;----- begin stmt ------
[02210]                   	;----- begin for
[02211]                   	;----- cglit
[02212] 08df: d4 00 00    	 				call epush16
[02213] 08e2: 00 41       	 				  dw 65
[02214]                   	;----- cgstorlw
[02215] 08e4: d4 00 00    	          call  lstor16      ; store value from ES in local variable
[02216] 08e7: ff fc       	          dw  -4  ;--- offset
[02217]                   	;----- cgpopd
[02218] 08e9: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02219]                   
[02220]                   L132:
[02221]                   	;----- cgldlw
[02222] 08ec: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02223] 08ef: ff fc       	          dw  -4  ;--- offset
[02224]                   	;----- cglit
[02225] 08f1: d4 00 00    	 				call epush16
[02226] 08f4: 00 5a       	 				  dw 90
[02227]                   	;----- queue_cmp
[02228]                   	;----- genbrfalse
[02229]                   	;----- genbranch
[02230]                   	;----- cgbrle
[02231]                   	;----- cgle
[02232] 08f6: d4 00 00    	          call  lte16				 ; compare TOS <= SOS on Expression Stack
[02233]                   
[02234]                   	;----- cgbrcond
[02235] 08f9: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02236] 08fc: 9a          	 				 ghi   ra            ; get MSB from result
[02237] 08fd: 52          	 				 str   r2            ; save in M(X)
[02238] 08fe: 8a          	 				 glo   ra            ; get LSB from result
[02239] 08ff: f1          	 				 or                  ; D = MSB | LSB
[02240] 0900: ca 09 06    	lbnz	L136
[02241] 0903: c0 09 62    	lbr	L134
[02242]                   
[02243]                   L136:
[02244]                   	;---- queue lbr L133
[02245]                   	;----- cgjump
[02246] 0906: c0 09 19    	 				  lbr	L133
[02247]                   
[02248]                   L135:
[02249]                   	;----- cgldlw
[02250] 0909: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02251] 090c: ff fc       	          dw  -4  ;--- offset
[02252]                   	;----- cginclw
[02253] 090e: d4 00 00    	          call  linc16       ; increment local variable
[02254] 0911: ff fc       	          dw  -4  ;--- offset
[02255]                   	;----- cgpopd
[02256] 0913: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02257]                   	;---- queue lbr L132
[02258]                   	;----- cgjump
[02259] 0916: c0 08 ec    	 				  lbr	L132
[02260]                   
[02261]                   L133:
[02262]                   	;----- begin stmt ------
[02263]                   	;----- begin stmt ------
[02264]                   	;----- begin if
[02265]                   	;----- cgldlw
[02266] 0919: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02267] 091c: ff fe       	          dw  -2  ;--- offset
[02268]                   	;----- cgcall
[02269] 091e: d4 00 00    	          call  Cfgetc
[02270]                   	;----- cgstack
[02271] 0921: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02272] 0924: 00 02       	          dw  2  ;--- offset
[02273] 0926: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02274]                   	;---- queue dpush
[02275]                   	;----- cgldlw
[02276] 0929: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02277] 092c: ff fc       	          dw  -4  ;--- offset
[02278]                   	;------ commit push
[02279]                   	;----- cgpushd
[02280] 092e: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02281]                   	;----- queue_cmp
[02282]                   	;----- genbrfalse
[02283]                   	;----- genbranch
[02284]                   	;----- cgbrne
[02285]                   	;----- cgne
[02286] 0931: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02287]                   
[02288]                   	;----- cgbrcond
[02289] 0934: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02290] 0937: 9a          	 				 ghi   ra            ; get MSB from result
[02291] 0938: 52          	 				 str   r2            ; save in M(X)
[02292] 0939: 8a          	 				 glo   ra            ; get LSB from result
[02293] 093a: f1          	 				 or                  ; D = MSB | LSB
[02294] 093b: ca 09 41    	lbnz	L138
[02295] 093e: c0 09 5f    	lbr	L137
[02296]                   
[02297]                   L138:
[02298]                   	;----- begin stmt ------
[02299]                   	;----- begin stmt ------
[02300]                   	;---- queue lbr L140
[02301]                   	;----- cgjump
[02302] 0941: c0 09 4c    	 				  lbr	L140
[02303]                   
[02304]                   L139:
[02305] 0944: 66 67 65 74   db 'fgetc-1'    ;----- cgdefs
              63 2d 31 
[02306] 094b: 00          	db	$00    ;----- cgdefb
[02307]                   
[02308]                   L140:
[02309]                   	;----- cgldlab
[02310] 094c: d4 00 00    	 				call epush16
[02311] 094f: 09 44       	 				  dw  L139
[02312]                   	;----- cgcall
[02313] 0951: d4 00 08    	          call  Cfail
[02314]                   	;----- cgstack
[02315] 0954: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02316] 0957: 00 02       	          dw  2  ;--- offset
[02317] 0959: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02318]                   	;---- queue dpush
[02319]                   	;----- push + pop data not required, data remains unchanged in RA
[02320]                   	;----- end stmt ------
[02321]                   	;----- begin stmt ------
[02322]                   	;----- begin break
[02323]                   	;---- queue lbr L134
[02324]                   	;----- end break
[02325]                   	;----- end stmt ------
[02326]                   	;----- end stmt ------
[02327]                   	;----- cgjump
[02328] 095c: c0 09 62    	 				  lbr	L134
[02329]                   
[02330]                   L137:
[02331]                   	;----- end if
[02332]                   	;----- end stmt ------
[02333]                   	;----- end stmt ------
[02334]                   	;---- queue lbr L135
[02335]                   	;----- cgjump
[02336] 095f: c0 09 09    	 				  lbr	L135
[02337]                   
[02338]                   L134:
[02339]                   	;----- end for
[02340]                   	;----- end stmt ------
[02341]                   	;----- begin stmt ------
[02342]                   	;----- begin if
[02343]                   	;----- cgldlw
[02344] 0962: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02345] 0965: ff fe       	          dw  -2  ;--- offset
[02346]                   	;----- cgcall
[02347] 0967: d4 00 00    	          call  Cfgetc
[02348]                   	;----- cgstack
[02349] 096a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02350] 096d: 00 02       	          dw  2  ;--- offset
[02351] 096f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02352]                   	;---- queue dpush
[02353]                   	;------ commit push
[02354]                   	;----- cgpushd
[02355] 0972: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02356]                   	;----- cglit
[02357] 0975: d4 00 00    	 				call epush16
[02358] 0978: ff ff       	 				  dw -1
[02359]                   	;----- queue_cmp
[02360]                   	;----- genbrfalse
[02361]                   	;----- genbranch
[02362]                   	;----- cgbrne
[02363]                   	;----- cgne
[02364] 097a: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02365]                   
[02366]                   	;----- cgbrcond
[02367] 097d: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02368] 0980: 9a          	 				 ghi   ra            ; get MSB from result
[02369] 0981: 52          	 				 str   r2            ; save in M(X)
[02370] 0982: 8a          	 				 glo   ra            ; get LSB from result
[02371] 0983: f1          	 				 or                  ; D = MSB | LSB
[02372] 0984: ca 09 8a    	lbnz	L142
[02373] 0987: c0 09 a5    	lbr	L141
[02374]                   
[02375]                   L142:
[02376]                   	;----- begin stmt ------
[02377]                   	;---- queue lbr L144
[02378]                   	;----- cgjump
[02379] 098a: c0 09 95    	 				  lbr	L144
[02380]                   
[02381]                   L143:
[02382] 098d: 66 67 65 74   db 'fgetc-2'    ;----- cgdefs
              63 2d 32 
[02383] 0994: 00          	db	$00    ;----- cgdefb
[02384]                   
[02385]                   L144:
[02386]                   	;----- cgldlab
[02387] 0995: d4 00 00    	 				call epush16
[02388] 0998: 09 8d       	 				  dw  L143
[02389]                   	;----- cgcall
[02390] 099a: d4 00 08    	          call  Cfail
[02391]                   	;----- cgstack
[02392] 099d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02393] 09a0: 00 02       	          dw  2  ;--- offset
[02394] 09a2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02395]                   	;---- queue dpush
[02396]                   	;----- push + pop data not required, data remains unchanged in RA
[02397]                   	;----- end stmt ------
[02398]                   
[02399]                   L141:
[02400]                   	;----- end if
[02401]                   	;----- end stmt ------
[02402]                   	;----- begin stmt ------
[02403]                   	;---- queue lbr L146
[02404]                   	;----- cgjump
[02405] 09a5: c0 09 af    	 				  lbr	L146
[02406]                   
[02407]                   L145:
[02408] 09a8: 75 6e 67 65   db 'ungetc'    ;----- cgdefs
              74 63 
[02409] 09ae: 00          	db	$00    ;----- cgdefb
[02410]                   
[02411]                   L146:
[02412]                   	;----- cgldlab
[02413] 09af: d4 00 00    	 				call epush16
[02414] 09b2: 09 a8       	 				  dw  L145
[02415]                   	;----- cgcall
[02416] 09b4: d4 00 58    	          call  Cpr
[02417]                   	;----- cgstack
[02418] 09b7: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02419] 09ba: 00 02       	          dw  2  ;--- offset
[02420] 09bc: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02421]                   	;---- queue dpush
[02422]                   	;----- push + pop data not required, data remains unchanged in RA
[02423]                   	;----- end stmt ------
[02424]                   	;----- begin stmt ------
[02425]                   	;----- cgldlw
[02426] 09bf: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02427] 09c2: ff fe       	          dw  -2  ;--- offset
[02428]                   	;----- cgcall
[02429] 09c4: d4 00 00    	          call  Cclearerr
[02430]                   	;----- cgstack
[02431] 09c7: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02432] 09ca: 00 02       	          dw  2  ;--- offset
[02433] 09cc: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02434]                   	;---- queue dpush
[02435]                   	;----- push + pop data not required, data remains unchanged in RA
[02436]                   	;----- end stmt ------
[02437]                   	;----- begin stmt ------
[02438]                   	;----- begin if
[02439]                   	;----- cgldlw
[02440] 09cf: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02441] 09d2: ff fe       	          dw  -2  ;--- offset
[02442]                   	;----- cglit
[02443] 09d4: d4 00 00    	 				call epush16
[02444] 09d7: 00 58       	 				  dw 88
[02445]                   	;----- cgcall
[02446] 09d9: d4 00 00    	          call  Cungetc
[02447]                   	;----- cgstack
[02448] 09dc: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02449] 09df: 00 04       	          dw  4  ;--- offset
[02450] 09e1: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02451]                   	;---- queue dpush
[02452]                   	;------ commit push
[02453]                   	;----- cgpushd
[02454] 09e4: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02455]                   	;----- cglit
[02456] 09e7: d4 00 00    	 				call epush16
[02457] 09ea: 00 58       	 				  dw 88
[02458]                   	;----- queue_cmp
[02459]                   	;----- genbrfalse
[02460]                   	;----- genbranch
[02461]                   	;----- cgbrne
[02462]                   	;----- cgne
[02463] 09ec: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02464]                   
[02465]                   	;----- cgbrcond
[02466] 09ef: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02467] 09f2: 9a          	 				 ghi   ra            ; get MSB from result
[02468] 09f3: 52          	 				 str   r2            ; save in M(X)
[02469] 09f4: 8a          	 				 glo   ra            ; get LSB from result
[02470] 09f5: f1          	 				 or                  ; D = MSB | LSB
[02471] 09f6: ca 09 fc    	lbnz	L148
[02472] 09f9: c0 0a 18    	lbr	L147
[02473]                   
[02474]                   L148:
[02475]                   	;----- begin stmt ------
[02476]                   	;---- queue lbr L150
[02477]                   	;----- cgjump
[02478] 09fc: c0 0a 08    	 				  lbr	L150
[02479]                   
[02480]                   L149:
[02481] 09ff: 75 6e 67 65   db 'ungetc-1'    ;----- cgdefs
              74 63 2d 31 
[02482] 0a07: 00          	db	$00    ;----- cgdefb
[02483]                   
[02484]                   L150:
[02485]                   	;----- cgldlab
[02486] 0a08: d4 00 00    	 				call epush16
[02487] 0a0b: 09 ff       	 				  dw  L149
[02488]                   	;----- cgcall
[02489] 0a0d: d4 00 08    	          call  Cfail
[02490]                   	;----- cgstack
[02491] 0a10: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02492] 0a13: 00 02       	          dw  2  ;--- offset
[02493] 0a15: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02494]                   	;---- queue dpush
[02495]                   	;----- push + pop data not required, data remains unchanged in RA
[02496]                   	;----- end stmt ------
[02497]                   
[02498]                   L147:
[02499]                   	;----- end if
[02500]                   	;----- end stmt ------
[02501]                   	;----- begin stmt ------
[02502]                   	;----- begin if
[02503]                   	;----- cgldlw
[02504] 0a18: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02505] 0a1b: ff fe       	          dw  -2  ;--- offset
[02506]                   	;----- cgcall
[02507] 0a1d: d4 00 00    	          call  Cfgetc
[02508]                   	;----- cgstack
[02509] 0a20: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02510] 0a23: 00 02       	          dw  2  ;--- offset
[02511] 0a25: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02512]                   	;---- queue dpush
[02513]                   	;------ commit push
[02514]                   	;----- cgpushd
[02515] 0a28: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02516]                   	;----- cglit
[02517] 0a2b: d4 00 00    	 				call epush16
[02518] 0a2e: 00 58       	 				  dw 88
[02519]                   	;----- queue_cmp
[02520]                   	;----- genbrfalse
[02521]                   	;----- genbranch
[02522]                   	;----- cgbrne
[02523]                   	;----- cgne
[02524] 0a30: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02525]                   
[02526]                   	;----- cgbrcond
[02527] 0a33: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02528] 0a36: 9a          	 				 ghi   ra            ; get MSB from result
[02529] 0a37: 52          	 				 str   r2            ; save in M(X)
[02530] 0a38: 8a          	 				 glo   ra            ; get LSB from result
[02531] 0a39: f1          	 				 or                  ; D = MSB | LSB
[02532] 0a3a: ca 0a 40    	lbnz	L152
[02533] 0a3d: c0 0a 5c    	lbr	L151
[02534]                   
[02535]                   L152:
[02536]                   	;----- begin stmt ------
[02537]                   	;---- queue lbr L154
[02538]                   	;----- cgjump
[02539] 0a40: c0 0a 4c    	 				  lbr	L154
[02540]                   
[02541]                   L153:
[02542] 0a43: 75 6e 67 65   db 'ungetc-2'    ;----- cgdefs
              74 63 2d 32 
[02543] 0a4b: 00          	db	$00    ;----- cgdefb
[02544]                   
[02545]                   L154:
[02546]                   	;----- cgldlab
[02547] 0a4c: d4 00 00    	 				call epush16
[02548] 0a4f: 0a 43       	 				  dw  L153
[02549]                   	;----- cgcall
[02550] 0a51: d4 00 08    	          call  Cfail
[02551]                   	;----- cgstack
[02552] 0a54: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02553] 0a57: 00 02       	          dw  2  ;--- offset
[02554] 0a59: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02555]                   	;---- queue dpush
[02556]                   	;----- push + pop data not required, data remains unchanged in RA
[02557]                   	;----- end stmt ------
[02558]                   
[02559]                   L151:
[02560]                   	;----- end if
[02561]                   	;----- end stmt ------
[02562]                   	;----- begin stmt ------
[02563]                   	;----- begin if
[02564]                   	;----- cgldlw
[02565] 0a5c: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02566] 0a5f: ff fe       	          dw  -2  ;--- offset
[02567]                   	;----- cglit
[02568] 0a61: d4 00 00    	 				call epush16
[02569] 0a64: 00 58       	 				  dw 88
[02570]                   	;----- cgcall
[02571] 0a66: d4 00 00    	          call  Cungetc
[02572]                   	;----- cgstack
[02573] 0a69: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02574] 0a6c: 00 04       	          dw  4  ;--- offset
[02575] 0a6e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02576]                   	;---- queue dpush
[02577]                   	;------ commit push
[02578]                   	;----- cgpushd
[02579] 0a71: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02580]                   	;----- cglit
[02581] 0a74: d4 00 00    	 				call epush16
[02582] 0a77: 00 58       	 				  dw 88
[02583]                   	;----- queue_cmp
[02584]                   	;----- genbrfalse
[02585]                   	;----- genbranch
[02586]                   	;----- cgbrne
[02587]                   	;----- cgne
[02588] 0a79: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02589]                   
[02590]                   	;----- cgbrcond
[02591] 0a7c: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02592] 0a7f: 9a          	 				 ghi   ra            ; get MSB from result
[02593] 0a80: 52          	 				 str   r2            ; save in M(X)
[02594] 0a81: 8a          	 				 glo   ra            ; get LSB from result
[02595] 0a82: f1          	 				 or                  ; D = MSB | LSB
[02596] 0a83: ca 0a 89    	lbnz	L156
[02597] 0a86: c0 0a a5    	lbr	L155
[02598]                   
[02599]                   L156:
[02600]                   	;----- begin stmt ------
[02601]                   	;---- queue lbr L158
[02602]                   	;----- cgjump
[02603] 0a89: c0 0a 95    	 				  lbr	L158
[02604]                   
[02605]                   L157:
[02606] 0a8c: 75 6e 67 65   db 'ungetc-3'    ;----- cgdefs
              74 63 2d 33 
[02607] 0a94: 00          	db	$00    ;----- cgdefb
[02608]                   
[02609]                   L158:
[02610]                   	;----- cgldlab
[02611] 0a95: d4 00 00    	 				call epush16
[02612] 0a98: 0a 8c       	 				  dw  L157
[02613]                   	;----- cgcall
[02614] 0a9a: d4 00 08    	          call  Cfail
[02615]                   	;----- cgstack
[02616] 0a9d: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02617] 0aa0: 00 02       	          dw  2  ;--- offset
[02618] 0aa2: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02619]                   	;---- queue dpush
[02620]                   	;----- push + pop data not required, data remains unchanged in RA
[02621]                   	;----- end stmt ------
[02622]                   
[02623]                   L155:
[02624]                   	;----- end if
[02625]                   	;----- end stmt ------
[02626]                   	;----- begin stmt ------
[02627]                   	;----- begin if
[02628]                   	;----- cgldlw
[02629] 0aa5: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02630] 0aa8: ff fe       	          dw  -2  ;--- offset
[02631]                   	;----- cglit
[02632] 0aaa: d4 00 00    	 				call epush16
[02633] 0aad: 00 58       	 				  dw 88
[02634]                   	;----- cgcall
[02635] 0aaf: d4 00 00    	          call  Cungetc
[02636]                   	;----- cgstack
[02637] 0ab2: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02638] 0ab5: 00 04       	          dw  4  ;--- offset
[02639] 0ab7: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02640]                   	;---- queue dpush
[02641]                   	;------ commit push
[02642]                   	;----- cgpushd
[02643] 0aba: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02644]                   	;----- cglit
[02645] 0abd: d4 00 00    	 				call epush16
[02646] 0ac0: ff ff       	 				  dw -1
[02647]                   	;----- queue_cmp
[02648]                   	;----- genbrfalse
[02649]                   	;----- genbranch
[02650]                   	;----- cgbrne
[02651]                   	;----- cgne
[02652] 0ac2: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02653]                   
[02654]                   	;----- cgbrcond
[02655] 0ac5: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02656] 0ac8: 9a          	 				 ghi   ra            ; get MSB from result
[02657] 0ac9: 52          	 				 str   r2            ; save in M(X)
[02658] 0aca: 8a          	 				 glo   ra            ; get LSB from result
[02659] 0acb: f1          	 				 or                  ; D = MSB | LSB
[02660] 0acc: ca 0a d2    	lbnz	L160
[02661] 0acf: c0 0a ee    	lbr	L159
[02662]                   
[02663]                   L160:
[02664]                   	;----- begin stmt ------
[02665]                   	;---- queue lbr L162
[02666]                   	;----- cgjump
[02667] 0ad2: c0 0a de    	 				  lbr	L162
[02668]                   
[02669]                   L161:
[02670] 0ad5: 75 6e 67 65   db 'ungetc-4'    ;----- cgdefs
              74 63 2d 34 
[02671] 0add: 00          	db	$00    ;----- cgdefb
[02672]                   
[02673]                   L162:
[02674]                   	;----- cgldlab
[02675] 0ade: d4 00 00    	 				call epush16
[02676] 0ae1: 0a d5       	 				  dw  L161
[02677]                   	;----- cgcall
[02678] 0ae3: d4 00 08    	          call  Cfail
[02679]                   	;----- cgstack
[02680] 0ae6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02681] 0ae9: 00 02       	          dw  2  ;--- offset
[02682] 0aeb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02683]                   	;---- queue dpush
[02684]                   	;----- push + pop data not required, data remains unchanged in RA
[02685]                   	;----- end stmt ------
[02686]                   
[02687]                   L159:
[02688]                   	;----- end if
[02689]                   	;----- end stmt ------
[02690]                   	;----- begin stmt ------
[02691]                   	;----- begin if
[02692]                   	;----- cgldlw
[02693] 0aee: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02694] 0af1: ff fe       	          dw  -2  ;--- offset
[02695]                   	;----- cgcall
[02696] 0af3: d4 00 00    	          call  Cfgetc
[02697]                   	;----- cgstack
[02698] 0af6: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02699] 0af9: 00 02       	          dw  2  ;--- offset
[02700] 0afb: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02701]                   	;---- queue dpush
[02702]                   	;------ commit push
[02703]                   	;----- cgpushd
[02704] 0afe: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02705]                   	;----- cglit
[02706] 0b01: d4 00 00    	 				call epush16
[02707] 0b04: 00 58       	 				  dw 88
[02708]                   	;----- queue_cmp
[02709]                   	;----- genbrfalse
[02710]                   	;----- genbranch
[02711]                   	;----- cgbrne
[02712]                   	;----- cgne
[02713] 0b06: d4 00 00    	          call  ne16				   ; compare TOS != SOS on Expression Stack
[02714]                   
[02715]                   	;----- cgbrcond
[02716] 0b09: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02717] 0b0c: 9a          	 				 ghi   ra            ; get MSB from result
[02718] 0b0d: 52          	 				 str   r2            ; save in M(X)
[02719] 0b0e: 8a          	 				 glo   ra            ; get LSB from result
[02720] 0b0f: f1          	 				 or                  ; D = MSB | LSB
[02721] 0b10: ca 0b 16    	lbnz	L164
[02722] 0b13: c0 0b 32    	lbr	L163
[02723]                   
[02724]                   L164:
[02725]                   	;----- begin stmt ------
[02726]                   	;---- queue lbr L166
[02727]                   	;----- cgjump
[02728] 0b16: c0 0b 22    	 				  lbr	L166
[02729]                   
[02730]                   L165:
[02731] 0b19: 75 6e 67 65   db 'ungetc-5'    ;----- cgdefs
              74 63 2d 35 
[02732] 0b21: 00          	db	$00    ;----- cgdefb
[02733]                   
[02734]                   L166:
[02735]                   	;----- cgldlab
[02736] 0b22: d4 00 00    	 				call epush16
[02737] 0b25: 0b 19       	 				  dw  L165
[02738]                   	;----- cgcall
[02739] 0b27: d4 00 08    	          call  Cfail
[02740]                   	;----- cgstack
[02741] 0b2a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02742] 0b2d: 00 02       	          dw  2  ;--- offset
[02743] 0b2f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02744]                   	;---- queue dpush
[02745]                   	;----- push + pop data not required, data remains unchanged in RA
[02746]                   	;----- end stmt ------
[02747]                   
[02748]                   L163:
[02749]                   	;----- end if
[02750]                   	;----- end stmt ------
[02751]                   	;----- begin stmt ------
[02752]                   	;----- cgldlw
[02753] 0b32: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02754] 0b35: ff fe       	          dw  -2  ;--- offset
[02755]                   	;----- cgcall
[02756] 0b37: d4 00 00    	          call  Cclearerr
[02757]                   	;----- cgstack
[02758] 0b3a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02759] 0b3d: 00 02       	          dw  2  ;--- offset
[02760] 0b3f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02761]                   	;---- queue dpush
[02762]                   	;----- push + pop data not required, data remains unchanged in RA
[02763]                   	;----- end stmt ------
[02764]                   	;----- begin stmt ------
[02765]                   	;----- begin if
[02766]                   	;----- cgldlw
[02767] 0b42: d4 00 00    	          call  lpush16       ; push value of local variable on ES
[02768] 0b45: ff fe       	          dw  -2  ;--- offset
[02769]                   	;----- cgcall
[02770] 0b47: d4 00 00    	          call  Cfclose
[02771]                   	;----- cgstack
[02772] 0b4a: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02773] 0b4d: 00 02       	          dw  2  ;--- offset
[02774] 0b4f: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02775]                   	;---- queue dpush
[02776]                   	;----- genbrfalse
[02777]                   	;------ commit push
[02778]                   	;----- cgpushd
[02779] 0b52: d4 00 00    	          call  dpush16   		 ; put result on expression stack
[02780]                   	;----- cgbrfalse
[02781]                   	;----- cgbr
[02782] 0b55: d4 00 00    	 				 call  dpop16        ; get result from expression stack
[02783] 0b58: 9a          	 				 ghi   ra            ; get MSB from result
[02784] 0b59: 52          	 				 str   r2            ; save in M(X)
[02785] 0b5a: 8a          	 				 glo   ra            ; get LSB from result
[02786] 0b5b: f1          	 				 or                  ; D = MSB | LSB
[02787] 0b5c: c2 0b 7b    	 				 lbz	L167           ; check for branch
[02788]                   	;----- begin stmt ------
[02789]                   	;---- queue lbr L169
[02790]                   	;----- cgjump
[02791] 0b5f: c0 0b 6b    	 				  lbr	L169
[02792]                   
[02793]                   L168:
[02794] 0b62: 66 63 6c 6f   db 'fclose-5'    ;----- cgdefs
              73 65 2d 35 
[02795] 0b6a: 00          	db	$00    ;----- cgdefb
[02796]                   
[02797]                   L169:
[02798]                   	;----- cgldlab
[02799] 0b6b: d4 00 00    	 				call epush16
[02800] 0b6e: 0b 62       	 				  dw  L168
[02801]                   	;----- cgcall
[02802] 0b70: d4 00 08    	          call  Cfail
[02803]                   	;----- cgstack
[02804] 0b73: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02805] 0b76: 00 02       	          dw  2  ;--- offset
[02806] 0b78: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02807]                   	;---- queue dpush
[02808]                   	;----- push + pop data not required, data remains unchanged in RA
[02809]                   	;----- end stmt ------
[02810]                   
[02811]                   L167:
[02812]                   	;----- end if
[02813]                   	;----- end stmt ------
[02814]                   	;----- begin stmt ------
[02815]                   	;---- queue lbr L171
[02816]                   	;----- cgjump
[02817] 0b7b: c0 0b 89    	 				  lbr	L171
[02818]                   
[02819]                   L170:
[02820] 0b7e: 66 74 65 73   db 'ftest4.tmp'    ;----- cgdefs
              74 34 2e 74 
              6d 70 
[02821] 0b88: 00          	db	$00    ;----- cgdefb
[02822]                   
[02823]                   L171:
[02824]                   	;----- cgldlab
[02825] 0b89: d4 00 00    	 				call epush16
[02826] 0b8c: 0b 7e       	 				  dw  L170
[02827]                   	;----- cgcall
[02828] 0b8e: d4 00 00    	          call  Cunlink
[02829]                   	;----- cgstack
[02830] 0b91: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02831] 0b94: 00 02       	          dw  2  ;--- offset
[02832] 0b96: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02833]                   	;---- queue dpush
[02834]                   	;----- push + pop data not required, data remains unchanged in RA
[02835]                   	;----- end stmt ------
[02836]                   
[02837]                   L7:
[02838]                   	;----- cgstack
[02839] 0b99: d4 00 00    	          call  esmove				 ; move pointer for Expression Stack
[02840] 0b9c: 00 0a       	          dw  10  ;--- offset
[02841] 0b9e: c3 00 00    	          lbdf  auto_err			 ; exit immediately when stack is exhausted by auto variables
[02842]                   	;----- cgexit
[02843] 0ba1: e2          	          sex   r2            ; make sure X = SP
[02844] 0ba2: d4 00 00    	          call  escheck       ; check for expression stack creep
[02845] 0ba5: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[02846]                   
[02847] 0baa: d5          	          rtn	  			 	     ; return to caller
[02848]                   	;----- cgpublic
[02849] 0bab:             	              public Cmain
[02850]                   Cmain:
[02851]                     ;----- cgsetup
[02854]                   #endif
[02855]                   	;---- cgentry
[02856] 0bab: e2          	          sex   r2   				 ; make sure X = SP
[02857] 0bac: 9b 73 8b 73 	          push  rb				 		 ; save current BP (base pointer)
[02858] 0bb0: 87 ab 97 bb 	          copy  r7, rb			 	 ; set BP to current ES location
[02859]                   	;----- begin stmt ------
[02860]                   	;----- cgcall
[02861] 0bb4: d4 00 87    	          call  Ctest_stdio2
[02862]                   	;---- queue dpush
[02863]                   	;----- push + pop data not required, data remains unchanged in RA
[02864]                   	;----- end stmt ------
[02865]                   	;----- begin stmt ------
[02866]                   	;----- begin return
[02867]                   	;----- cgldgw
[02868] 0bb7: d4 00 00    	 				call vpush16
[02869] 0bba: 00 02       	 				  dw Cresult
[02870]                   	;----- cgpopd
[02871] 0bbc: d4 00 00    	          call  dpop16   		 ; get result from expression stack
[02872]                   	;---- queue lbr L172
[02873]                   	;----- end return
[02874]                   	;----- end stmt ------
[02875]                   	;---- lbr L172 falls through
[02876]                   
[02877]                   L172:
[02878]                   	;----- cgexit
[02879] 0bbf: e2          	          sex   r2            ; make sure X = SP
[02880] 0bc0: d4 00 00    	          call  escheck       ; check for expression stack creep
[02881] 0bc3: 60 72 ab f0 	          pop   rb				 		 ; restore BP (base pointer)
              bb 
[02882]                   
[02883] 0bc8: d5          	          rtn	  			 	     ; return to caller
[02884]                   	;---- cgpostlude
[02885] 0bc9:             	             endp
